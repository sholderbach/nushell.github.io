<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://www.nushell.sh/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Nushell</title>
    <link>https://www.nushell.sh/</link>
    <description>A new type of shell.</description>
    <language>English</language>
    <pubDate>Wed, 07 Sep 2022 09:35:23 GMT</pubDate>
    <lastBuildDate>Wed, 07 Sep 2022 09:35:23 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <item>
      <title>Nushell 0.68</title>
      <link>https://www.nushell.sh/blog/2022-09-06-nushell-0_68.html</link>
      <guid>https://www.nushell.sh/blog/2022-09-06-nushell-0_68.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.68</source>
      <description> Nushell 0.68
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing version 0.68 of Nu. This is release a rework of modules, a new source-env command, overlay changes, and more.
</description>
      <pubDate>Tue, 06 Sep 2022 23:02:50 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-68" tabindex="-1"> Nushell 0.68</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing version 0.68 of Nu. This is release a rework of modules, a new source-env command, overlay changes, and more.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.68 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.68.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the built-in goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="themes-of-this-release" tabindex="-1"> Themes of this release</h1>
<h2 id="major-changes-rework-of-modules-and-environment" tabindex="-1"> (Major changes!) Rework of modules and environment</h2>
<p><em>Some of the changes here have far-reaching consequences and it might take a while to get the book up to speed.</em></p>
<p>This release includes a bundle of changes to environment handling and modules.
For now, we kept also the old functionality, but in the 0.69, it will be removed.
It is therefore recommended to port your scripts and modules to the new style to avoid breakages in the next release.
You can read a more complete write-up on the motivation and overall design in <a href="https://hackmd.io/@nucore/r1zilyw6q" target="_blank" rel="noopener noreferrer">this document</a>.</p>
<h3 id="source-becomes-source-env-jt-kubouch" tabindex="-1"> <code>source</code> becomes <code>source-env</code> (<a href="https://github.com/nushell/nushell/pull/6277" target="_blank" rel="noopener noreferrer">JT, kubouch</a>)</h3>
<p>One of the most common pitfalls of Nushell was trying to <code>source</code> a dynamic path, such as <code>source ($env.PWD | path join foo.nu)</code>.
Since Nushell is a &quot;compiled&quot; language where commands and aliases are analyzed while parsing (&quot;compiling&quot;) the code, sourcing dynamic paths is not possible for the same reason you cannot dynamically set <code>#include</code> file names in C or <code>use</code> modules in Rust.
You can read a bit more about this in <a href="https://www.nushell.sh/book/thinking_in_nu.html#think-of-nushell-as-a-compiled-language" target="_blank" rel="noopener noreferrer">our Thinking in Nu book chapter</a>.</p>
<p>To address this pitfall, we decided to change <code>source</code> to <code>source-env</code> which can be used to bring in the environment, but not custom commands, aliases and variables anymore.
A benefit of doing so is that it is now <strong>possible to pass dynamic paths</strong>: <code>source-env ($env.PWD | path join foo.nu)</code> would bring in the environment from the <code>foo.nu</code> file.</p>
<p><em>How do you bring in commands and aliases without <code>source</code>?</em> You need to use a module and the <code>use</code> keyword. See our book chapter <a href="https://www.nushell.sh/book/modules.html" target="_blank" rel="noopener noreferrer">about modules</a>, it's quite simple. Alternatively, you can use <a href="https://www.nushell.sh/book/overlays.html" target="_blank" rel="noopener noreferrer">overlays</a>.</p>
<p><em>How do you bring in variables without <code>source</code>?</em> This is not possible anymore. A workaround is to define a command in your module that will return the value you want.</p>
<p><code>source</code> still continues to work in this release but will be removed in 0.69. In 0.69, we will also change all config files to be modules, not plain scripts.</p>
<h3 id="module-envrionment-changes-kubouch-kubouch" tabindex="-1"> Module envrionment changes (<a href="https://github.com/nushell/nushell/pull/6355" target="_blank" rel="noopener noreferrer">kubouch</a>, <a href="https://github.com/nushell/nushell/pull/6382" target="_blank" rel="noopener noreferrer">kubouch</a>)</h3>
<p>The way to define environment variables from modules used to be</p>
<div><pre><code>> module spam {
    export env FOO { 'bar' }
}

> use spam
</code></pre></div><p>This example shows one problem: it is easy to end up with namespaced environment variables, which in this case would be <code>$env.'spam FOO'</code>.
Another problem with the current design is that <code>use</code> is a parser keyword (like the removed <code>source</code>) but contains both parser (&quot;compiled&quot;) and runtime (evaluated) functionality.
Since 0.67, it is possible to <a href="https://github.com/nushell/nushell/pull/6162" target="_blank" rel="noopener noreferrer">use modules within other modules</a> but because environment is 100% handled in runtime, and <code>use</code> never evaluates the module itself, it was impossible to bring in environment variables from other modules inside a module.</p>
<p>Long story short, <code>use</code> (and <code>hide</code>) now handle <strong>only custom commands and aliases</strong>, not environment variables anymore.
If you want to bring both environment and commands/aliases, you need to use the <code>source-env</code> and <code>use</code> commands separately (or use overlays).</p>
<p>Also, we simplified defining the environment in modules. Instead of defining environment variables with <code>export env</code> individually, there is a single <code>export-env { }</code> block for the whole module (see the example in the next section).</p>
<p>If you call <code>source-env</code> on that module, the <code>export-env</code> command will get evaluated and its environment kept in the current scope.</p>
<div><pre><code># spam.nu

export-env {
    let-env FOO = 'foo'
    let-env BAR = 'bar'
}
</code></pre></div><div><pre><code>> source-env spam.nu

> $env.FOO
foo

> $env.BAR
bar
</code></pre></div><p>This release makes <code>export env</code> deprecated and it will be removed in 0.69.</p>
<h3 id="syntax-unification-kubouch" tabindex="-1"> Syntax unification (<a href="https://github.com/nushell/nushell/pull/6357" target="_blank" rel="noopener noreferrer">kubouch</a>)</h3>
<p>Previously, modules had some reserved syntax that was not valid in scripts: the <code>export</code> keywords.
In this release, we allowed <code>export</code> keywords to be used in scripts (they do nothing: <code>export def</code> acts as <code>def</code> etc.) and thus <strong>script syntax is a superset of module syntax</strong>.</p>
<p>Modules can now be evaluated. This is the reason the above example with <code>source-env</code> works: Thanks to the unified syntax, <code>source-env</code> will evaluate the module which evaluates the <code>export-env</code> command inside the module.</p>
<p>Another nice thing about the unified syntax is that commands like <code>nu-highlight</code> now do not break or do not need to rely on heuristics if they are asked to parse a module code. Any module code is a valid script code.</p>
<h3 id="overlay-changes-kubouch-windsoilder" tabindex="-1"> Overlay changes (<a href="https://github.com/nushell/nushell/pull/6425" target="_blank" rel="noopener noreferrer">kubouch</a>, <a href="https://github.com/nushell/nushell/pull/6375" target="_blank" rel="noopener noreferrer">WindSoilder</a>)</h3>
<p><code>overlay add</code> and <code>overlay remove</code> are now renamed to <code>overlay use</code> and <code>overlay hide</code> (see the breaking changes later).</p>
<p>The functionality of these commands remains largely the same with one change being that <code>overlay use</code> will now evaluate the <code>export-env { }</code> block.
Consider this module:</p>
<div><pre><code># spam.nu

export-env {
    load-env {
        FOO: 'foo'
        BAR: 'bar'
    }
}

export def foo [] { 'foo' }
export alias bar = 'bar'
</code></pre></div><p>instead of:</p>
<div><pre><code>> source-env spam.nu

> use spam.nu *
</code></pre></div><p>you can do just:</p>
<div><pre><code>> overlay use spam.nu
</code></pre></div><p>You can think of <code>overlay use</code> as calling <code>source-env</code> and <code>use</code> in one command and putting the result into a new overlay.</p>
<h3 id="summary" tabindex="-1"> Summary</h3>
<p>Here is a table that summarizes the changes:</p>
<table>
<thead>
<tr>
<th>command</th>
<th>previous release (0.67)</th>
<th>this release (0.68)</th>
<th>next release (0.69)</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>source</code></td>
<td>imports everything into the current scope</td>
<td>same (deprecated)</td>
<td>removed</td>
</tr>
<tr>
<td><code>source-env</code></td>
<td>N/A</td>
<td>imports environment variables</td>
<td>same</td>
</tr>
<tr>
<td><code>use</code></td>
<td>imports environment variables, commands and aliases</td>
<td>same</td>
<td>imports only commands and aliases</td>
</tr>
<tr>
<td><code>hide</code></td>
<td>hides enviornment variables, commands and aliases</td>
<td>same</td>
<td>hides only commands and aliases</td>
</tr>
<tr>
<td><code>hide-env</code></td>
<td>hides environment variables</td>
<td>same</td>
<td>same</td>
</tr>
<tr>
<td><code>export env</code></td>
<td>defines a single environment variable in a module</td>
<td>same</td>
<td>removed</td>
</tr>
<tr>
<td><code>export-env</code></td>
<td>N/A</td>
<td>(in a module) defines the envrionment for the whole module</td>
<td>same</td>
</tr>
<tr>
<td><code>export-env</code></td>
<td>N/A</td>
<td>(in a script) when evaluated, preserves the environment from the block</td>
<td>same</td>
</tr>
<tr>
<td><code>export ...</code></td>
<td>only allowed in a module</td>
<td>allowed in a script as well</td>
<td>same</td>
</tr>
<tr>
<td><code>config.nu</code></td>
<td>plain script</td>
<td>plain script</td>
<td>module</td>
</tr>
<tr>
<td><code>env.nu</code></td>
<td>plain script</td>
<td>plain script</td>
<td>module</td>
</tr>
<tr>
<td><code>login.nu</code></td>
<td>plain script</td>
<td>plain script</td>
<td>module</td>
</tr>
</tbody>
</table>
<h2 id="allow-parentheses-around-command-signatures-jt" tabindex="-1"> Allow parentheses around command signatures (<a href="https://github.com/nushell/nushell/pull/6444" target="_blank" rel="noopener noreferrer">JT</a>)</h2>
<p>To bring more familiarity with other languages, we added the option to define command signatures with parentheses <code>()</code> instad of only braces <code>[]</code>:</p>
<div><pre><code>def foo (x: int) { $x + 100 }
</code></pre></div><p>The square braces <code>[]</code> continue to work as well.
This change is intended to test it with a larger audience to decide which one we prefer the most.</p>
<h2 id="we-added-a-new-command-str-distance-which-impelments-the-levenshtein-alorithm-fdncred" tabindex="-1"> We added a new command <code>str distance</code> which impelments the Levenshtein alorithm <a href="https://github.com/nushell/nushell/pull/6383" target="_blank" rel="noopener noreferrer">fdncred</a></h2>
<p>This example shows that the <code>edit distance</code> is one edit step difference using the Levenshtein algorithm.</p>
<div><pre><code><span>></span> <span>'nushell'</span> <span>|</span> str distance <span>'nutshell'</span>
╭──────────┬───╮
│ distance │ <span>1</span> │
╰──────────┴───╯
</code></pre></div><p>We'd eventually like to add more similarity comparision functionality to nushell.</p>
<h2 id="we-added-string-duration-conversion-to-named-durations-fdncred" tabindex="-1"> We added string duration conversion to named durations <a href="https://github.com/nushell/nushell/pull/6406" target="_blank" rel="noopener noreferrer">fdncred</a></h2>
<p>The new parameter on <code>into duration</code> <code>--convert</code> allows you to convert from string durations into named durations.</p>
<div><pre><code><span>></span> <span>'7min'</span> <span>|</span> into duration <span>--convert</span> sec
<span>420</span> sec
</code></pre></div><h2 id="external-completions-experimental-herlon214-rsteube" tabindex="-1"> External Completions (experimental) (<a href="https://github.com/nushell/nushell/pull/6295" target="_blank" rel="noopener noreferrer">herlon214, rsteube</a>)</h2>
<p>In this release, we're trying out integrating Nushell with external completers, instead of relying solely on Nushell ones. It is possible to set the <code>external_completer</code> field in a config to be a block which will be evaluated if no Nushell completions were found. You can configure the block to run an external completer, such as <a href="https://github.com/rsteube/carapace" target="_blank" rel="noopener noreferrer">carapace</a>.</p>
<p>This example should enable carapace external completions:</p>
<div><pre><code># config.nu
let carapace_completer = {|spans|
    carapace $spans.0 nushell $spans | from json
}

# The default config record. This is where much of your global configuration is setup.
let-env config = {
    # ... your config
    external_completer: $carapace_completer
}
</code></pre></div><p>Note that this functionality is not perfectly polished yet and in some cases the external completer is not triggered correctly (see <a href="https://github.com/nushell/nushell/issues/6378" target="_blank" rel="noopener noreferrer">this issue</a>).</p>
<p>It is also possible to extend the parameters passed to the completer block that are required for other tools than carapace, such as cursor position etc.
In theory, this feature could allow you to utilize any existing completions library from any shell, such as bash, as long as you can somehow get a list of completions from them.</p>
<h1 id="breaking-changes" tabindex="-1"> Breaking changes</h1>
<h2 id="renaming-of-all-to-all-any-to-any-and-empty-to-is-empty-adamijak" tabindex="-1"> Renaming of <code>all?</code> to <code>all</code>, <code>any?</code> to <code>any</code>, and <code>empty?</code> to <code>is-empty</code> (<a href="https://github.com/nushell/nushell/pull/6464" target="_blank" rel="noopener noreferrer">adamijak</a>)</h2>
<p>The <code>?</code> suffix on the three commands <code>all?</code>, <code>any?</code>, <code>empty?</code> did not indicate a specific meaning across other commands.
Other commands returning a boolean value, like <code>str contains</code> for example, don't carry the suffix.
To remove a potential source of confusion and to free up the <code>?</code> for potential use in a more meaningful semantic context, we decided to remove the suffix and rename <code>empty?</code> to <code>is-empty</code> to clarify its role.</p>
<p>Please update your scripts accordingly:</p>
<table>
<thead>
<tr>
<th>old name</th>
<th>new name</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>all?</code></td>
<td><code>all</code></td>
</tr>
<tr>
<td><code>any?</code></td>
<td><code>any</code></td>
</tr>
<tr>
<td><code>empty?</code></td>
<td><code>is-empty</code></td>
</tr>
</tbody>
</table>
<h2 id="renaming-overlay-commands-windsoilder" tabindex="-1"> Renaming <code>overlay</code> commands (<a href="https://github.com/nushell/nushell/pull/6375" target="_blank" rel="noopener noreferrer">WindSoilder</a>)</h2>
<table>
<thead>
<tr>
<th>old name</th>
<th>new name</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>overlay add</code></td>
<td><code>overlay use</code></td>
</tr>
<tr>
<td><code>overlay remove</code></td>
<td><code>overlay hide</code></td>
</tr>
</tbody>
</table>
<p>The main reason is that the <code>overlay remove</code> does not <em>really</em> remove the overlay.
It deactivates it and it can be resumed again from where you left off.
Therefore, we felt like <code>hide</code> is a better word to match this functionality and aligns with our existing <code>use</code> and <code>hide</code> keywords.</p>
<h2 id="path-split-behaviour-for-windows-paths-merelymyself" tabindex="-1"> <code>path split</code> behaviour for Windows paths (<a href="https://github.com/nushell/nushell/pull/6485" target="_blank" rel="noopener noreferrer">merelymyself</a>)</h2>
<p><code>path split</code> no longer returns drive letters and the root directory as seperate elements for absolute Windows paths.</p>
<p>Previously, <code> `C:\temp` | path split</code> returned <code>C:</code>, <code>\</code>, and <code>temp</code>. Now it returns <code>C:\</code> and <code>temp</code>.</p>
<h1 id="next-steps" tabindex="-1"> Next Steps</h1>
<p>We've been progressing with our design towards 0.80 as outlined in <a href="https://kubouch.notion.site/4db276462ba24704919edb4cc4b86be7?v=10506505557f4f7b9a65155128c04250" target="_blank" rel="noopener noreferrer">this Notion page</a>.</p>
<p>Some time was spent trying out possible new syntax directions but we were not confident to release them yet. In the next release we'll see a removal of features deprecated in this release and we'll continue to push ahead for the 0.80.</p>
<h1 id="full-changelog" tabindex="-1"> Full changelog</h1>
<h2 id="nushell" tabindex="-1"> Nushell</h2>
<ul>
<li>jt created <a href="https://github.com/nushell/nushell/pull/6501" target="_blank" rel="noopener noreferrer">bump to 0.68</a>, and <a href="https://github.com/nushell/nushell/pull/6446" target="_blank" rel="noopener noreferrer">Reverted &quot;Make <code>$</code> on variable names optional&quot; (just in case)</a>, and <a href="https://github.com/nushell/nushell/pull/6444" target="_blank" rel="noopener noreferrer">Allow parens around signatures</a>, and <a href="https://github.com/nushell/nushell/pull/6434" target="_blank" rel="noopener noreferrer">Make <code>$</code> on variable names optional</a>, and <a href="https://github.com/nushell/nushell/pull/6277" target="_blank" rel="noopener noreferrer">Move from <code>source</code> to <code>source-env</code></a></li>
<li>sholderbach created <a href="https://github.com/nushell/nushell/pull/6497" target="_blank" rel="noopener noreferrer">Pin reedline to 0.11.0 release</a>, and <a href="https://github.com/nushell/nushell/pull/6480" target="_blank" rel="noopener noreferrer">Terminate REPL if not connected to tty input</a>, and <a href="https://github.com/nushell/nushell/pull/6398" target="_blank" rel="noopener noreferrer">Fix search terms for <code>str distance</code></a>, and <a href="https://github.com/nushell/nushell/pull/6390" target="_blank" rel="noopener noreferrer">[Experiment] Reenable CI build cache for tests</a>, and <a href="https://github.com/nushell/nushell/pull/6380" target="_blank" rel="noopener noreferrer">Test command names and search terms for redundancy</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell/pull/6485" target="_blank" rel="noopener noreferrer">let path split keeps 'C:' together</a>, and <a href="https://github.com/nushell/nushell/pull/6463" target="_blank" rel="noopener noreferrer">Allow for rejecting nested record cells</a>, and <a href="https://github.com/nushell/nushell/pull/6391" target="_blank" rel="noopener noreferrer">add tests, deal with pipes, newlines, tabs for <code>to nuon</code></a>, and <a href="https://github.com/nushell/nushell/pull/6379" target="_blank" rel="noopener noreferrer">preserve space by letting <code>to nuon</code> only add quotes when necessary</a>, and <a href="https://github.com/nushell/nushell/pull/6376" target="_blank" rel="noopener noreferrer">let <code>to nuon</code> convert column names with spaces</a>, and <a href="https://github.com/nushell/nushell/pull/6257" target="_blank" rel="noopener noreferrer">default to file completion after first command, add <code>command</code> option for completions</a></li>
<li>unrelentingtech created <a href="https://github.com/nushell/nushell/pull/6483" target="_blank" rel="noopener noreferrer">Avoid update_last_command_context &quot;No command run&quot; error</a>, and <a href="https://github.com/nushell/nushell/pull/6456" target="_blank" rel="noopener noreferrer">Fix build on *BSD, illumos, etc.</a></li>
<li>WindSoilder created <a href="https://github.com/nushell/nushell/pull/6479" target="_blank" rel="noopener noreferrer">Restrict plugin name starts with <code>nu_plugin_</code></a>, and <a href="https://github.com/nushell/nushell/pull/6472" target="_blank" rel="noopener noreferrer">remove capnp relative file</a>, and <a href="https://github.com/nushell/nushell/pull/6442" target="_blank" rel="noopener noreferrer">shows wrong item when some commands runs to failed.</a>, and <a href="https://github.com/nushell/nushell/pull/6437" target="_blank" rel="noopener noreferrer">shows wrong item when each command runs to failed.</a>, and <a href="https://github.com/nushell/nushell/pull/6426" target="_blank" rel="noopener noreferrer">keep raw for variable inputed argument</a>, and <a href="https://github.com/nushell/nushell/pull/6421" target="_blank" rel="noopener noreferrer">remove capnp protocol for plugin...</a>, and <a href="https://github.com/nushell/nushell/pull/6420" target="_blank" rel="noopener noreferrer">Try to make argument with quotes for external command better</a>, and <a href="https://github.com/nushell/nushell/pull/6384" target="_blank" rel="noopener noreferrer">Plugin: Add benchmark for different encoding protocol</a>, and <a href="https://github.com/nushell/nushell/pull/6375" target="_blank" rel="noopener noreferrer">Rename overlay commands</a>, and <a href="https://github.com/nushell/nushell/pull/6273" target="_blank" rel="noopener noreferrer">Try again: in unix like system, set foreground process while running external command</a></li>
<li>kubouch created <a href="https://github.com/nushell/nushell/pull/6477" target="_blank" rel="noopener noreferrer">Disable cyclical module imports</a>, and <a href="https://github.com/nushell/nushell/pull/6475" target="_blank" rel="noopener noreferrer">Fix overlays not preserving hidden env vars</a>, and <a href="https://github.com/nushell/nushell/pull/6474" target="_blank" rel="noopener noreferrer">Fix scoped <code>overlay use</code> not finding a module</a>, and <a href="https://github.com/nushell/nushell/pull/6425" target="_blank" rel="noopener noreferrer">Bring in module's environment when activating overlay</a>, and <a href="https://github.com/nushell/nushell/pull/6382" target="_blank" rel="noopener noreferrer">Allow &quot;export-env&quot; parsing in modules</a>, and <a href="https://github.com/nushell/nushell/pull/6357" target="_blank" rel="noopener noreferrer">Allow parsing modules as scripts</a>, and <a href="https://github.com/nushell/nushell/pull/6355" target="_blank" rel="noopener noreferrer">Add <code>export-env</code> command</a></li>
<li>adamijak created <a href="https://github.com/nushell/nushell/pull/6464" target="_blank" rel="noopener noreferrer">Rename <code>all?</code>, <code>any?</code> and <code>empty?</code></a></li>
<li>dependabot[bot] created <a href="https://github.com/nushell/nushell/pull/6462" target="_blank" rel="noopener noreferrer">Bump lz4-sys from 1.9.3 to 1.9.4</a>, and <a href="https://github.com/nushell/nushell/pull/6448" target="_blank" rel="noopener noreferrer">Bump iana-time-zone from 0.1.44 to 0.1.47</a></li>
<li>obaudys created <a href="https://github.com/nushell/nushell/pull/6457" target="_blank" rel="noopener noreferrer">Fix ps command CPU usage on Apple Silicon M1 macs. #4142</a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell/pull/6454" target="_blank" rel="noopener noreferrer">Revert &quot;Add support for optional list stream output formatting&quot;</a>, and <a href="https://github.com/nushell/nushell/pull/6449" target="_blank" rel="noopener noreferrer">add more color highlighting to help</a>, and <a href="https://github.com/nushell/nushell/pull/6423" target="_blank" rel="noopener noreferrer">add the ast command to peek at the internals of nushell</a>, and <a href="https://github.com/nushell/nushell/pull/6406" target="_blank" rel="noopener noreferrer">convert string duration to named duration</a>, and <a href="https://github.com/nushell/nushell/pull/6395" target="_blank" rel="noopener noreferrer">add a plugin registration script</a>, and <a href="https://github.com/nushell/nushell/pull/6394" target="_blank" rel="noopener noreferrer">add another split words example</a>, and <a href="https://github.com/nushell/nushell/pull/6383" target="_blank" rel="noopener noreferrer">add edit distance/levenshtein command</a>, and <a href="https://github.com/nushell/nushell/pull/6370" target="_blank" rel="noopener noreferrer">add MessagePack as a plugin protocol</a>, and <a href="https://github.com/nushell/nushell/pull/6369" target="_blank" rel="noopener noreferrer">fix the way lists are rendered in markdown</a>, and <a href="https://github.com/nushell/nushell/pull/6363" target="_blank" rel="noopener noreferrer">add a split words command</a>, and <a href="https://github.com/nushell/nushell/pull/6333" target="_blank" rel="noopener noreferrer">create clickable links in ls output if configured</a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell/pull/6453" target="_blank" rel="noopener noreferrer">Upgrade <code>which</code> dependency to fix case on Windows</a>, and <a href="https://github.com/nushell/nushell/pull/6439" target="_blank" rel="noopener noreferrer">Disable clickable links in SSH sessions</a>, and <a href="https://github.com/nushell/nushell/pull/6404" target="_blank" rel="noopener noreferrer">Always report errors in <code>cp</code></a>, and <a href="https://github.com/nushell/nushell/pull/6396" target="_blank" rel="noopener noreferrer">Make <code>cp</code> errors more specific+accurate</a>, and <a href="https://github.com/nushell/nushell/pull/6371" target="_blank" rel="noopener noreferrer">Add pause and cls to cmd.exe exceptions</a></li>
<li>dscottboggs created <a href="https://github.com/nushell/nushell/pull/6430" target="_blank" rel="noopener noreferrer">better error handling for nu_command::env::conig::utils::get_editor</a></li>
<li>nibon7 created <a href="https://github.com/nushell/nushell/pull/6418" target="_blank" rel="noopener noreferrer">Make run_external parameter required</a>, and <a href="https://github.com/nushell/nushell/pull/6411" target="_blank" rel="noopener noreferrer">Fix the span of &quot;invalid time zone&quot;</a>, and <a href="https://github.com/nushell/nushell/pull/6409" target="_blank" rel="noopener noreferrer">register-plugin.nu: refactor register plugin</a>, and <a href="https://github.com/nushell/nushell/pull/6400" target="_blank" rel="noopener noreferrer">register-plugin.nu: remove <code>.exe</code> extension match to simplify code</a>, and <a href="https://github.com/nushell/nushell/pull/6385" target="_blank" rel="noopener noreferrer">Add test cases for $nu.config-path change</a>, and <a href="https://github.com/nushell/nushell/pull/6366" target="_blank" rel="noopener noreferrer">Get <code>$nu.config-path</code> and <code>$nu.env-path</code> from <code>EngineState</code></a>, and <a href="https://github.com/nushell/nushell/pull/6365" target="_blank" rel="noopener noreferrer">Use string interpolation to construct log file path</a>, and <a href="https://github.com/nushell/nushell/pull/6354" target="_blank" rel="noopener noreferrer">Return error when <code>kill</code> didn't terminate successfully </a></li>
<li>herlon214 created <a href="https://github.com/nushell/nushell/pull/6412" target="_blank" rel="noopener noreferrer">nu-command/filters: drop column check positive value</a>, and <a href="https://github.com/nushell/nushell/pull/6389" target="_blank" rel="noopener noreferrer">nu-cli: merge completions tests into one file</a>, and <a href="https://github.com/nushell/nushell/pull/6295" target="_blank" rel="noopener noreferrer">feat: external completions for commands/flags</a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell/pull/6361" target="_blank" rel="noopener noreferrer">Update nu version for release workflow</a>, and <a href="https://github.com/nushell/nushell/pull/6350" target="_blank" rel="noopener noreferrer">Bump dev version</a></li>
<li>volucris1 created <a href="https://github.com/nushell/nushell/pull/6332" target="_blank" rel="noopener noreferrer">Fix #6330</a></li>
<li>panicbit created <a href="https://github.com/nushell/nushell/pull/6325" target="_blank" rel="noopener noreferrer">Add support for optional list stream output formatting</a></li>
<li>dbuch created <a href="https://github.com/nushell/nushell/pull/6322" target="_blank" rel="noopener noreferrer">Fix slice indexing</a></li>
<li>CohenAriel created <a href="https://github.com/nushell/nushell/pull/6302" target="_blank" rel="noopener noreferrer">Add --execute option</a></li>
</ul>
<h2 id="documentation" tabindex="-1"> Documentation</h2>
<ul>
<li>rgwood created <a href="https://github.com/nushell/nushell.github.io/pull/592" target="_blank" rel="noopener noreferrer">Add Homebrew PATH documentation</a></li>
<li>sholderbach created <a href="https://github.com/nushell/nushell.github.io/pull/590" target="_blank" rel="noopener noreferrer">Update former question mark commands in docs</a></li>
<li>chrjen created <a href="https://github.com/nushell/nushell.github.io/pull/589" target="_blank" rel="noopener noreferrer">Update types_of_data.md with missing values</a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell.github.io/pull/588" target="_blank" rel="noopener noreferrer">Upgrade vuepress and all related plugins to improve build performance</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/587" target="_blank" rel="noopener noreferrer">Upgrade all vuepress plugins and fix doc search navigation by pressing <code>enter</code> key</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/586" target="_blank" rel="noopener noreferrer">Upgrade  all vuepress plugins and fix doc search navigation by pressing <code>enter</code> key</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/585" target="_blank" rel="noopener noreferrer">Try to fix deploy of docs by downgrade some plugins</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/582" target="_blank" rel="noopener noreferrer">lock vuepress and plugins version to fix ci</a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell.github.io/pull/584" target="_blank" rel="noopener noreferrer">update to ubuntu-latest</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/583" target="_blank" rel="noopener noreferrer">change from deprecated version of ubuntu</a></li>
<li>pedromfedricci created <a href="https://github.com/nushell/nushell.github.io/pull/580" target="_blank" rel="noopener noreferrer">Update accepted types for signatures</a></li>
<li>Yethal created <a href="https://github.com/nushell/nushell.github.io/pull/579" target="_blank" rel="noopener noreferrer">Add wrap-around merge</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell.github.io/pull/577" target="_blank" rel="noopener noreferrer">Remove ambiguity about command quotes</a></li>
<li>CAD97 created <a href="https://github.com/nushell/nushell.github.io/pull/573" target="_blank" rel="noopener noreferrer">Note status of calling CMD builtins from Nushell</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/572" target="_blank" rel="noopener noreferrer">Note Windows caveat in Escaping to the System</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/571" target="_blank" rel="noopener noreferrer">Mention coming_from_cmd in coming_to_nu</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/570" target="_blank" rel="noopener noreferrer">Update coming_from_cmd.md for nu 0.77</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/567" target="_blank" rel="noopener noreferrer">Create coming_from_cmd.md</a></li>
<li>1submarine created <a href="https://github.com/nushell/nushell.github.io/pull/569" target="_blank" rel="noopener noreferrer">correct escapes in coming_from_bash.md</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/568" target="_blank" rel="noopener noreferrer">deduplicate `**' in operators.md</a></li>
<li>amtoine created <a href="https://github.com/nushell/nushell.github.io/pull/565" target="_blank" rel="noopener noreferrer">FIX: <code>overlay remove</code> flags</a></li>
</ul>
<h2 id="nu-scripts" tabindex="-1"> Nu Scripts</h2>
<ul>
<li>dandavison created <a href="https://github.com/nushell/nu_scripts/pull/288" target="_blank" rel="noopener noreferrer">Async git prompt</a></li>
<li>sholderbach created <a href="https://github.com/nushell/nu_scripts/pull/287" target="_blank" rel="noopener noreferrer">Update old question mark commands <code>any?</code>/<code>all?</code>/<code>empty?</code> to <code>any</code>/<code>all</code>/<code>is-empty</code></a></li>
<li>skelly37 created <a href="https://github.com/nushell/nu_scripts/pull/284" target="_blank" rel="noopener noreferrer">Added German diacritics</a></li>
<li>Yethal created <a href="https://github.com/nushell/nu_scripts/pull/283" target="_blank" rel="noopener noreferrer">Add function to remove diacritics from string</a></li>
<li>fdncred created <a href="https://github.com/nushell/nu_scripts/pull/282" target="_blank" rel="noopener noreferrer">remove engine-q references</a></li>
<li>e2dk4r created <a href="https://github.com/nushell/nu_scripts/pull/281" target="_blank" rel="noopener noreferrer">custom completions: scoop: add some missing command completions</a>, and <a href="https://github.com/nushell/nu_scripts/pull/280" target="_blank" rel="noopener noreferrer">custom completions: scoop: add some missing command completions</a></li>
<li>mk00pl created <a href="https://github.com/nushell/nu_scripts/pull/279" target="_blank" rel="noopener noreferrer">added webscrapping script for twitter</a></li>
<li>azzamsa created <a href="https://github.com/nushell/nu_scripts/pull/278" target="_blank" rel="noopener noreferrer">fix: zoxide support Nushell out of the box</a></li>
</ul>
<h2 id="reedline" tabindex="-1"> reedline</h2>
<ul>
<li>sholderbach created <a href="https://github.com/nushell/reedline/pull/471" target="_blank" rel="noopener noreferrer">Prepare 0.11.0 release</a></li>
<li>unrelentingtech created <a href="https://github.com/nushell/reedline/pull/470" target="_blank" rel="noopener noreferrer">Add Reedline::has_last_command_context to allow checking if update_last_command_context will fail</a></li>
<li>nibon7 created <a href="https://github.com/nushell/reedline/pull/469" target="_blank" rel="noopener noreferrer">Fix panic when using sqlite as history backend</a></li>
<li>morzel85 created <a href="https://github.com/nushell/reedline/pull/466" target="_blank" rel="noopener noreferrer">README.md outline cleanup</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.67</title>
      <link>https://www.nushell.sh/blog/2022-08-16-nushell-0_67.html</link>
      <guid>https://www.nushell.sh/blog/2022-08-16-nushell-0_67.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.67</source>
      <description> Nushell 0.67
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing version 0.67 of Nu. This is release includes a new variable naming convention, improvements to module imports and file sourcing, and more.
</description>
      <pubDate>Wed, 17 Aug 2022 05:08:34 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-67" tabindex="-1"> Nushell 0.67</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing version 0.67 of Nu. This is release includes a new variable naming convention, improvements to module imports and file sourcing, and more.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.67 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.67.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the built-in goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="themes-of-this-release" tabindex="-1"> Themes of this release</h1>
<h2 id="we-have-a-new-welcome-banner-fdncred" tabindex="-1"> We have a new welcome banner (<a href="https://github.com/nushell/nushell/pull/6163" target="_blank" rel="noopener noreferrer">fdncred</a>)</h2>
<p><img src="@source/assets/images/0_67_header.png" alt="New Nushell banner"></p>
<p>You can disable the banner using the <code>config nu</code> command to modify the config.nu file, just set <code>show_banner</code> to false:</p>
<div><pre><code>let-env config {
    show_banner: false
    ...
}
</code></pre></div><h2 id="new-variable-naming-convention-jt" tabindex="-1"> New variable naming convention (<a href="https://github.com/nushell/nushell/pull/6125" target="_blank" rel="noopener noreferrer">jt</a>)</h2>
<p><strong>WARNING! Breaking change!</strong></p>
<p>In this release, we cleaned up some of the syntax parsing.
The major implication of it is that variable names can no longer contain <code>-</code> characters in it.
Make sure to rename your variables from <code>kebab-case</code> to <code>snake_case</code>.
This is true also for variables created from command flags.
For example, a <code>--foo-bar</code> flag in a command signature will be referenced by a <code>$foo_bar</code> variable.</p>
<h2 id="relative-paths-in-scripts-are-file-relative-kubouch" tabindex="-1"> Relative paths in scripts are file-relative (<a href="https://github.com/nushell/nushell/pull/6150" target="_blank" rel="noopener noreferrer">kubouch</a>)</h2>
<p>When you use <code>source</code>, <code>use</code>, or <code>overlay add</code> with a relative path in a script or a module file, the path is assumed to be relative to the file, not the current working directory.</p>
<p>Example:</p>
<div><pre><code># script.nu

use foo.nu *  # foo.nu is assumed to be relative to script.nu
</code></pre></div><h2 id="writing-sqlite-files-fdncred" tabindex="-1"> Writing SQLite files (<a href="https://github.com/nushell/nushell/pull/6266" target="_blank" rel="noopener noreferrer">fdncred</a>)</h2>
<p>We added a fun way to create SQLite databases:</p>
<div><pre><code># create a database with a single table named `main`
ls | into sqlite my_ls.db

# same, but name the table `foo`
ls | into sqlite my_ls.db -t foo
</code></pre></div><p>Previously Nushell was limited to reading SQLite database files. Now we allow you to take tables or lists and create database files like <code>ls | into sqlite my_ls.db</code>. Currently this functionality works with regular table output from commands, table literals like <code>[[col1 col2]; [a b] [c d]]</code> and lists like <code>[one 10mib 20sec 2 2.5]</code>.</p>
<h2 id="shell-integration-fdncred-and-tyriar" tabindex="-1"> Shell integration (<a href="https://github.com/nushell/nushell/pull/6087" target="_blank" rel="noopener noreferrer">fdncred and Tyriar</a>)</h2>
<p>@fdncred worked with @Tyriar from the Visual Studio Code team on shell integration. Now Nushell will display round blue/red/gray decorations indicating the start of commands in the <a href="https://code.visualstudio.com/docs/terminal/shell-integration" target="_blank" rel="noopener noreferrer">VS Code terminal</a>:</p>
<p><img src="@source/assets/images/0_67_vs_code.png" alt="VS Code decorations"></p>
<h2 id="error-messages-rgwood" tabindex="-1"> Error Messages (<a href="https://github.com/nushell/nushell/pull/6256" target="_blank" rel="noopener noreferrer">rgwood</a>)</h2>
<p><img src="@source/assets/images/0_67_error_message.png" alt="new command not found error message"></p>
<p>The error message when an external command is not found has been improved. Nu now displays fancy <a href="https://github.com/zkat/miette" target="_blank" rel="noopener noreferrer"><code>miette</code></a> errors on all platforms including Windows, and it offers helpful suggestions for typos and mistaken command names.</p>
<h2 id="windows-cmd-exe-changes-rgwood" tabindex="-1"> Windows <code>cmd.exe</code> changes (<a href="https://github.com/nushell/nushell/pulls?q=is%3Apr+is%3Aclosed+author%3Argwood+cmd" target="_blank" rel="noopener noreferrer">rgwood</a>)</h2>
<p>Potentially breaking change: Nu no longer &quot;shells out&quot; to <code>cmd.exe</code> for any command that can't be found - only <a href="https://github.com/rgwood/nushell/blob/00bace9e82d3f3e3e337c510ce6cef0818ade7aa/crates/nu-command/src/system/run_external.rs#L134" target="_blank" rel="noopener noreferrer">a few known <code>cmd.exe</code> internal commands</a>. This change improves error handling and error messages, but let us know if it causes you any trouble.</p>
<h2 id="bits-and-bytes-hustcer-and-windsoilder" tabindex="-1"> Bits and Bytes (hustcer and WindSoilder)</h2>
<p>Nushell now has a full array of <code>bits</code> and <code>bytes</code> commands for working with binary data. @hustcer and @WindSoilder implemented the following:</p>
<ul>
<li><a href="https://github.com/nushell/nushell/pull/6224" target="_blank" rel="noopener noreferrer">bits ror and bits rol</a></li>
<li><a href="https://github.com/nushell/nushell/pull/6202" target="_blank" rel="noopener noreferrer">bits shl and bits shr</a></li>
<li><a href="https://github.com/nushell/nushell/pull/6190" target="_blank" rel="noopener noreferrer">bits or and bits xor</a></li>
<li><a href="https://github.com/nushell/nushell/pull/6188" target="_blank" rel="noopener noreferrer">bits root command and bits and</a></li>
<li><a href="https://github.com/nushell/nushell/pull/6143" target="_blank" rel="noopener noreferrer">bits not</a></li>
</ul>
<h2 id="hiding-environment-variables-kubouch" tabindex="-1"> Hiding Environment Variables (<a href="https://github.com/nushell/nushell/pull/6313" target="_blank" rel="noopener noreferrer">kubouch</a>)</h2>
<p>A new <code>hide-env</code> command is added that can hide environmnet variables in the current scope.
<code>hide</code> still retains this functionality, but in the future, we expect <code>hide</code> to be able to hide only parser definitions (commands and aliases).
It is therefore recommended to change your <code>hide</code> calls to <code>hide-env</code> when dealing with environment variables.</p>
<p>Unlike <code>hide</code>, <code>hide-env</code> has a slightly different signature: It accepts multiple arguments and the arguments can be constructed dynamically:</p>
<div><pre><code>> load-env {
    ENV_FOO: 'foo'
    ENV_BAR: 'bar'
}

> let prefix = 'ENV_'

> hide-env ($prefix + 'FOO') ($prefix + 'BAR')
</code></pre></div><h2 id="prefixed-overlays-kubouch" tabindex="-1"> Prefixed Overlays (<a href="https://github.com/nushell/nushell/pull/6301" target="_blank" rel="noopener noreferrer">kubouch</a>)</h2>
<p>The <code>overlay add spam</code> command would take all commands and aliases from the module and put them directly into the current namespace.
Sometimes, however, you might want them behind a prefix.
That's what <code>--prefix</code> is for.
Here is an example:</p>
<div><pre><code>> module spam {
    export def foo [] { "foo" }
}

> overlay add --prefix spam

> spam foo
foo
</code></pre></div><h2 id="customize-added-overlay-name-kubouch" tabindex="-1"> Customize Added Overlay Name (<a href="https://github.com/nushell/nushell/pull/6314" target="_blank" rel="noopener noreferrer">kubouch</a>)</h2>
<p>You can now change the name of the added overlay using the new <code>as</code> keyword:</p>
<div><pre><code>> module spam { export def foo [] { "foo" } }

> overlay add spam as eggs

> overlay list | last
eggs

> foo
foo

> overlay remove eggs
</code></pre></div><p>This can be useful if you have a generic script name, such as virtualenv's <code>activate.nu</code> but you want some more descriptive name for your overlay.</p>
<p>It is also compatible with the <code>--prefix</code> flag introduced above.</p>
<h1 id="next-steps" tabindex="-1"> Next Steps</h1>
<p>Time for a new engine!</p>
<p>We've been looking through the fixes we'd need for some of the issues we're seeing and decided Nushell's core needs a thorough refactor. On <a href="https://kubouch.notion.site/4db276462ba24704919edb4cc4b86be7?v=10506505557f4f7b9a65155128c04250" target="_blank" rel="noopener noreferrer">this Notion page</a> we started gathering ideas and design notes about features that we think should make it to the update. You can click the cards and they should expand into more detailed notes.</p>
<p>Many (most?) ideas are not polished yet and we need to work on the full design before we start the implementation. Therefore, we would like you to invite you to participate in the discussion. If you have questions, comments and ideas, please channel them to our <code>#design-discussion</code> channel on <a href="https://discord.com/invite/NtAbbGn" target="_blank" rel="noopener noreferrer">our Discord</a>. We especially welcome thorough design writeups. You can even &quot;adopt&quot; a topic and specialize in it, if you wish. And of course, later, we'll need help implementing everything.</p>
<p>By the end of this, we'll be heading towards 0.80 which should have all, or most of, the features we want for 1.0 and the work from 0.80 to 1.0 is expected to be mostly polish, bugfixes, IDE integrations, stabilizing the language, etc.</p>
<p>Oh, and if you're scared this will turn into another engine-q, this time our goal is to try to make the updates incrementally instead of building a new Nushell on the side and then replacing everything.</p>
<h1 id="full-changelog" tabindex="-1"> Full changelog</h1>
<h2 id="nushell" tabindex="-1"> Nushell</h2>
<ul>
<li>jt created <a href="https://github.com/nushell/nushell/pull/6336" target="_blank" rel="noopener noreferrer">bump to 0.67</a>, and <a href="https://github.com/nushell/nushell/pull/6268" target="_blank" rel="noopener noreferrer">Fix intermittent test crash</a>, and <a href="https://github.com/nushell/nushell/pull/6267" target="_blank" rel="noopener noreferrer">bump dev version ahead of language changes</a>, and <a href="https://github.com/nushell/nushell/pull/6175" target="_blank" rel="noopener noreferrer">Move <code>ls</code> back to last-known-good state</a>, and <a href="https://github.com/nushell/nushell/pull/6169" target="_blank" rel="noopener noreferrer">Revert cp and mv back to last-known-good state</a></li>
<li>skelly37 created <a href="https://github.com/nushell/nushell/pull/6329" target="_blank" rel="noopener noreferrer">Bug issue template</a></li>
<li>sholderbach created <a href="https://github.com/nushell/nushell/pull/6327" target="_blank" rel="noopener noreferrer">Update to reedline 0.10.0</a>, and <a href="https://github.com/nushell/nushell/pull/6326" target="_blank" rel="noopener noreferrer">Update reedline to improved undo-system</a>, and <a href="https://github.com/nushell/nushell/pull/6299" target="_blank" rel="noopener noreferrer">Clippy fix for Rust 1.63</a>, and <a href="https://github.com/nushell/nushell/pull/6215" target="_blank" rel="noopener noreferrer">Reduce dev-deps by narrowing <code>rstest</code> features</a>, and <a href="https://github.com/nushell/nushell/pull/6211" target="_blank" rel="noopener noreferrer">Make <code>open</code> test independent of locale</a>, and <a href="https://github.com/nushell/nushell/pull/6210" target="_blank" rel="noopener noreferrer">Patch <code>lscolors</code> to not blink</a>, and <a href="https://github.com/nushell/nushell/pull/6172" target="_blank" rel="noopener noreferrer">Update crossterm to version 0.24</a></li>
<li>elferherrera created <a href="https://github.com/nushell/nushell/pull/6321" target="_blank" rel="noopener noreferrer">lazy dataframe reader</a>, and <a href="https://github.com/nushell/nushell/pull/6303" target="_blank" rel="noopener noreferrer">Polars upgrade 0.23</a>, and <a href="https://github.com/nushell/nushell/pull/6217" target="_blank" rel="noopener noreferrer">sqlite query without collect</a>, and <a href="https://github.com/nushell/nushell/pull/6205" target="_blank" rel="noopener noreferrer">use <code>from table</code> to remove into-db command</a>, and <a href="https://github.com/nushell/nushell/pull/6161" target="_blank" rel="noopener noreferrer">maintain quotes for arguments</a></li>
<li>amtep created <a href="https://github.com/nushell/nushell/pull/6320" target="_blank" rel="noopener noreferrer">Add repository info to all workspace crates</a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell/pull/6317" target="_blank" rel="noopener noreferrer">Bump chrono dependency to fix panic</a>, and <a href="https://github.com/nushell/nushell/pull/6311" target="_blank" rel="noopener noreferrer">run_external: only suggest alternatives when file not found</a>, and <a href="https://github.com/nushell/nushell/pull/6308" target="_blank" rel="noopener noreferrer">Clarify external command error</a>, and <a href="https://github.com/nushell/nushell/pull/6281" target="_blank" rel="noopener noreferrer">Fix unused import warning on Linux+Mac</a>, and <a href="https://github.com/nushell/nushell/pull/6279" target="_blank" rel="noopener noreferrer">Temporary: ignore Windows tests that fail on a local machine</a>, and <a href="https://github.com/nushell/nushell/pull/6278" target="_blank" rel="noopener noreferrer">Support running batch files without typing their extension</a>, and <a href="https://github.com/nushell/nushell/pull/6260" target="_blank" rel="noopener noreferrer">Clean up deprecated commands</a>, and <a href="https://github.com/nushell/nushell/pull/6256" target="_blank" rel="noopener noreferrer">Suggest alternative when command not found</a>, and <a href="https://github.com/nushell/nushell/pull/6253" target="_blank" rel="noopener noreferrer">Windows: only shell out to cmd for specific commands</a>, and <a href="https://github.com/nushell/nushell/pull/6204" target="_blank" rel="noopener noreferrer">Faster SQLite reads</a>, and <a href="https://github.com/nushell/nushell/pull/6200" target="_blank" rel="noopener noreferrer">Change <code>query</code> command to <code>query db</code></a>, and <a href="https://github.com/nushell/nushell/pull/6194" target="_blank" rel="noopener noreferrer">Add $OLDPWD example for cd</a></li>
<li>kubouch created <a href="https://github.com/nushell/nushell/pull/6314" target="_blank" rel="noopener noreferrer">Add 'as' keyword to 'overlay add'</a>, and <a href="https://github.com/nushell/nushell/pull/6313" target="_blank" rel="noopener noreferrer">Add <code>hide-env</code> to hide environment variables</a>, and <a href="https://github.com/nushell/nushell/pull/6309" target="_blank" rel="noopener noreferrer">Fix environment merging in hooks</a>, and <a href="https://github.com/nushell/nushell/pull/6301" target="_blank" rel="noopener noreferrer">Allow overlays to import prefixed definitions</a>, and <a href="https://github.com/nushell/nushell/pull/6185" target="_blank" rel="noopener noreferrer">Fix file lookup in parser keywords; Refactor nu_repl</a>, and <a href="https://github.com/nushell/nushell/pull/6168" target="_blank" rel="noopener noreferrer">Quickly patch wrong 'export' command name</a>, and <a href="https://github.com/nushell/nushell/pull/6162" target="_blank" rel="noopener noreferrer">Allow modules to <code>use</code> other modules</a></li>
<li>andrasio created <a href="https://github.com/nushell/nushell/pull/6312" target="_blank" rel="noopener noreferrer">cmd(df/first): returns the first row by default.</a></li>
<li>WindSoilder created <a href="https://github.com/nushell/nushell/pull/6306" target="_blank" rel="noopener noreferrer">make <code>date format</code> supports locale</a>, and <a href="https://github.com/nushell/nushell/pull/6304" target="_blank" rel="noopener noreferrer">not resolve symlink</a>, and <a href="https://github.com/nushell/nushell/pull/6261" target="_blank" rel="noopener noreferrer">when spawned process during register plugin, pass env to child process</a>, and <a href="https://github.com/nushell/nushell/pull/6255" target="_blank" rel="noopener noreferrer">add -n for path expand, so it doesn't follow symlink</a>, and <a href="https://github.com/nushell/nushell/pull/6242" target="_blank" rel="noopener noreferrer">fix python plugin example</a>, and <a href="https://github.com/nushell/nushell/pull/6206" target="_blank" rel="noopener noreferrer">In unix like system, set foreground process while running external command</a>, and <a href="https://github.com/nushell/nushell/pull/6176" target="_blank" rel="noopener noreferrer">Make default env works better with bash style PATH</a>, and <a href="https://github.com/nushell/nushell/pull/6143" target="_blank" rel="noopener noreferrer">Add bits not command</a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell/pull/6305" target="_blank" rel="noopener noreferrer">make ci use rust-toolchain.toml</a>, and <a href="https://github.com/nushell/nushell/pull/6298" target="_blank" rel="noopener noreferrer">add rust toolchain file to pin rust version</a>, and <a href="https://github.com/nushell/nushell/pull/6296" target="_blank" rel="noopener noreferrer">update build scripts</a>, and <a href="https://github.com/nushell/nushell/pull/6292" target="_blank" rel="noopener noreferrer">Revert &quot;Allow using the system's copy of zstd for Polars&quot;</a>, and <a href="https://github.com/nushell/nushell/pull/6291" target="_blank" rel="noopener noreferrer">update a few nushell dependencies</a>, and <a href="https://github.com/nushell/nushell/pull/6290" target="_blank" rel="noopener noreferrer">remove sharkdp's lscolors repo again</a>, and <a href="https://github.com/nushell/nushell/pull/6288" target="_blank" rel="noopener noreferrer">add search terms to ignore command</a>, and <a href="https://github.com/nushell/nushell/pull/6272" target="_blank" rel="noopener noreferrer">bump lscolors to v12.0</a>, and <a href="https://github.com/nushell/nushell/pull/6271" target="_blank" rel="noopener noreferrer">escape single quotes and remove ansi escape sequences</a>, and <a href="https://github.com/nushell/nushell/pull/6266" target="_blank" rel="noopener noreferrer">new command <code>into sqlite</code> allows you to take lists and create a sqlite database</a>, and <a href="https://github.com/nushell/nushell/pull/6259" target="_blank" rel="noopener noreferrer">add more verbose error messages to mv</a>, and <a href="https://github.com/nushell/nushell/pull/6230" target="_blank" rel="noopener noreferrer">point to the latest main branch for lscolors</a>, and <a href="https://github.com/nushell/nushell/pull/6228" target="_blank" rel="noopener noreferrer">remove the nana filename string, add some exclusions to gitignore</a>, and <a href="https://github.com/nushell/nushell/pull/6227" target="_blank" rel="noopener noreferrer">replace the regex crate with the fancy-regex crate</a>, and <a href="https://github.com/nushell/nushell/pull/6199" target="_blank" rel="noopener noreferrer">allow uppercase chars to be captured during suppressed input</a>, and <a href="https://github.com/nushell/nushell/pull/6163" target="_blank" rel="noopener noreferrer">add a new welcome banner to nushell</a>, and <a href="https://github.com/nushell/nushell/pull/6153" target="_blank" rel="noopener noreferrer">move application reset mode ansi sequence after cmdline execute</a></li>
<li>nibon7 created <a href="https://github.com/nushell/nushell/pull/6293" target="_blank" rel="noopener noreferrer">Add custom log target to debugging tips</a>, and <a href="https://github.com/nushell/nushell/pull/6289" target="_blank" rel="noopener noreferrer">Fix panic when building without git</a>, and <a href="https://github.com/nushell/nushell/pull/6285" target="_blank" rel="noopener noreferrer">Fix color settings for logger</a>, and <a href="https://github.com/nushell/nushell/pull/6284" target="_blank" rel="noopener noreferrer">Return error when moving a source directory to a target directory whi…</a>, and <a href="https://github.com/nushell/nushell/pull/6274" target="_blank" rel="noopener noreferrer">Replace pretty_env_logger with simplelog</a>, and <a href="https://github.com/nushell/nushell/pull/6262" target="_blank" rel="noopener noreferrer">Refactor shell listing related code</a>, and <a href="https://github.com/nushell/nushell/pull/6258" target="_blank" rel="noopener noreferrer">Refactor shell switching related code</a>, and <a href="https://github.com/nushell/nushell/pull/6249" target="_blank" rel="noopener noreferrer">Make <code>g -</code> switch to the last used shell </a>, and <a href="https://github.com/nushell/nushell/pull/6236" target="_blank" rel="noopener noreferrer">export <code>get_shells</code> and <code>get_current_shell</code></a>, and <a href="https://github.com/nushell/nushell/pull/6234" target="_blank" rel="noopener noreferrer">Fix color parsing</a>, and <a href="https://github.com/nushell/nushell/pull/6193" target="_blank" rel="noopener noreferrer">Return error early if seconds part of timestamp is invalid</a>, and <a href="https://github.com/nushell/nushell/pull/6181" target="_blank" rel="noopener noreferrer">Fix touch panics when using invalid timestamp</a>, and <a href="https://github.com/nushell/nushell/pull/6173" target="_blank" rel="noopener noreferrer">Fix path_contains_hidden_folder</a>, and <a href="https://github.com/nushell/nushell/pull/6171" target="_blank" rel="noopener noreferrer">Prevent mv panic again</a>, and <a href="https://github.com/nushell/nushell/pull/6158" target="_blank" rel="noopener noreferrer">Prevent mv panic</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell/pull/6246" target="_blank" rel="noopener noreferrer">fix examples and let <code>into decimal</code> convert bools too</a>, and <a href="https://github.com/nushell/nushell/pull/6220" target="_blank" rel="noopener noreferrer">make <code>cd</code>, <code>cp</code>, <code>ls</code>, <code>mv</code>, <code>open</code> and <code>rm</code> automatically strip ansi codes</a>, and <a href="https://github.com/nushell/nushell/pull/6189" target="_blank" rel="noopener noreferrer">allow <code>-h</code> flags for <code>export</code> subcommands</a>, and <a href="https://github.com/nushell/nushell/pull/6149" target="_blank" rel="noopener noreferrer">adds a <code>config reset</code> command</a></li>
<li>Kangaxx-0 created <a href="https://github.com/nushell/nushell/pull/6241" target="_blank" rel="noopener noreferrer">Fix issue 6223</a>, and <a href="https://github.com/nushell/nushell/pull/6187" target="_blank" rel="noopener noreferrer">Tweak how nu identifies custom command</a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell/pull/6235" target="_blank" rel="noopener noreferrer">upgrade chrono to v0.4.20</a>, and <a href="https://github.com/nushell/nushell/pull/6226" target="_blank" rel="noopener noreferrer">Some code refactor for shells related commands</a>, and <a href="https://github.com/nushell/nushell/pull/6224" target="_blank" rel="noopener noreferrer">add <code>bits ror</code> and <code>bits rol</code> commands</a>, and <a href="https://github.com/nushell/nushell/pull/6202" target="_blank" rel="noopener noreferrer">Add <code>bits shl</code> and <code>bits shr</code> command</a>, and <a href="https://github.com/nushell/nushell/pull/6190" target="_blank" rel="noopener noreferrer">Add <code>bits or</code> and <code>bits xor</code> command</a>, and <a href="https://github.com/nushell/nushell/pull/6188" target="_blank" rel="noopener noreferrer">Add bits root command and <code>bits and</code> command</a>, and <a href="https://github.com/nushell/nushell/pull/6183" target="_blank" rel="noopener noreferrer">bump to 0.66.3 dev version</a></li>
<li>winterqt created <a href="https://github.com/nushell/nushell/pull/6232" target="_blank" rel="noopener noreferrer">Allow using the system's copy of zstd for Polars</a></li>
<li>x3rAx created <a href="https://github.com/nushell/nushell/pull/6085" target="_blank" rel="noopener noreferrer">Add decimals to int when using <code>into string --decimals</code></a></li>
</ul>
<h2 id="extension" tabindex="-1"> Extension</h2>
<ul>
<li>fdncred created <a href="https://github.com/nushell/vscode-nushell-lang/pull/58" target="_blank" rel="noopener noreferrer">one last tweak before release</a>, and <a href="https://github.com/nushell/vscode-nushell-lang/pull/57" target="_blank" rel="noopener noreferrer">prepare for new release</a>, and <a href="https://github.com/nushell/vscode-nushell-lang/pull/56" target="_blank" rel="noopener noreferrer">update gitignore</a></li>
<li>Yethal created <a href="https://github.com/nushell/vscode-nushell-lang/pull/54" target="_blank" rel="noopener noreferrer">Updated patterns and added generation script</a></li>
</ul>
<h2 id="documentation" tabindex="-1"> Documentation</h2>
<ul>
<li>amtoine created <a href="https://github.com/nushell/nushell.github.io/pull/562" target="_blank" rel="noopener noreferrer">FIX: there is a minor typo in the modules page</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/552" target="_blank" rel="noopener noreferrer">FIX: update the links to the default config files</a></li>
<li>johnae created <a href="https://github.com/nushell/nushell.github.io/pull/561" target="_blank" rel="noopener noreferrer">Update direnv.md</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/555" target="_blank" rel="noopener noreferrer">Update config.js/cookbook with direnv example</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/554" target="_blank" rel="noopener noreferrer">Create direnv.md</a></li>
<li>azzamsa created <a href="https://github.com/nushell/nushell.github.io/pull/560" target="_blank" rel="noopener noreferrer">docs: fix grammar error</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/559" target="_blank" rel="noopener noreferrer">docs: contributing workflow is outdated</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/558" target="_blank" rel="noopener noreferrer">fix: all clickable items should have the same color</a></li>
<li>kubouch created <a href="https://github.com/nushell/nushell.github.io/pull/557" target="_blank" rel="noopener noreferrer">Document hide-env and overlay additions</a></li>
<li>willemneal created <a href="https://github.com/nushell/nushell.github.io/pull/553" target="_blank" rel="noopener noreferrer">chore: small edit</a></li>
<li>jeremiahpslewis created <a href="https://github.com/nushell/nushell.github.io/pull/550" target="_blank" rel="noopener noreferrer">Update links to config template</a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell.github.io/pull/549" target="_blank" rel="noopener noreferrer">Document SQLite data loading</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/546" target="_blank" rel="noopener noreferrer">Explain how to launch Nu after installing</a></li>
<li>petrisch created <a href="https://github.com/nushell/nushell.github.io/pull/548" target="_blank" rel="noopener noreferrer">DE Translation for Coloring and Theming </a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell.github.io/pull/547" target="_blank" rel="noopener noreferrer">update gitignore</a></li>
</ul>
<h2 id="nu-scripts" tabindex="-1"> Nu_Scripts</h2>
<ul>
<li>johnae created <a href="https://github.com/nushell/nu_scripts/pull/276" target="_blank" rel="noopener noreferrer">Update direnv example to run in pre_prompt rather than env_change</a>, and <a href="https://github.com/nushell/nu_scripts/pull/272" target="_blank" rel="noopener noreferrer">Add direnv config example.</a></li>
<li>fantasyzhjk created <a href="https://github.com/nushell/nu_scripts/pull/274" target="_blank" rel="noopener noreferrer">add rbenv script</a></li>
<li>fdncred created <a href="https://github.com/nushell/nu_scripts/pull/271" target="_blank" rel="noopener noreferrer">update some scripts from dash to underscore, add 20k_club script</a>, and <a href="https://github.com/nushell/nu_scripts/pull/270" target="_blank" rel="noopener noreferrer">update gitignore</a>, and <a href="https://github.com/nushell/nu_scripts/pull/269" target="_blank" rel="noopener noreferrer">winget: switch kebab case parameters to snake case</a></li>
<li>WindSoilder created <a href="https://github.com/nushell/nu_scripts/pull/268" target="_blank" rel="noopener noreferrer">Migrate some scripts to fit new variable and arguments naming style</a></li>
<li>skelly37 created <a href="https://github.com/nushell/nu_scripts/pull/267" target="_blank" rel="noopener noreferrer">Unspanned error</a></li>
</ul>
<h2 id="reedline" tabindex="-1"> reedline</h2>
<ul>
<li>sholderbach created <a href="https://github.com/nushell/reedline/pull/463" target="_blank" rel="noopener noreferrer">Prepare 0.10.0 release</a>, and <a href="https://github.com/nushell/reedline/pull/462" target="_blank" rel="noopener noreferrer">Clippy fix for tests</a>, and <a href="https://github.com/nushell/reedline/pull/458" target="_blank" rel="noopener noreferrer">Reduce dev-deps by narrowing <code>rstest</code> features</a>, and <a href="https://github.com/nushell/reedline/pull/457" target="_blank" rel="noopener noreferrer">Export the crossterm key types</a>, and <a href="https://github.com/nushell/reedline/pull/447" target="_blank" rel="noopener noreferrer">Update crossterm to 0.24</a></li>
<li>morzel85 created <a href="https://github.com/nushell/reedline/pull/461" target="_blank" rel="noopener noreferrer">Ctrl+h edit binding moved from emacs to common</a></li>
<li>bnprks created <a href="https://github.com/nushell/reedline/pull/460" target="_blank" rel="noopener noreferrer">Improve undo functionality</a>, and <a href="https://github.com/nushell/reedline/pull/459" target="_blank" rel="noopener noreferrer">Vi mode add support for d0, d^, c0, and c^</a></li>
<li>fdncred created <a href="https://github.com/nushell/reedline/pull/455" target="_blank" rel="noopener noreferrer">update gitignore</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.66</title>
      <link>https://www.nushell.sh/blog/2022-07-26-nushell-0_66.html</link>
      <guid>https://www.nushell.sh/blog/2022-07-26-nushell-0_66.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.66</source>
      <description> Nushell 0.66
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing version 0.66 of Nu. This is release includes a new table output, better exit code support, and more.
</description>
      <pubDate>Wed, 27 Jul 2022 00:09:14 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-66" tabindex="-1"> Nushell 0.66</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing version 0.66 of Nu. This is release includes a new table output, better exit code support, and more.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.66 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.66.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the built-in goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="themes-of-this-release" tabindex="-1"> Themes of this release</h1>
<h2 id="new-table-output-zhiburt" tabindex="-1"> New table output (zhiburt)</h2>
<p>When you pull up 0.66 and print out a table you might notice something - that it looks surprisingly similar to previous releases of Nushell. But, under the hood, something has changed. In 0.66, we've moved to a new table renderer: <code>tabled</code>.</p>
<p>We're looking forward to really <a href="https://github.com/zhiburt/tabled/issues/198" target="_blank" rel="noopener noreferrer">getting creative</a> with future releases and what tabled allows us to do.</p>
<h2 id="exit-codes-windsoilder-jt" tabindex="-1"> Exit codes (WindSoilder, jt)</h2>
<p>We've done work in this release that will cause pipelines and commands to stop a script from continuing if they hit a non-zero exit case, much in the same way as <code>a &amp;&amp; b</code> in bash does not run <code>b</code> if <code>a</code> returns with a non-zero exit code.</p>
<p>This has been extended to also work when running the full script, so that <code>nu</code> itself will return an non-zero exit code matching the error the script saw when it stopped.</p>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>We're deep in preparations for the work that will get us to 0.80, including a lot of syntax improvements, pipeline improvements, and more. We'll be talking about these more as the design and implementation develops.</p>
<p>From there, we're on our path to 1.0.</p>
<h1 id="full-changelog" tabindex="-1"> Full changelog</h1>
<h2 id="nushell" tabindex="-1"> Nushell</h2>
<ul>
<li>jt created <a href="https://github.com/nushell/nushell/pull/6138" target="_blank" rel="noopener noreferrer">fix 0.66 nu-command crate</a>, and <a href="https://github.com/nushell/nushell/pull/6137" target="_blank" rel="noopener noreferrer">bump to 0.66</a>, and <a href="https://github.com/nushell/nushell/pull/6136" target="_blank" rel="noopener noreferrer">move to latest stable reedline</a>, and <a href="https://github.com/nushell/nushell/pull/6116" target="_blank" rel="noopener noreferrer">Revert &quot;<code>extern</code> command should be treated as external&quot;</a>, and <a href="https://github.com/nushell/nushell/pull/6115" target="_blank" rel="noopener noreferrer">exit with non-zero exit code when script ends with non-zero exit</a>, and <a href="https://github.com/nushell/nushell/pull/6016" target="_blank" rel="noopener noreferrer">Use simpler reedline</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell/pull/6135" target="_blank" rel="noopener noreferrer">allow view-source to view aliases</a>, and <a href="https://github.com/nushell/nushell/pull/6118" target="_blank" rel="noopener noreferrer">remove misleading example from <code>source</code></a>, and <a href="https://github.com/nushell/nushell/pull/6110" target="_blank" rel="noopener noreferrer">throw error if any? or all? expression invokes invalid command</a>, and <a href="https://github.com/nushell/nushell/pull/6096" target="_blank" rel="noopener noreferrer">Prevents panic when parsing JSON containing large number</a>, and <a href="https://github.com/nushell/nushell/pull/6090" target="_blank" rel="noopener noreferrer">add a fair amount of search terms</a>, and <a href="https://github.com/nushell/nushell/pull/6084" target="_blank" rel="noopener noreferrer">make <code>into string --decimals</code> add decimals to integer numbers</a>, and <a href="https://github.com/nushell/nushell/pull/6076" target="_blank" rel="noopener noreferrer">add config option to limit external command completions</a>, and <a href="https://github.com/nushell/nushell/pull/6062" target="_blank" rel="noopener noreferrer">add <code>split list</code> subcommand to split up lists</a>, and <a href="https://github.com/nushell/nushell/pull/6056" target="_blank" rel="noopener noreferrer">add <code>wc</code> search term for <code>size</code> and <code>length</code></a>, and <a href="https://github.com/nushell/nushell/pull/6041" target="_blank" rel="noopener noreferrer">allow for easy reset of config files with a single command</a>, and <a href="https://github.com/nushell/nushell/pull/6019" target="_blank" rel="noopener noreferrer">make auto-cd change <code>$env.OLDPWD</code></a>, and <a href="https://github.com/nushell/nushell/pull/6017" target="_blank" rel="noopener noreferrer">add <code>unspanned</code> flag to error make, add tests</a>, and <a href="https://github.com/nushell/nushell/pull/6000" target="_blank" rel="noopener noreferrer">throw parser error when multiple short flags are defined without whitespace</a>, and <a href="https://github.com/nushell/nushell/pull/5977" target="_blank" rel="noopener noreferrer">adds better error for failed string-to-duration conversions</a></li>
<li>nibon7 created <a href="https://github.com/nushell/nushell/pull/6134" target="_blank" rel="noopener noreferrer">Make login.nu work when using nu as a login shell </a>, and <a href="https://github.com/nushell/nushell/pull/6132" target="_blank" rel="noopener noreferrer">Use local time for logger</a>, and <a href="https://github.com/nushell/nushell/pull/6130" target="_blank" rel="noopener noreferrer">Fix print_table_or_error when <code>table</code> is overridden</a>, and <a href="https://github.com/nushell/nushell/pull/6129" target="_blank" rel="noopener noreferrer">Fix PipelineData::print when <code>table</code> is overridden</a>, and <a href="https://github.com/nushell/nushell/pull/6122" target="_blank" rel="noopener noreferrer">Simplify print_table_or_error</a>, and <a href="https://github.com/nushell/nushell/pull/6121" target="_blank" rel="noopener noreferrer">Simplify eval_block</a>, and <a href="https://github.com/nushell/nushell/pull/6119" target="_blank" rel="noopener noreferrer">Simplify PipelineData::print</a>, and <a href="https://github.com/nushell/nushell/pull/6106" target="_blank" rel="noopener noreferrer">Log warning message if nu failed to sync history</a>, and <a href="https://github.com/nushell/nushell/pull/6104" target="_blank" rel="noopener noreferrer">Don't panic if nu failed to create config files </a>, and <a href="https://github.com/nushell/nushell/pull/6047" target="_blank" rel="noopener noreferrer">Fix ps command on linux</a>, and <a href="https://github.com/nushell/nushell/pull/6034" target="_blank" rel="noopener noreferrer">Fix panic when opening symlink which points to an inaccessible directory</a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell/pull/6131" target="_blank" rel="noopener noreferrer">update some dependencies</a>, and <a href="https://github.com/nushell/nushell/pull/6123" target="_blank" rel="noopener noreferrer">expand durations to include month, year, decade</a>, and <a href="https://github.com/nushell/nushell/pull/6112" target="_blank" rel="noopener noreferrer">move the shell integration title setting to the right place</a>, and <a href="https://github.com/nushell/nushell/pull/6105" target="_blank" rel="noopener noreferrer">trim spaces when converting strings to ints</a>, and <a href="https://github.com/nushell/nushell/pull/6094" target="_blank" rel="noopener noreferrer">enable find to work on some external streams</a>, and <a href="https://github.com/nushell/nushell/pull/6087" target="_blank" rel="noopener noreferrer">add more shell integration ansi escapes in support of vscode</a>, and <a href="https://github.com/nushell/nushell/pull/6086" target="_blank" rel="noopener noreferrer">enable find to be able to highlight some hits</a>, and <a href="https://github.com/nushell/nushell/pull/6054" target="_blank" rel="noopener noreferrer">Ensure users colors are maintained when highlighting find matches</a>, and <a href="https://github.com/nushell/nushell/pull/6053" target="_blank" rel="noopener noreferrer">allow <code>into int</code> to convert octal numbers and 0 padded strings</a>, and <a href="https://github.com/nushell/nushell/pull/6033" target="_blank" rel="noopener noreferrer">add ability to do into int on floats using a radix</a>, and <a href="https://github.com/nushell/nushell/pull/6031" target="_blank" rel="noopener noreferrer">fix small bug converting string to int</a>, and <a href="https://github.com/nushell/nushell/pull/6012" target="_blank" rel="noopener noreferrer">fixes ansi escape leakage from ill-behaved externals, again!</a>, and <a href="https://github.com/nushell/nushell/pull/6009" target="_blank" rel="noopener noreferrer">update some dependencies</a>, and <a href="https://github.com/nushell/nushell/pull/5992" target="_blank" rel="noopener noreferrer">add the ability to highlight with regular expressiosn</a>, and <a href="https://github.com/nushell/nushell/pull/5981" target="_blank" rel="noopener noreferrer">tweak the find hit highlighting</a>, and <a href="https://github.com/nushell/nushell/pull/5980" target="_blank" rel="noopener noreferrer">make history.txt and history.sqlite3 tables have same command column</a>, and <a href="https://github.com/nushell/nushell/pull/5979" target="_blank" rel="noopener noreferrer">add the ability to highlight searched for terms</a></li>
<li>kubouch created <a href="https://github.com/nushell/nushell/pull/6127" target="_blank" rel="noopener noreferrer">Use official virtualenv repo for the CI tests</a>, and <a href="https://github.com/nushell/nushell/pull/6007" target="_blank" rel="noopener noreferrer">Allow keeping selected environment variables from removed overlay</a>, and <a href="https://github.com/nushell/nushell/pull/6006" target="_blank" rel="noopener noreferrer">Fix load order of config files</a>, and <a href="https://github.com/nushell/nushell/pull/6005" target="_blank" rel="noopener noreferrer">Split merging of parser delta and stack environment</a>, and <a href="https://github.com/nushell/nushell/pull/6002" target="_blank" rel="noopener noreferrer">Revert &quot;make module imports in scripts used for relative path.&quot;</a>, and <a href="https://github.com/nushell/nushell/pull/5982" target="_blank" rel="noopener noreferrer">Expand Hooks Functionality</a></li>
<li>elferherrera created <a href="https://github.com/nushell/nushell/pull/6126" target="_blank" rel="noopener noreferrer">plugin show signature</a>, and <a href="https://github.com/nushell/nushell/pull/6093" target="_blank" rel="noopener noreferrer">concat string with lazy expressions</a>, and <a href="https://github.com/nushell/nushell/pull/6089" target="_blank" rel="noopener noreferrer">append string to series</a>, and <a href="https://github.com/nushell/nushell/pull/6058" target="_blank" rel="noopener noreferrer">check column type during aggregation</a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell/pull/6120" target="_blank" rel="noopener noreferrer">fix typo of <code>port</code> command</a></li>
<li>WindSoilder created <a href="https://github.com/nushell/nushell/pull/6117" target="_blank" rel="noopener noreferrer">try make port test more reliable</a>, and <a href="https://github.com/nushell/nushell/pull/6079" target="_blank" rel="noopener noreferrer">Make Semicolon stop on error</a>, and <a href="https://github.com/nushell/nushell/pull/6040" target="_blank" rel="noopener noreferrer">load default env when user don't specified env path</a>, and <a href="https://github.com/nushell/nushell/pull/6008" target="_blank" rel="noopener noreferrer">Add bytes collect, bytes remove, bytes build cmd</a>, and <a href="https://github.com/nushell/nushell/pull/5989" target="_blank" rel="noopener noreferrer">add more bytes cmd</a></li>
<li>PlasmaIntec created <a href="https://github.com/nushell/nushell/pull/6114" target="_blank" rel="noopener noreferrer">Allow cp multiple files at once</a>, and <a href="https://github.com/nushell/nushell/pull/6103" target="_blank" rel="noopener noreferrer">Allow mv multiple files at once</a>, and <a href="https://github.com/nushell/nushell/pull/6098" target="_blank" rel="noopener noreferrer">Allow multiple patterns in ls command</a></li>
<li>micouy created <a href="https://github.com/nushell/nushell/pull/6099" target="_blank" rel="noopener noreferrer">Bump <code>powierza-coefficient</code> to <code>1.0.1</code></a></li>
<li>zhiburt created <a href="https://github.com/nushell/nushell/pull/6097" target="_blank" rel="noopener noreferrer">nu-table/ Bump tabled version</a>, and <a href="https://github.com/nushell/nushell/pull/6082" target="_blank" rel="noopener noreferrer">nu-table: Update tests after #6080</a>, and <a href="https://github.com/nushell/nushell/pull/6080" target="_blank" rel="noopener noreferrer">Consider space for single <code>...</code> column not enough space</a>, and <a href="https://github.com/nushell/nushell/pull/6074" target="_blank" rel="noopener noreferrer">nu-table: Add a few tests</a>, and <a href="https://github.com/nushell/nushell/pull/6073" target="_blank" rel="noopener noreferrer">nu-table: Fix header style (again 2x)</a>, and <a href="https://github.com/nushell/nushell/pull/6071" target="_blank" rel="noopener noreferrer">nu-table: Add suffix coloring</a>, and <a href="https://github.com/nushell/nushell/pull/6049" target="_blank" rel="noopener noreferrer">Refactoring nu_table</a>, and <a href="https://github.com/nushell/nushell/pull/6038" target="_blank" rel="noopener noreferrer">nu-table: Bump tabled to master</a>, and <a href="https://github.com/nushell/nushell/pull/6037" target="_blank" rel="noopener noreferrer">nu-table: Use all available termwidth</a>, and <a href="https://github.com/nushell/nushell/pull/6036" target="_blank" rel="noopener noreferrer">nu-table: Restore atty check</a>, and <a href="https://github.com/nushell/nushell/pull/6035" target="_blank" rel="noopener noreferrer">nu-table: Don't show empty header</a>, and <a href="https://github.com/nushell/nushell/pull/6028" target="_blank" rel="noopener noreferrer">nu_table: Fix truncating logic</a>, and <a href="https://github.com/nushell/nushell/pull/6025" target="_blank" rel="noopener noreferrer">nu_table: Fix style of tables with no header</a>, and <a href="https://github.com/nushell/nushell/pull/5999" target="_blank" rel="noopener noreferrer">Move wrap responsibility on tabled</a>, and <a href="https://github.com/nushell/nushell/pull/5998" target="_blank" rel="noopener noreferrer">nu-table: Fix wrap logic</a>, and <a href="https://github.com/nushell/nushell/pull/5997" target="_blank" rel="noopener noreferrer">nu-table: Fix a term_width value</a>, and <a href="https://github.com/nushell/nushell/pull/5993" target="_blank" rel="noopener noreferrer">nu-table: Remove a error prone assertion</a></li>
<li>Kangaxx-0 created <a href="https://github.com/nushell/nushell/pull/6083" target="_blank" rel="noopener noreferrer"><code>extern</code> command should be treated as external</a>, and <a href="https://github.com/nushell/nushell/pull/6044" target="_blank" rel="noopener noreferrer">Downgrade typetag to 0.1.8</a>, and <a href="https://github.com/nushell/nushell/pull/6014" target="_blank" rel="noopener noreferrer">Conditionally disable expansion for external command</a></li>
<li>Mathspy created <a href="https://github.com/nushell/nushell/pull/6070" target="_blank" rel="noopener noreferrer">Add CustomValue support to plugins</a>, and <a href="https://github.com/nushell/nushell/pull/6065" target="_blank" rel="noopener noreferrer">Restore <code>nu_with_plugins</code> test macro</a>, and <a href="https://github.com/nushell/nushell/pull/6064" target="_blank" rel="noopener noreferrer">Add plugin CLI argument</a></li>
<li>jackos created <a href="https://github.com/nushell/nushell/pull/6067" target="_blank" rel="noopener noreferrer">Fix short-flag completion</a></li>
<li>Benjamin-L created <a href="https://github.com/nushell/nushell/pull/6052" target="_blank" rel="noopener noreferrer">fix documentation of plugin encodings</a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell/pull/6051" target="_blank" rel="noopener noreferrer">Handle Windows drive paths in auto-cd</a>, and <a href="https://github.com/nushell/nushell/pull/5987" target="_blank" rel="noopener noreferrer">Revert &quot;Return error when external command core dumped (#5908)&quot;</a></li>
<li>stormasm created <a href="https://github.com/nushell/nushell/pull/6050" target="_blank" rel="noopener noreferrer">Cargo.lock was not checked in on typetag revert</a></li>
<li>valdaarhun created <a href="https://github.com/nushell/nushell/pull/5990" target="_blank" rel="noopener noreferrer">Add search terms to 'math' commands</a></li>
<li>moxuze created <a href="https://github.com/nushell/nushell/pull/5970" target="_blank" rel="noopener noreferrer">Add --directory (-D) flag to ls, list the directory itself instead of its contents</a></li>
</ul>
<h2 id="documentation" tabindex="-1"> Documentation</h2>
<ul>
<li>kubouch created <a href="https://github.com/nushell/nushell.github.io/pull/542" target="_blank" rel="noopener noreferrer">Add overviews of chapters; Move Introduction to top level</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/537" target="_blank" rel="noopener noreferrer">Add hooks documentation</a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell.github.io/pull/541" target="_blank" rel="noopener noreferrer">Translate hooks.md to Chinese</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/539" target="_blank" rel="noopener noreferrer">Update zh-CN translation for moving_around and theming</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/538" target="_blank" rel="noopener noreferrer">Update some zh-CN translations</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/535" target="_blank" rel="noopener noreferrer">update vuepress and related plugins</a></li>
<li>morzel85 created <a href="https://github.com/nushell/nushell.github.io/pull/540" target="_blank" rel="noopener noreferrer">Update working_with_lists.md (removing unnecessary use of echo)</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell.github.io/pull/533" target="_blank" rel="noopener noreferrer">Remove entry for <code>count</code></a>, and <a href="https://github.com/nushell/nushell.github.io/pull/531" target="_blank" rel="noopener noreferrer">Add helpful links</a></li>
<li>WindSoilder created <a href="https://github.com/nushell/nushell.github.io/pull/532" target="_blank" rel="noopener noreferrer">add light theme relative doc</a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell.github.io/pull/530" target="_blank" rel="noopener noreferrer">add some new operators</a></li>
</ul>
<h2 id="nu-scripts" tabindex="-1"> Nu_Scripts</h2>
<ul>
<li>Eun created <a href="https://github.com/nushell/nu_scripts/pull/265" target="_blank" rel="noopener noreferrer">Use autojump with nushell</a>, and <a href="https://github.com/nushell/nu_scripts/pull/262" target="_blank" rel="noopener noreferrer"><code>select-aws-profile.nu</code> an alias to select an aws profile with ease</a></li>
<li>WindSoilder created <a href="https://github.com/nushell/nu_scripts/pull/264" target="_blank" rel="noopener noreferrer">fix env.PATH after conda activate</a></li>
<li>fdncred created <a href="https://github.com/nushell/nu_scripts/pull/263" target="_blank" rel="noopener noreferrer">add nana to twin script</a></li>
</ul>
<h2 id="reedline" tabindex="-1"> reedline</h2>
<ul>
<li>jt created <a href="https://github.com/nushell/reedline/pull/454" target="_blank" rel="noopener noreferrer">bump to 0.9</a>, and <a href="https://github.com/nushell/reedline/pull/451" target="_blank" rel="noopener noreferrer">Remove animations and resize repaint</a></li>
<li>fdncred created <a href="https://github.com/nushell/reedline/pull/453" target="_blank" rel="noopener noreferrer">update some deps</a></li>
<li>drbrain created <a href="https://github.com/nushell/reedline/pull/452" target="_blank" rel="noopener noreferrer">Support swtiching the case of a char with ~ in vi</a>, and <a href="https://github.com/nushell/reedline/pull/450" target="_blank" rel="noopener noreferrer">Support vi mode ; and , motions</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.65</title>
      <link>https://www.nushell.sh/blog/2022-07-05-nushell-0_65.html</link>
      <guid>https://www.nushell.sh/blog/2022-07-05-nushell-0_65.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.65</source>
      <description> Nushell 0.65
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing version 0.65 of Nu. This release includes better support for binary data, a new way of checking source files for correctness, improved command unification, and more.
</description>
      <pubDate>Tue, 05 Jul 2022 18:28:31 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-65" tabindex="-1"> Nushell 0.65</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing version 0.65 of Nu. This release includes better support for binary data, a new way of checking source files for correctness, improved command unification, and more.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.65 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.65.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the built-in goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="themes-of-this-release" tabindex="-1"> Themes of this release</h1>
<h2 id="better-support-for-binary-data-hustcer-jt-cbenoit" tabindex="-1"> Better support for binary data (hustcer, jt, CBenoit)</h2>
<p>Binary support in Nushell has steadily improved, and in this release, it's gotten a strong push forward. New features include:</p>
<ul>
<li>New operators <code>bit-and</code>, <code>bit-or</code>, <code>bit-xor</code>, as well as renamed <code>bit-shl</code> and <code>bit-shr</code>. These correspond to bitwise and, or, exclusive or, shift left, and shift right.</li>
<li>A new <code>encode</code> command as well as binary support for <code>hash</code></li>
<li>Improved binary support for <code>skip</code> and <code>take</code>.</li>
</ul>
<h2 id="nu-check-kangaxx-0" tabindex="-1"> Nu-check (Kangaxx-0)</h2>
<p>Starting with this release, Nushell now provides a <code>nu-check</code> command which can do a check over a source file for potential parsing and typechecking errors. This will make it easier for script authors to check their scripts without running them. In the future, this may also be an easy way for editors to check a script and return errors during editing.</p>
<h2 id="unification-continues-elferherrera" tabindex="-1"> Unification continues (elferherrera)</h2>
<p>In 0.65, we've also continued the process to unify commands for different datatypes. In this release, <code>db</code> and mysql support has simplified, bringing it closer to the already existing dataframe support.</p>
<p>Before:</p>
<div><pre><code>open myfile.db
| db select a
| db from table_1
| db where ((db col a) > 1 | db and ((db col a) &lt; 10))
</code></pre></div><p>Now:</p>
<div><pre><code>open myfile.db
| select a
| from table_1
| where ((field a) > 1 | and ((field a) &lt; 10))
</code></pre></div><p>Like the dataframe support, this is built on the new support to overload commands based on their input type. This will allow Nushell to have a nice, uniform syntax that just works over a variety of data types in the future.</p>
<h2 id="additional-new-commands" tabindex="-1"> Additional new commands</h2>
<p>You can now use the <code>port</code> command to find the next available port. (WindSoilder)</p>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>With 0.65, Nushell continues to move towards a more polished, more full-featured language that can handle a wider range of datatypes well. We're continuing to work towards this goal and find ways to continue to unify the language, allowing you to learn one language and apply that knowledge to many types of data.</p>
<h1 id="full-changelog" tabindex="-1"> Full changelog</h1>
<h2 id="nushell" tabindex="-1"> Nushell</h2>
<ul>
<li>sholderbach created <a href="https://github.com/nushell/nushell/pull/5954" target="_blank" rel="noopener noreferrer">Pin reedline to new 0.8.0 release</a></li>
<li>jt created <a href="https://github.com/nushell/nushell/pull/5952" target="_blank" rel="noopener noreferrer">bump to 0.65</a>, and <a href="https://github.com/nushell/nushell/pull/5943" target="_blank" rel="noopener noreferrer">Fix 'skip' support for binary streams</a>, and <a href="https://github.com/nushell/nushell/pull/5942" target="_blank" rel="noopener noreferrer">Make <code>take</code> work like <code>first</code></a>, and <a href="https://github.com/nushell/nushell/pull/5941" target="_blank" rel="noopener noreferrer">Binary into int</a>, and <a href="https://github.com/nushell/nushell/pull/5937" target="_blank" rel="noopener noreferrer">Rename bitwise operators for readability</a>, and <a href="https://github.com/nushell/nushell/pull/5880" target="_blank" rel="noopener noreferrer">Move input/output type from Command to Signature</a>, and <a href="https://github.com/nushell/nushell/pull/5879" target="_blank" rel="noopener noreferrer">Clippy and remove unused is_binary</a>, and <a href="https://github.com/nushell/nushell/pull/5865" target="_blank" rel="noopener noreferrer">Bump to 0.64.1 dev version</a></li>
<li>WindSoilder created <a href="https://github.com/nushell/nushell/pull/5950" target="_blank" rel="noopener noreferrer">add bytes starts-with command</a>, and <a href="https://github.com/nushell/nushell/pull/5945" target="_blank" rel="noopener noreferrer">add bytes length command</a>, and <a href="https://github.com/nushell/nushell/pull/5935" target="_blank" rel="noopener noreferrer">add -e flag to print, to print the value to stderr</a>, and <a href="https://github.com/nushell/nushell/pull/5925" target="_blank" rel="noopener noreferrer">change default keybinding in default config</a>, and <a href="https://github.com/nushell/nushell/pull/5913" target="_blank" rel="noopener noreferrer">make module imports in scripts used for relative path.</a>, and <a href="https://github.com/nushell/nushell/pull/5886" target="_blank" rel="noopener noreferrer">make path exists work on expanded path</a>, and <a href="https://github.com/nushell/nushell/pull/5883" target="_blank" rel="noopener noreferrer">simplify error make</a>, and <a href="https://github.com/nushell/nushell/pull/5871" target="_blank" rel="noopener noreferrer">fix plugin path with whitespace</a>, and <a href="https://github.com/nushell/nushell/pull/5849" target="_blank" rel="noopener noreferrer">Port command</a>, and <a href="https://github.com/nushell/nushell/pull/5835" target="_blank" rel="noopener noreferrer">fix exit code</a>, and <a href="https://github.com/nushell/nushell/pull/5807" target="_blank" rel="noopener noreferrer">add notes for def_env</a>, and <a href="https://github.com/nushell/nushell/pull/5804" target="_blank" rel="noopener noreferrer">add light theme to default_config</a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell/pull/5940" target="_blank" rel="noopener noreferrer">Add bit operator: <code>bit-xor</code></a>, and <a href="https://github.com/nushell/nushell/pull/5936" target="_blank" rel="noopener noreferrer">Add <code>band</code> and <code>bor</code> operator for bit operations</a>, and <a href="https://github.com/nushell/nushell/pull/5928" target="_blank" rel="noopener noreferrer">Update #4202: Add shift operator bshl and bshr for integers</a>, and <a href="https://github.com/nushell/nushell/pull/5874" target="_blank" rel="noopener noreferrer">Add an example for <code>default</code> command to get an env var with fallback</a>, and <a href="https://github.com/nushell/nushell/pull/5873" target="_blank" rel="noopener noreferrer">Fix less.exe downloading for windows release pkgs, close #5868</a>, and <a href="https://github.com/nushell/nushell/pull/5843" target="_blank" rel="noopener noreferrer">feat: Update dockerfile for latest nu release</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell/pull/5939" target="_blank" rel="noopener noreferrer">add search terms for <code>is-admin</code></a>, and <a href="https://github.com/nushell/nushell/pull/5916" target="_blank" rel="noopener noreferrer">ensure <code>required</code> positionals don't show up as <code>optional</code> when <code>help</code></a>, and <a href="https://github.com/nushell/nushell/pull/5890" target="_blank" rel="noopener noreferrer">Better error handling using <code>do</code></a>, and <a href="https://github.com/nushell/nushell/pull/5866" target="_blank" rel="noopener noreferrer">Errors when <code>let in</code>, <code>let env</code> and similar commands are passed.</a>, and <a href="https://github.com/nushell/nushell/pull/5859" target="_blank" rel="noopener noreferrer">Finish git fetch custom completions to allow for completing branch</a>, and <a href="https://github.com/nushell/nushell/pull/5840" target="_blank" rel="noopener noreferrer">Prevents duplicate fields in <code>transpose -r</code></a>, and <a href="https://github.com/nushell/nushell/pull/5827" target="_blank" rel="noopener noreferrer">Calculate history duration properly (sqlite)</a>, and <a href="https://github.com/nushell/nushell/pull/5818" target="_blank" rel="noopener noreferrer">Fixes <code>to nuon</code> for <code>inf</code>, <code>-inf</code>, and <code>NaN</code></a>, and <a href="https://github.com/nushell/nushell/pull/5805" target="_blank" rel="noopener noreferrer">Attempts to fix file completions for <code>open</code>, <code>rm</code> and <code>ls</code> (and other filesystem commands)</a></li>
<li>IsaacKhor created <a href="https://github.com/nushell/nushell/pull/5938" target="_blank" rel="noopener noreferrer">Change C-u and C-k to be readline compatible, move old C-u to C-s</a></li>
<li>nibon7 created <a href="https://github.com/nushell/nushell/pull/5932" target="_blank" rel="noopener noreferrer">Fix <code>to md --pretty</code> when rendering a list</a>, and <a href="https://github.com/nushell/nushell/pull/5908" target="_blank" rel="noopener noreferrer">Return error when external command core dumped</a>, and <a href="https://github.com/nushell/nushell/pull/5808" target="_blank" rel="noopener noreferrer">Fix drop nth with open end range on 32-bit platforms</a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell/pull/5926" target="_blank" rel="noopener noreferrer">fix parse_failure_due_conflicted_flags test</a>, and <a href="https://github.com/nushell/nushell/pull/5905" target="_blank" rel="noopener noreferrer">fix bug where <code>thin</code> theme wasn't getting applied correctly</a>, and <a href="https://github.com/nushell/nushell/pull/5901" target="_blank" rel="noopener noreferrer">fix excessive ansi escape sequences</a>, and <a href="https://github.com/nushell/nushell/pull/5881" target="_blank" rel="noopener noreferrer">update encode decode with new signature</a>, and <a href="https://github.com/nushell/nushell/pull/5876" target="_blank" rel="noopener noreferrer">add ability to convert timestamp_millis()</a>, and <a href="https://github.com/nushell/nushell/pull/5852" target="_blank" rel="noopener noreferrer">cleanup <code>$config</code> as a built-in</a>, and <a href="https://github.com/nushell/nushell/pull/5845" target="_blank" rel="noopener noreferrer">update reedline config based on recent reedline changes</a>, and <a href="https://github.com/nushell/nushell/pull/5822" target="_blank" rel="noopener noreferrer">first stab at minimizing ansi escapes</a>, and <a href="https://github.com/nushell/nushell/pull/5817" target="_blank" rel="noopener noreferrer">add more columns to the history command when using sqlite history</a></li>
<li>stormasm created <a href="https://github.com/nushell/nushell/pull/5919" target="_blank" rel="noopener noreferrer">update crate thiserror to version 1.0.31 in four crates</a>, and <a href="https://github.com/nushell/nushell/pull/5813" target="_blank" rel="noopener noreferrer">Move the history and tutor commands out of core_commands</a></li>
<li>Kangaxx-0 created <a href="https://github.com/nushell/nushell/pull/5911" target="_blank" rel="noopener noreferrer">Add all flag to nu-check command</a>, and <a href="https://github.com/nushell/nushell/pull/5864" target="_blank" rel="noopener noreferrer">Introduce new command - nu check</a>, and <a href="https://github.com/nushell/nushell/pull/5847" target="_blank" rel="noopener noreferrer">Remove external nu from nu config</a>, and <a href="https://github.com/nushell/nushell/pull/5826" target="_blank" rel="noopener noreferrer">Add more tests for completion</a>, and <a href="https://github.com/nushell/nushell/pull/5814" target="_blank" rel="noopener noreferrer">Fix alias completion crash</a></li>
<li>Yethal created <a href="https://github.com/nushell/nushell/pull/5910" target="_blank" rel="noopener noreferrer">Slim down Dockerfile</a></li>
<li>CBenoit created <a href="https://github.com/nushell/nushell/pull/5909" target="_blank" rel="noopener noreferrer">docs: clarify <code>print</code> and <code>echo</code> commands</a>, and <a href="https://github.com/nushell/nushell/pull/5889" target="_blank" rel="noopener noreferrer">build: update <code>miette</code> dependency</a>, and <a href="https://github.com/nushell/nushell/pull/5885" target="_blank" rel="noopener noreferrer">feat: add <code>--binary(-b)</code> option to <code>hash</code> commands</a>, and <a href="https://github.com/nushell/nushell/pull/5863" target="_blank" rel="noopener noreferrer">Deprecate <code>hash base64</code>, extend <code>decode</code> and add <code>encode</code> commands</a></li>
<li>elferherrera created <a href="https://github.com/nushell/nushell/pull/5896" target="_blank" rel="noopener noreferrer">Header filtering out of for loop</a>, and <a href="https://github.com/nushell/nushell/pull/5892" target="_blank" rel="noopener noreferrer">Dataframe with real index</a>, and <a href="https://github.com/nushell/nushell/pull/5891" target="_blank" rel="noopener noreferrer">Remove extra print</a>, and <a href="https://github.com/nushell/nushell/pull/5846" target="_blank" rel="noopener noreferrer">Remove quotes from external args</a>, and <a href="https://github.com/nushell/nushell/pull/5844" target="_blank" rel="noopener noreferrer">Allow type comparison</a>, and <a href="https://github.com/nushell/nushell/pull/5839" target="_blank" rel="noopener noreferrer">Exclude ./... from expansion</a>, and <a href="https://github.com/nushell/nushell/pull/5838" target="_blank" rel="noopener noreferrer">Db commands without DB</a>, and <a href="https://github.com/nushell/nushell/pull/5800" target="_blank" rel="noopener noreferrer">Standardise to commands</a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell/pull/5893" target="_blank" rel="noopener noreferrer">Make sort logic available outside sort-by</a>, and <a href="https://github.com/nushell/nushell/pull/5820" target="_blank" rel="noopener noreferrer">Fix parser panic</a></li>
<li>skelly37 created <a href="https://github.com/nushell/nushell/pull/5836" target="_blank" rel="noopener noreferrer">root/admin prompt is red now</a></li>
<li>wolimst created <a href="https://github.com/nushell/nushell/pull/5812" target="_blank" rel="noopener noreferrer">Add Windows Terminal profile and icon in Windows control panel</a></li>
<li>kubouch created <a href="https://github.com/nushell/nushell/pull/5809" target="_blank" rel="noopener noreferrer">Add test requirements to PR template</a></li>
</ul>
<h2 id="extension" tabindex="-1"> Extension</h2>
<ul>
<li>schuelermine created <a href="https://github.com/nushell/vscode-nushell-lang/pull/55" target="_blank" rel="noopener noreferrer">Fix typo in Snippet</a></li>
</ul>
<h2 id="documentation" tabindex="-1"> Documentation</h2>
<ul>
<li>petrisch created <a href="https://github.com/nushell/nushell.github.io/pull/526" target="_blank" rel="noopener noreferrer">DE translation for pipelines and scripts</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/521" target="_blank" rel="noopener noreferrer">DE translation for working with lists and tables</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/512" target="_blank" rel="noopener noreferrer">DE translation for loading data and working with strings</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell.github.io/pull/525" target="_blank" rel="noopener noreferrer">Changes misleading example</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/522" target="_blank" rel="noopener noreferrer">Links <code>types_of_data</code> page to <code>describe</code> command</a></li>
<li>relby created <a href="https://github.com/nushell/nushell.github.io/pull/524" target="_blank" rel="noopener noreferrer">Fix outdated <code>$false</code> value</a></li>
<li>toastal created <a href="https://github.com/nushell/nushell.github.io/pull/523" target="_blank" rel="noopener noreferrer">Syntax highlighting as <code>console</code></a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell.github.io/pull/520" target="_blank" rel="noopener noreferrer">Translate overlays.md to Chinese</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/518" target="_blank" rel="noopener noreferrer">Fix broken images in README.md</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/517" target="_blank" rel="noopener noreferrer">fix broken table rendering for operators</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/516" target="_blank" rel="noopener noreferrer">Update zh_CN translation of dataframes and working_with_strings</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/515" target="_blank" rel="noopener noreferrer">Update doc template for commands</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/514" target="_blank" rel="noopener noreferrer">Update zh_CN translation for nu books</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/513" target="_blank" rel="noopener noreferrer">feat: update some zh_CN translations of nu book</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/508" target="_blank" rel="noopener noreferrer">Remove old_book related stuffs</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/505" target="_blank" rel="noopener noreferrer">Fix command overlapping for <code>make_docs.nu</code> and Refresh commands for v0.64</a></li>
<li>elferherrera created <a href="https://github.com/nushell/nushell.github.io/pull/511" target="_blank" rel="noopener noreferrer">Standard command name</a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell.github.io/pull/506" target="_blank" rel="noopener noreferrer">Remove MS CRT info now that we're statically linking it</a></li>
</ul>
<h2 id="nu-scripts" tabindex="-1"> Nu Scripts</h2>
<ul>
<li>fdncred created <a href="https://github.com/nushell/nu_scripts/pull/261" target="_blank" rel="noopener noreferrer">update get_weather to use the new error make</a>, and <a href="https://github.com/nushell/nu_scripts/pull/260" target="_blank" rel="noopener noreferrer">add stargazer script to monitor nushell stars</a>, and <a href="https://github.com/nushell/nu_scripts/pull/259" target="_blank" rel="noopener noreferrer">add turtle benchmark and reorganize</a></li>
<li>Yethal created <a href="https://github.com/nushell/nu_scripts/pull/255" target="_blank" rel="noopener noreferrer">Added delete-merged-branches.nu</a></li>
<li>skelly37 created <a href="https://github.com/nushell/nu_scripts/pull/254" target="_blank" rel="noopener noreferrer">maths refactor</a>, and <a href="https://github.com/nushell/nu_scripts/pull/252" target="_blank" rel="noopener noreferrer">up.nu fixed</a></li>
</ul>
<h2 id="reedline" tabindex="-1"> Reedline</h2>
<ul>
<li>sholderbach created <a href="https://github.com/nushell/reedline/pull/448" target="_blank" rel="noopener noreferrer">Prepare the 0.8.0 release</a></li>
<li>nibon7 created <a href="https://github.com/nushell/reedline/pull/446" target="_blank" rel="noopener noreferrer">Avoid subtraction overflow when using usize.</a></li>
<li>WindSoilder created <a href="https://github.com/nushell/reedline/pull/445" target="_blank" rel="noopener noreferrer">introduce LastCommand variant for parse bang result</a>, and <a href="https://github.com/nushell/reedline/pull/444" target="_blank" rel="noopener noreferrer">fix double bang</a></li>
<li>fdncred created <a href="https://github.com/nushell/reedline/pull/443" target="_blank" rel="noopener noreferrer">add impl Display to HistoryItemId and HistorySessionId</a></li>
<li>drbrain created <a href="https://github.com/nushell/reedline/pull/442" target="_blank" rel="noopener noreferrer">Add vi r (replace)</a>, and <a href="https://github.com/nushell/reedline/pull/441" target="_blank" rel="noopener noreferrer">Add vi WORD motions B, E, W</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.64</title>
      <link>https://www.nushell.sh/blog/2022-06-14-nushell_0_64.html</link>
      <guid>https://www.nushell.sh/blog/2022-06-14-nushell_0_64.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.64</source>
      <description> Nushell 0.64
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing version 0.64 of Nu. It's the first to include input overloading, input/output types, and lazy dataframes.
</description>
      <pubDate>Wed, 15 Jun 2022 06:26:36 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-64" tabindex="-1"> Nushell 0.64</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing version 0.64 of Nu. It's the first to include input overloading, input/output types, and lazy dataframes.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.64 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.64.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the built-in goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="themes-of-this-release" tabindex="-1"> Themes of this release</h1>
<h2 id="input-overloading-elferherrera" tabindex="-1"> Input overloading (elferherrera)</h2>
<p>Commands can now declare their <a href="https://github.com/nushell/nushell/pull/5750" target="_blank" rel="noopener noreferrer">input and output types</a>. While this support is still initial and isn't yet available in the syntax, we're already using it for one important improvement: simplifying the commands.</p>
<p>In this release, dataframe commands can now detect the input type in the pipeline and run without needing to be called with <code>dfr</code> before every command. The end result is much cleaner:</p>
<p>Before:</p>
<div><pre><code>> [[a b]; [1 2] [3 4]] | dfr to-df | dfr drop a
</code></pre></div><p>After:</p>
<div><pre><code>> [[a b]; [1 2] [3 4]] | to-df | drop a
</code></pre></div><p>This allows dataframe commands to feel more natural and fit more cleanly in with other commands. We're also looking to make similar improvements to the <code>db</code> command. In the future, you'll be able to open a data source and then use the standard nushell commands against it, and Nushell will select the best fit based on the type of data source you're opening.</p>
<h2 id="lazy-dataframes-elferherrera" tabindex="-1"> Lazy dataframes (elferherrera)</h2>
<p>Dataframes now have <a href="https://github.com/nushell/nushell/pull/5687" target="_blank" rel="noopener noreferrer">lazy operations</a>. These lazy operations allow users to build up multiple steps of a pipeline and execute them in a much more efficient way against the dataframe.</p>
<h2 id="future-sqlite-backed-history-phiresky" tabindex="-1"> Future SQLite backed history (phiresky)</h2>
<p>The API for storing history entries has changed in the background. This now supports also storing your history in a SQLite database. Currently this adds some metadata such as the current working directory, whether a command succeeded, and execution times. In the future this will enable you to query the history in a more rich and meaningful way.</p>
<p>Currently the simple text based history is still the default. If you want to test out the new history change your config to contain:</p>
<div><pre><code>let-env config = {
  ...
  history_file_format: "sqlite" # "sqlite" or "plaintext"
  ...
}
</code></pre></div><h1 id="improvements" tabindex="-1"> Improvements</h1>
<ul>
<li>Using Nu as a login shell now has a <a href="https://github.com/nushell/nushell/pull/5714" target="_blank" rel="noopener noreferrer">special config file</a>. (sec65)</li>
<li>Unix-based Nushell can now <a href="https://github.com/nushell/nushell/pull/5744" target="_blank" rel="noopener noreferrer">handle SIGQUIT</a> (WindSoilder)</li>
<li>This release also includes binaries for <a href="https://github.com/nushell/nushell/releases/tag/0.64.0" target="_blank" rel="noopener noreferrer">more platforms</a> (hustcer)</li>
</ul>
<p>You can see the full list in the Changelog below.</p>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>The new input/output types and type overloading allows for a simpler, more uniform Nushell language. We're looking forward to continuing to improve this as well as improving the Nushell language around it.</p>
<p>We've also recent shown an experimental <a href="https://www.youtube.com/watch?v=B2aLON88New" target="_blank" rel="noopener noreferrer">graphical version of Nushell</a>. This experiment is something you can use today across the platforms that Nushell supports.</p>
<h1 id="changelog" tabindex="-1"> Changelog</h1>
<h2 id="nushell" tabindex="-1"> Nushell</h2>
<ul>
<li>WindSoilder created <a href="https://github.com/nushell/nushell/pull/5782" target="_blank" rel="noopener noreferrer">add --values flag to sort record by values, by default, sort record by keys</a>, and <a href="https://github.com/nushell/nushell/pull/5778" target="_blank" rel="noopener noreferrer">sort not change shape</a>, and <a href="https://github.com/nushell/nushell/pull/5775" target="_blank" rel="noopener noreferrer">path join support multi path</a>, and <a href="https://github.com/nushell/nushell/pull/5754" target="_blank" rel="noopener noreferrer">fix arg parse</a>, and <a href="https://github.com/nushell/nushell/pull/5751" target="_blank" rel="noopener noreferrer">While starting nu, force PWD to be current working directory</a>, and <a href="https://github.com/nushell/nushell/pull/5744" target="_blank" rel="noopener noreferrer">handle SIGQUIT</a>, and <a href="https://github.com/nushell/nushell/pull/5736" target="_blank" rel="noopener noreferrer">add as record tag to transfer result to record</a>, and <a href="https://github.com/nushell/nushell/pull/5731" target="_blank" rel="noopener noreferrer">print warning message if meet non utf-8 path</a>, and <a href="https://github.com/nushell/nushell/pull/5695" target="_blank" rel="noopener noreferrer">fix argument type</a>, and <a href="https://github.com/nushell/nushell/pull/5692" target="_blank" rel="noopener noreferrer">expand env for path</a>, and <a href="https://github.com/nushell/nushell/pull/5691" target="_blank" rel="noopener noreferrer">make ls works better with glob</a>, and <a href="https://github.com/nushell/nushell/pull/5680" target="_blank" rel="noopener noreferrer">base64 command more friendly</a>, and <a href="https://github.com/nushell/nushell/pull/5645" target="_blank" rel="noopener noreferrer">make cp can copy folders contains dangling symbolic link</a>, and <a href="https://github.com/nushell/nushell/pull/5633" target="_blank" rel="noopener noreferrer">make sure no duplicate column exists during eval and merge</a></li>
<li>sholderbach created <a href="https://github.com/nushell/nushell/pull/5781" target="_blank" rel="noopener noreferrer">Pin reedline v0.7.0 for the nushell v0.64.0 release</a>, and <a href="https://github.com/nushell/nushell/pull/5709" target="_blank" rel="noopener noreferrer">Address lints from clippy for beta/nightly</a>, and <a href="https://github.com/nushell/nushell/pull/5708" target="_blank" rel="noopener noreferrer">Use search terms in the help menu search</a>, and <a href="https://github.com/nushell/nushell/pull/5706" target="_blank" rel="noopener noreferrer">Update nu-ansi-term to remove <code>Deref</code> impl</a>, and <a href="https://github.com/nushell/nushell/pull/5704" target="_blank" rel="noopener noreferrer">Improve internal documentation of <code>save</code> command</a>, and <a href="https://github.com/nushell/nushell/pull/5678" target="_blank" rel="noopener noreferrer">Update reedline</a>, and <a href="https://github.com/nushell/nushell/pull/5677" target="_blank" rel="noopener noreferrer">Clarify error message for <code>let</code> in pipeline</a>, and <a href="https://github.com/nushell/nushell/pull/5654" target="_blank" rel="noopener noreferrer">Update reedline: Support more bindings in vi mode</a>, and <a href="https://github.com/nushell/nushell/pull/5650" target="_blank" rel="noopener noreferrer">Improve test coverage of command examples</a>, and <a href="https://github.com/nushell/nushell/pull/5644" target="_blank" rel="noopener noreferrer">Add search terms for <code>describe</code></a>, and <a href="https://github.com/nushell/nushell/pull/5634" target="_blank" rel="noopener noreferrer">Unpin reedline for regular development</a></li>
<li>elferherrera created <a href="https://github.com/nushell/nushell/pull/5779" target="_blank" rel="noopener noreferrer">bool type for binary operations</a>, and <a href="https://github.com/nushell/nushell/pull/5771" target="_blank" rel="noopener noreferrer">each while command</a>, and <a href="https://github.com/nushell/nushell/pull/5770" target="_blank" rel="noopener noreferrer">filesize conversion</a>, and <a href="https://github.com/nushell/nushell/pull/5769" target="_blank" rel="noopener noreferrer">expression to literal</a>, and <a href="https://github.com/nushell/nushell/pull/5760" target="_blank" rel="noopener noreferrer">Remove dfr from dataframe commands</a>, and <a href="https://github.com/nushell/nushell/pull/5750" target="_blank" rel="noopener noreferrer">input and output types</a>, and <a href="https://github.com/nushell/nushell/pull/5687" target="_blank" rel="noopener noreferrer">Lazy dataframes</a></li>
<li>jt <a href="https://github.com/nushell/nushell/pull/5777" target="_blank" rel="noopener noreferrer">bumped to 0.64</a>, and <a href="https://github.com/nushell/nushell/pull/5768" target="_blank" rel="noopener noreferrer">Force floats to output a decimal in nuon</a>, and <a href="https://github.com/nushell/nushell/pull/5635" target="_blank" rel="noopener noreferrer">bump to dev version</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell/pull/5774" target="_blank" rel="noopener noreferrer">Add option to sort-by naturally</a>, and <a href="https://github.com/nushell/nushell/pull/5759" target="_blank" rel="noopener noreferrer">Attempts to add <code>//</code> math operator</a>, and <a href="https://github.com/nushell/nushell/pull/5737" target="_blank" rel="noopener noreferrer">add search terms to alias</a>, and <a href="https://github.com/nushell/nushell/pull/5730" target="_blank" rel="noopener noreferrer">Improves help str substring</a>, and <a href="https://github.com/nushell/nushell/pull/5712" target="_blank" rel="noopener noreferrer">Attempts to add a command that checks if nushell is running with admin priveleges</a>, and <a href="https://github.com/nushell/nushell/pull/5710" target="_blank" rel="noopener noreferrer">Make <code>range</code> require its positional argument</a>, and <a href="https://github.com/nushell/nushell/pull/5693" target="_blank" rel="noopener noreferrer">Small typo fix in <code>signature.rs</code></a>, and <a href="https://github.com/nushell/nushell/pull/5676" target="_blank" rel="noopener noreferrer">prevent panic with <code>let</code> alone in pipeline</a>, and <a href="https://github.com/nushell/nushell/pull/5673" target="_blank" rel="noopener noreferrer">Add '-o'/<code>--output</code> flag to <code>fetch</code> to download to file</a>, and <a href="https://github.com/nushell/nushell/pull/5657" target="_blank" rel="noopener noreferrer">Add search terms to error make</a>, and <a href="https://github.com/nushell/nushell/pull/5632" target="_blank" rel="noopener noreferrer">Makes a more helpful error for <code>let</code> in pipeline</a></li>
<li>Kangaxx-0 created <a href="https://github.com/nushell/nushell/pull/5773" target="_blank" rel="noopener noreferrer">Add NU config to allow user be able to turn off external completion</a>, and <a href="https://github.com/nushell/nushell/pull/5749" target="_blank" rel="noopener noreferrer">Support completion for alias and sub-command</a>, and <a href="https://github.com/nushell/nushell/pull/5642" target="_blank" rel="noopener noreferrer">Fix cp bug</a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell/pull/5765" target="_blank" rel="noopener noreferrer">more verbose error handling</a>, and <a href="https://github.com/nushell/nushell/pull/5733" target="_blank" rel="noopener noreferrer">make <code>to text</code> work more intuitively</a>, and <a href="https://github.com/nushell/nushell/pull/5646" target="_blank" rel="noopener noreferrer">add case_sensitive_completions config option</a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell/pull/5763" target="_blank" rel="noopener noreferrer">Add setup-nu link in README.md</a>, and <a href="https://github.com/nushell/nushell/pull/5725" target="_blank" rel="noopener noreferrer">fix: normalize some parameter names</a>, and <a href="https://github.com/nushell/nushell/pull/5696" target="_blank" rel="noopener noreferrer">Fix doc building for vuepress-next, avoid using angle brackets</a>, and <a href="https://github.com/nushell/nushell/pull/5685" target="_blank" rel="noopener noreferrer">feat: Add sensitive flag to get, fix #4295</a>, and <a href="https://github.com/nushell/nushell/pull/5671" target="_blank" rel="noopener noreferrer">feat: Add search terms to find, where, exit, which and fetch, update #5093</a>, and <a href="https://github.com/nushell/nushell/pull/5649" target="_blank" rel="noopener noreferrer">Refactor and optimize the github release workflow: deliver binary package for more targets</a></li>
<li>Mathspy created <a href="https://github.com/nushell/nushell/pull/5761" target="_blank" rel="noopener noreferrer">Should we keep old semantics of <code>uniq</code> command?</a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell/pull/5747" target="_blank" rel="noopener noreferrer">Temporarily disable rust-cache in tests</a>, and <a href="https://github.com/nushell/nushell/pull/5718" target="_blank" rel="noopener noreferrer">Clean up README</a>, and <a href="https://github.com/nushell/nushell/pull/5717" target="_blank" rel="noopener noreferrer">Statically link the CRT on Windows</a>, and <a href="https://github.com/nushell/nushell/pull/5703" target="_blank" rel="noopener noreferrer">Fix <code>ls</code> for Windows system files</a>, and <a href="https://github.com/nushell/nushell/pull/5651" target="_blank" rel="noopener noreferrer">Don't build OpenSSL on Windows</a></li>
<li>kubouch created <a href="https://github.com/nushell/nushell/pull/5739" target="_blank" rel="noopener noreferrer">Add <code>$nu.scope.engine_state</code></a>, and <a href="https://github.com/nushell/nushell/pull/5698" target="_blank" rel="noopener noreferrer">Fix wrong <code>path</code> help message</a>, and <a href="https://github.com/nushell/nushell/pull/5648" target="_blank" rel="noopener noreferrer">Shorten the links of parser keywords help msgs</a>, and <a href="https://github.com/nushell/nushell/pull/5647" target="_blank" rel="noopener noreferrer">Add 'overlay new' command</a></li>
<li>jaeheonji created <a href="https://github.com/nushell/nushell/pull/5723" target="_blank" rel="noopener noreferrer">feat: add search terms to category of strings</a></li>
<li>phiresky created <a href="https://github.com/nushell/nushell/pull/5721" target="_blank" rel="noopener noreferrer">SQLite History MVP with timestamp, duration, working directory, exit status metadata</a></li>
<li>herlon214 created <a href="https://github.com/nushell/nushell/pull/5715" target="_blank" rel="noopener noreferrer">nu-engine: better display for shape when showing help params</a>, and <a href="https://github.com/nushell/nushell/pull/5653" target="_blank" rel="noopener noreferrer">nu-cli/completions: add filtering tests for variables completions</a>, and <a href="https://github.com/nushell/nushell/pull/5641" target="_blank" rel="noopener noreferrer">nu-cli/completions: fix filter for variable completions</a></li>
<li>sec65 created <a href="https://github.com/nushell/nushell/pull/5714" target="_blank" rel="noopener noreferrer">Added loginshell config file #4620</a></li>
<li>VergeDX created <a href="https://github.com/nushell/nushell/pull/5705" target="_blank" rel="noopener noreferrer">fix[table]: Panic when passthru small number of <code>table -w</code>.</a>, and <a href="https://github.com/nushell/nushell/pull/5643" target="_blank" rel="noopener noreferrer">feat[table]: Allow specific table width with <code>-w</code>, like command <code>grid</code>.</a></li>
<li>PerBothner created <a href="https://github.com/nushell/nushell/pull/5701" target="_blank" rel="noopener noreferrer">Minor fixes to shell integation in repl.</a>, and <a href="https://github.com/nushell/nushell/pull/5699" target="_blank" rel="noopener noreferrer">Improve table output of 'to html',</a></li>
<li>Yethal created <a href="https://github.com/nushell/nushell/pull/5700" target="_blank" rel="noopener noreferrer">Add completions for nu</a></li>
<li>mjclements created <a href="https://github.com/nushell/nushell/pull/5667" target="_blank" rel="noopener noreferrer">Differentiate internal signature from external signature w.r.t. help</a></li>
<li>EjPlatzer created <a href="https://github.com/nushell/nushell/pull/5665" target="_blank" rel="noopener noreferrer">Add search terms for <code>all?</code>, <code>any?</code>, <code>length</code>, and <code>keybindings</code></a></li>
<li>tenshik created <a href="https://github.com/nushell/nushell/pull/5652" target="_blank" rel="noopener noreferrer">feat: add search terms to random &amp; typo fix</a></li>
<li>onthebridgetonowhere created <a href="https://github.com/nushell/nushell/pull/5312" target="_blank" rel="noopener noreferrer">Fix drop nth bug</a></li>
</ul>
<h2 id="documentation" tabindex="-1"> Documentation</h2>
<ul>
<li>aslilac created <a href="https://github.com/nushell/nushell.github.io/pull/499" target="_blank" rel="noopener noreferrer">docs(book): Update the &quot;Coming from Bash&quot; page</a></li>
<li>jcjolley created <a href="https://github.com/nushell/nushell.github.io/pull/498" target="_blank" rel="noopener noreferrer">Show how to cast between number types</a></li>
<li>f2hafner created <a href="https://github.com/nushell/nushell.github.io/pull/497" target="_blank" rel="noopener noreferrer">Fixed example causing type_mismatch in working_with_lists.md</a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell.github.io/pull/495" target="_blank" rel="noopener noreferrer">Add nav links for some new de docs, and do dome doc formatting</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/491" target="_blank" rel="noopener noreferrer">Fix side nav links for nu book</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/490" target="_blank" rel="noopener noreferrer">Fix some broken links</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/487" target="_blank" rel="noopener noreferrer">fix: update deploy workflow for checkout</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/486" target="_blank" rel="noopener noreferrer">Revert &quot;Fix checkout step for feed plugin&quot;</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/485" target="_blank" rel="noopener noreferrer">Fix checkout step for feed plugin</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/484" target="_blank" rel="noopener noreferrer">fix feed plugin configs, make it work as expected</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/483" target="_blank" rel="noopener noreferrer">feat: Add sitemap generator to create sitemap.xml</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/482" target="_blank" rel="noopener noreferrer">Fix responsive layout for more screen size</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/480" target="_blank" rel="noopener noreferrer">Fix responsive layout for mobile devices</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/479" target="_blank" rel="noopener noreferrer">Update prettier config and run code format</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/478" target="_blank" rel="noopener noreferrer">fix feed plugin add atom support</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/477" target="_blank" rel="noopener noreferrer">Fix search box style, make it wider</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/476" target="_blank" rel="noopener noreferrer">Fix search box style, make it align left</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/475" target="_blank" rel="noopener noreferrer">Trigger deploy workflow</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/474" target="_blank" rel="noopener noreferrer">Fix command detail page, update make_docs.nu</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/465" target="_blank" rel="noopener noreferrer">Upgrade vuepress to v2 and add dark mode support</a></li>
<li>petrisch created <a href="https://github.com/nushell/nushell.github.io/pull/494" target="_blank" rel="noopener noreferrer">Some new German translation with new snippet links</a></li>
<li>elferherrera created <a href="https://github.com/nushell/nushell.github.io/pull/493" target="_blank" rel="noopener noreferrer">remove dfr from dataframe chapter</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/466" target="_blank" rel="noopener noreferrer">lazyframes section</a></li>
<li>lfritz created <a href="https://github.com/nushell/nushell.github.io/pull/492" target="_blank" rel="noopener noreferrer">Fix a couple of typos</a></li>
<li>CAD97 created <a href="https://github.com/nushell/nushell.github.io/pull/489" target="_blank" rel="noopener noreferrer">Replace <code>str find-replace</code> with <code>str replace</code> in <code>coming_from_bash.md</code></a></li>
<li>sec65 created <a href="https://github.com/nushell/nushell.github.io/pull/488" target="_blank" rel="noopener noreferrer">Add doc fo loginshell file #4620</a></li>
<li>Dan-Gamin created <a href="https://github.com/nushell/nushell.github.io/pull/481" target="_blank" rel="noopener noreferrer">Add more documentation about strings</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell.github.io/pull/471" target="_blank" rel="noopener noreferrer">Add documentation for switch flags</a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell.github.io/pull/470" target="_blank" rel="noopener noreferrer">remove file paths since they're not a thing any longer</a></li>
<li>jgollenz created <a href="https://github.com/nushell/nushell.github.io/pull/469" target="_blank" rel="noopener noreferrer">Add 'Reading environment variables' section</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/462" target="_blank" rel="noopener noreferrer">typos</a></li>
<li>Yethal created <a href="https://github.com/nushell/nushell.github.io/pull/467" target="_blank" rel="noopener noreferrer">Update dataframes.md</a></li>
<li>kubouch created <a href="https://github.com/nushell/nushell.github.io/pull/459" target="_blank" rel="noopener noreferrer">Fix config variable name</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/457" target="_blank" rel="noopener noreferrer">Add 'overlay new' tip</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/456" target="_blank" rel="noopener noreferrer">Add overlays chapter</a></li>
<li>schuelermine created <a href="https://github.com/nushell/nushell.github.io/pull/458" target="_blank" rel="noopener noreferrer">book/operators.md: add <code>not</code> operator</a></li>
</ul>
<h2 id="nu-scripts" tabindex="-1"> Nu_Scripts</h2>
<ul>
<li>Yethal created <a href="https://github.com/nushell/nu_scripts/pull/251" target="_blank" rel="noopener noreferrer">Update branch-protections.nu</a>, and <a href="https://github.com/nushell/nu_scripts/pull/250" target="_blank" rel="noopener noreferrer">Add branch protections</a>, and <a href="https://github.com/nushell/nu_scripts/pull/239" target="_blank" rel="noopener noreferrer">Update remoting.nu</a>, and <a href="https://github.com/nushell/nu_scripts/pull/238" target="_blank" rel="noopener noreferrer">Update ssh script for 0.63.0</a>, and <a href="https://github.com/nushell/nu_scripts/pull/232" target="_blank" rel="noopener noreferrer">Update make-completions.nu</a></li>
<li>skelly37 created <a href="https://github.com/nushell/nu_scripts/pull/249" target="_blank" rel="noopener noreferrer">Update checker for /etc/hosts</a>, and <a href="https://github.com/nushell/nu_scripts/pull/248" target="_blank" rel="noopener noreferrer">cdpath.nu -- more clear for windows</a>, and <a href="https://github.com/nushell/nu_scripts/pull/247" target="_blank" rel="noopener noreferrer">cdpath fixed for windows</a>, and <a href="https://github.com/nushell/nu_scripts/pull/245" target="_blank" rel="noopener noreferrer">cdpath.nu moved and improved</a></li>
<li>Dan-Gamin created <a href="https://github.com/nushell/nu_scripts/pull/241" target="_blank" rel="noopener noreferrer">Add <code>helpers</code> folder and add script for running C/C++ quickly</a>, and <a href="https://github.com/nushell/nu_scripts/pull/235" target="_blank" rel="noopener noreferrer">Add pwd-short to cool-oneliners</a>, and <a href="https://github.com/nushell/nu_scripts/pull/233" target="_blank" rel="noopener noreferrer">Add more cargo completions</a></li>
<li>ehdevries created <a href="https://github.com/nushell/nu_scripts/pull/240" target="_blank" rel="noopener noreferrer">Improve panache-git performance for changes with many files</a></li>
<li>Jacobious52 created <a href="https://github.com/nushell/nu_scripts/pull/237" target="_blank" rel="noopener noreferrer">generated nu completions from fish</a>, and <a href="https://github.com/nushell/nu_scripts/pull/236" target="_blank" rel="noopener noreferrer">autogenerate from Fish shell completions</a></li>
<li>sholderbach created <a href="https://github.com/nushell/nu_scripts/pull/234" target="_blank" rel="noopener noreferrer">Script to gather test coverage for nushell</a></li>
<li>fdncred created <a href="https://github.com/nushell/nu_scripts/pull/231" target="_blank" rel="noopener noreferrer">use default bg color for execution time</a></li>
</ul>
<h2 id="reedline" tabindex="-1"> reedline</h2>
<ul>
<li>sholderbach created <a href="https://github.com/nushell/reedline/pull/440" target="_blank" rel="noopener noreferrer">Prepare 0.7.0 release</a>, and <a href="https://github.com/nushell/reedline/pull/439" target="_blank" rel="noopener noreferrer">Expose the <code>History</code> query functionality</a>, and <a href="https://github.com/nushell/reedline/pull/437" target="_blank" rel="noopener noreferrer">Update nu-ansi-term/update crate patch versions</a>, and <a href="https://github.com/nushell/reedline/pull/435" target="_blank" rel="noopener noreferrer">Fix clippy lints that will become warnings</a>, and <a href="https://github.com/nushell/reedline/pull/433" target="_blank" rel="noopener noreferrer">Organize the common keybindings</a></li>
<li>WindSoilder created <a href="https://github.com/nushell/reedline/pull/436" target="_blank" rel="noopener noreferrer">Don't panic when parent directory does not exist</a></li>
<li>Artturin created <a href="https://github.com/nushell/reedline/pull/434" target="_blank" rel="noopener noreferrer">Move ctrl+a &amp; ctrl+e to common navigation binds</a>, and <a href="https://github.com/nushell/reedline/pull/432" target="_blank" rel="noopener noreferrer">Move some commonly used keybinds to common keybinds</a></li>
<li>phiresky created <a href="https://github.com/nushell/reedline/pull/401" target="_blank" rel="noopener noreferrer">SQLite History (third version)</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.63</title>
      <link>https://www.nushell.sh/blog/2022-05-24-nushell_0_63.html</link>
      <guid>https://www.nushell.sh/blog/2022-05-24-nushell_0_63.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.63</source>
      <description> Nushell 0.63
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing version 0.63 of Nu. This release is the first to include the 'overlays' feature, hooks, lazy dataframes, and more.
</description>
      <pubDate>Wed, 25 May 2022 02:38:25 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-63" tabindex="-1"> Nushell 0.63</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing version 0.63 of Nu. This release is the first to include the 'overlays' feature, hooks, lazy dataframes, and more.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.63 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.63.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the built-in goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="themes-of-this-release" tabindex="-1"> Themes of this release</h1>
<h2 id="overlays-kubouch" tabindex="-1"> Overlays (kubouch)</h2>
<p>We've added a new concept into this release that merges a few of our previous design ideas together: overlays. You can think of overlays like layers in a paint program. They work together to give you a set of commands, environment variables, and more that you can turn on and off as needed.</p>
<p>For example, we can create an overlay to work in:</p>
<div><pre><code>(zero) > module code { export env BAZ { "baz" } }
(zero) > overlay add code
(code) > $env.BAZ
baz
(code) > let-env BAGR = "bagr"
(code) > $env.BAGR
bagr
(code) > overlay remove code
(zero) > # environment back to what we started with
</code></pre></div><p>Just like layers in a paint program, changes you make (like the update to the environment above) are part of the layer. You can use <code>--keep-custom</code> to keep the changes you have made even after you hide the overlay. Using <code>add</code> and <code>remove</code> are effectively like <code>show</code> and <code>hide</code>, allowing you to quickly switch into a new context, do some work, and switch out with little effort.</p>
<h2 id="hooks-jt" tabindex="-1"> Hooks (jt)</h2>
<p>Starting with 0.63, you can now set up hooks that will run code under certain conditions. These hooks run after your code has finished evaluating.</p>
<p>Let's look first at how to set up the hooks, and then see what the hooks output. To set up a hook, you pick the kind of hook and then configure a block of code to run when that hook fires:</p>
<div><pre><code>hooks: {
    pre_prompt: [{
        print "pre_prompt hook"
    }]
    pre_execution: [{
        print "pre_execution hook"
    }]
    env_change: {
        PWD: [{|before, after|
            print $"PWD environment variable changed from ($before) to ($after)"
        }]
    }
}
</code></pre></div><p>Using this example, we can watch the hooks fire:</p>
<div><pre><code>/home/jt/Source/nushell〉cd ..
pre_execution hook
pre_prompt hook
PWD environment variable changed from /home/jt/Source/nushell to /home/jt/Source
/home/jt/Source〉
</code></pre></div><p>Used together with the &quot;overlays&quot; feature above, we hope to open up the possibility for a lot of powerful interactions with the shell while still keeping the workflow that makes Nushell special.</p>
<h2 id="lazy-dataframe-support-elferherrera" tabindex="-1"> Lazy dataframe support (elferherrera)</h2>
<p>We are starting to support a new way to query dataframes by using lazyframes. This new concept will allow users to build logical plans for the data operations which will result in a reduction of the dataframe processing time.</p>
<p>Lazy dataframes are accessed through the same <code>dfr</code> command and give you a way to build up a pipeline to execute in a more optimal way than the previous eager dataframes. For example, you can perform your aggregations and group-bys lazily, and then work on the results instead of paying for the processing time of having two separate steps.</p>
<h1 id="new-commands" tabindex="-1"> New commands</h1>
<ul>
<li>(Returned from the engine rewrite) <code>histogram</code> for checking distributions right inside nushell (WindSoilder)</li>
<li><code>config nu</code> and <code>config env</code> to easily edit your nushell configuration files with your editor of choice (Kangaxx-0/vFrankZhang)</li>
<li><code>str title-case</code> (krober)<div><pre><code>> 'this is a test case' | str title-case
This Is A Test Case
</code></pre></div></li>
<li>Many new <code>db</code> subcommands (elferherrera)</li>
</ul>
<h1 id="quality-of-life-improvements" tabindex="-1"> Quality-of-life Improvements</h1>
<ul>
<li>
<p>More commands contain additional search terms to find them if you don't remember their exact name. (victormanueltn, LawlietLi) This is a great way to help out by contributing! More information can be found <a href="https://github.com/nushell/nushell/issues/5093" target="_blank" rel="noopener noreferrer">here</a>.</p>
</li>
<li>
<p><code>print -n</code> option to print output without an additional new-line (fdncred)</p>
</li>
<li>
<p><code>flatten</code> now has a more consistent behavior for nested records and tables. (WindSoilder) This now more closely matches the pre-0.60 flatten, and should help create more predictable output.</p>
</li>
<li>
<p>We now support octal binary literals <code>0o[777]</code> similar to the hexadecimal <code>0x[FF]</code> and binary <code>0b[11111111]</code> literals (toffaletti)</p>
</li>
<li>
<p><code>cd</code> accepts abreviation of paths to quickly jump to nested directories based on unique prefixes (fdncred)</p>
<div><pre><code>> $env.PWD
~/some/path
> cd d/s/9
> $env.PWD
~/some/path/deep/space/9
</code></pre></div></li>
<li>
<p>Various improvements make the completions feel more polished (herlon214, PurityLake)</p>
</li>
<li>
<p>If <code>$config.buffer_editor</code> is not set rely on the <code>$env.EDITOR</code> and <code>$env.VISUAL</code> environment variables to find a text editor to edit longer pipelines or your <code>config ...</code> (Kangaxx-0/vFrankZhang, sholderbach)</p>
</li>
<li>
<p>When invoking <code>nu</code> to run a script you can now pass the <code>--config</code> flag to load your <code>config.nu</code> and have the definitions available when running the script (WindSoilder)</p>
</li>
<li>
<p>Similarly you can change the table appearance with the <code>--table-mode</code> flag when invoking <code>nu</code> (fdncred)</p>
</li>
</ul>
<p><strong>Note:</strong> this is a shortened list. For the full list, see the &quot;Changelog&quot; section below</p>
<h1 id="breaking-changes" tabindex="-1"> Breaking changes</h1>
<h2 id="changed-default-keybindings" tabindex="-1"> Changed default keybindings:</h2>
<table>
<thead>
<tr>
<th>Old binding</th>
<th>New binding</th>
<th>Action</th>
<th>Reason for the change</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Ctrl-x</code></td>
<td><code>Ctrl-r</code></td>
<td>Visual history search menu</td>
<td>We replaced the simple history search (previously bound to <code>Ctrl-r</code>, <code>cmd: SearchHistory</code>) with the menu that supports previewing several entries at once for quick navigation</td>
</tr>
<tr>
<td><code>Ctrl-q</code></td>
<td><code>F1</code></td>
<td>Interactive help menu</td>
<td><code>F1</code> is generally the convention for help information, with this menu you can search for commands browse through their documentation and pick examples to include/run</td>
</tr>
</tbody>
</table>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>Here are a few of the things we're working on:</p>
<p>SQLite based history. This will maintain a larger number of entries that can searched using date, usage or text.</p>
<p>Input/output types. These will allow commands to be specialized based on the input they're given as we well as allow the typechecker to check that commands can connect on the pipeline together.</p>
<p>And more - we're still looking ahead to IDE support, better database support, and more.</p>
<h1 id="changelog" tabindex="-1"> Changelog</h1>
<h2 id="nushell" tabindex="-1"> Nushell</h2>
<ul>
<li>kubouch created <a href="https://github.com/nushell/nushell/pull/5629" target="_blank" rel="noopener noreferrer">Overlay keep</a>, and <a href="https://github.com/nushell/nushell/pull/5478" target="_blank" rel="noopener noreferrer">Add Nushell REPL simulator; Fix bug in overlay add</a>, and created <a href="https://github.com/nushell/nushell/pull/5375" target="_blank" rel="noopener noreferrer">Overlays</a></li>
<li>jt created <a href="https://github.com/nushell/nushell/pull/5627" target="_blank" rel="noopener noreferrer">Bump to 0.63</a>, and <a href="https://github.com/nushell/nushell/pull/5600" target="_blank" rel="noopener noreferrer">Add environment change hook</a>, and <a href="https://github.com/nushell/nushell/pull/5561" target="_blank" rel="noopener noreferrer">Revert &quot;Try to do less work during capture discovery&quot;</a>, and <a href="https://github.com/nushell/nushell/pull/5560" target="_blank" rel="noopener noreferrer">Try to do less work during capture discovery</a>, and <a href="https://github.com/nushell/nushell/pull/5549" target="_blank" rel="noopener noreferrer">Try removing debuginfo for ci builds</a>, and <a href="https://github.com/nushell/nushell/pull/5480" target="_blank" rel="noopener noreferrer">Allow hooks to be lists of blocks</a>, and <a href="https://github.com/nushell/nushell/pull/5479" target="_blank" rel="noopener noreferrer">Add hooks to cli/repl</a>, and <a href="https://github.com/nushell/nushell/pull/5473" target="_blank" rel="noopener noreferrer">Bump to the 0.62.1 dev version</a></li>
<li>sholderbach created <a href="https://github.com/nushell/nushell/pull/5620" target="_blank" rel="noopener noreferrer">Pin reedline v0.6.0 for the nushell v0.63.0 release</a>, and <a href="https://github.com/nushell/nushell/pull/5616" target="_blank" rel="noopener noreferrer">Add meta command for the config subcommands</a>, and <a href="https://github.com/nushell/nushell/pull/5614" target="_blank" rel="noopener noreferrer">Fallback for <code>config.buffer_editor</code> from <code>EDITOR</code></a>, and <a href="https://github.com/nushell/nushell/pull/5599" target="_blank" rel="noopener noreferrer">Refer to the span of <code>error make</code> if not given</a>, and <a href="https://github.com/nushell/nushell/pull/5598" target="_blank" rel="noopener noreferrer">Use bleeding edge reedline, with fix for #5593</a>, and <a href="https://github.com/nushell/nushell/pull/5588" target="_blank" rel="noopener noreferrer">Change miette theme based on ANSI config</a>, and <a href="https://github.com/nushell/nushell/pull/5587" target="_blank" rel="noopener noreferrer">Use effectively unlimited history size if not set</a>, and <a href="https://github.com/nushell/nushell/pull/5510" target="_blank" rel="noopener noreferrer">Move help menu to canonical <code>F1</code> binding</a></li>
<li>WindSoilder created <a href="https://github.com/nushell/nushell/pull/5619" target="_blank" rel="noopener noreferrer">fix date format</a>, and <a href="https://github.com/nushell/nushell/pull/5618" target="_blank" rel="noopener noreferrer">load config when requried</a>, and <a href="https://github.com/nushell/nushell/pull/5611" target="_blank" rel="noopener noreferrer">Make flatten works better and predictable</a>, and <a href="https://github.com/nushell/nushell/pull/5606" target="_blank" rel="noopener noreferrer">adjust flatten default behavior</a>, and <a href="https://github.com/nushell/nushell/pull/5590" target="_blank" rel="noopener noreferrer">Don't report error when cwd is not exists.</a>, and <a href="https://github.com/nushell/nushell/pull/5584" target="_blank" rel="noopener noreferrer">Fix flatten behavior</a>, and <a href="https://github.com/nushell/nushell/pull/5583" target="_blank" rel="noopener noreferrer">add quantile column in histogram </a>, and <a href="https://github.com/nushell/nushell/pull/5577" target="_blank" rel="noopener noreferrer">fix select tests</a>, and <a href="https://github.com/nushell/nushell/pull/5576" target="_blank" rel="noopener noreferrer">fix move test</a>, and <a href="https://github.com/nushell/nushell/pull/5570" target="_blank" rel="noopener noreferrer">Make format support nested column and use variable</a>, and <a href="https://github.com/nushell/nushell/pull/5553" target="_blank" rel="noopener noreferrer">use reverse iter on value search</a>, and <a href="https://github.com/nushell/nushell/pull/5541" target="_blank" rel="noopener noreferrer">Fix Value::Record compare logic, and pass uniq tests.</a>, and <a href="https://github.com/nushell/nushell/pull/5536" target="_blank" rel="noopener noreferrer">fix zip test</a>, and <a href="https://github.com/nushell/nushell/pull/5534" target="_blank" rel="noopener noreferrer">add rename</a>, and <a href="https://github.com/nushell/nushell/pull/5518" target="_blank" rel="noopener noreferrer">Implement histogram command</a>, and <a href="https://github.com/nushell/nushell/pull/5502" target="_blank" rel="noopener noreferrer">keep metadata while format filesize</a>, and <a href="https://github.com/nushell/nushell/pull/5498" target="_blank" rel="noopener noreferrer">add format filesize</a>, and <a href="https://github.com/nushell/nushell/pull/5464" target="_blank" rel="noopener noreferrer">complete some commands tests</a>, and <a href="https://github.com/nushell/nushell/pull/5461" target="_blank" rel="noopener noreferrer">Document out positional argument type in help message</a>, and created <a href="https://github.com/nushell/nushell/pull/5454" target="_blank" rel="noopener noreferrer">make cd recornize symblic link</a>, and <a href="https://github.com/nushell/nushell/pull/5453" target="_blank" rel="noopener noreferrer">implement seq char command to generate single character sequence</a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell/pull/5610" target="_blank" rel="noopener noreferrer">fix typo for <code>version</code> command</a>, and <a href="https://github.com/nushell/nushell/pull/5594" target="_blank" rel="noopener noreferrer">Fix #5578, assume pipe file be zero-sized</a>, and <a href="https://github.com/nushell/nushell/pull/5511" target="_blank" rel="noopener noreferrer">feat: add <code>tutor list</code> support, remove tutor <code>engine-q</code>, fix: #4950</a>, and <a href="https://github.com/nushell/nushell/pull/5501" target="_blank" rel="noopener noreferrer">Fix #3899, make <code>mv</code> and <code>rm</code> to be quiet by default</a>, and <a href="https://github.com/nushell/nushell/pull/5500" target="_blank" rel="noopener noreferrer">opt: improve ls by call get_file_type only one time</a>, and <a href="https://github.com/nushell/nushell/pull/5494" target="_blank" rel="noopener noreferrer">Improve #4975 of filtering <code>ls</code> output by size issue</a>, and <a href="https://github.com/nushell/nushell/pull/5485" target="_blank" rel="noopener noreferrer">Fix #5469, making $nothing or null convert to filesize of 0B</a>, and <a href="https://github.com/nushell/nushell/pull/5483" target="_blank" rel="noopener noreferrer">Fix <code>to csv</code> and <code>to tsv</code> for simple list, close: #4780</a>, and <a href="https://github.com/nushell/nushell/pull/5467" target="_blank" rel="noopener noreferrer">feat: add disable field type inferencing for <code>from csv</code> and <code>from tsv</code>, fix: #3485 and #4217</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell/pull/5609" target="_blank" rel="noopener noreferrer">Allow for test_iteration_errors to work when run as root</a>, and <a href="https://github.com/nushell/nushell/pull/5601" target="_blank" rel="noopener noreferrer">Allows the test <code>commands::ls::fails_with_ls_to_dir_without_permission</code> to work when run as root</a>, and <a href="https://github.com/nushell/nushell/pull/5579" target="_blank" rel="noopener noreferrer">Allowing for flags with '=' in them to register as flags.</a>, and <a href="https://github.com/nushell/nushell/pull/5493" target="_blank" rel="noopener noreferrer">Adds fix for when multiple flags are in one line.</a>, and created <a href="https://github.com/nushell/nushell/pull/5447" target="_blank" rel="noopener noreferrer">Fixing the flag issue</a>, and <a href="https://github.com/nushell/nushell/pull/5446" target="_blank" rel="noopener noreferrer">Adds flags and optional arguments to view-source</a></li>
<li>Kangaxx-0 created <a href="https://github.com/nushell/nushell/pull/5607" target="_blank" rel="noopener noreferrer">Add config command</a>, and <a href="https://github.com/nushell/nushell/pull/5512" target="_blank" rel="noopener noreferrer">Add verbose</a>, and <a href="https://github.com/nushell/nushell/pull/5482" target="_blank" rel="noopener noreferrer">Add feedback to cp</a></li>
<li>toffaletti created <a href="https://github.com/nushell/nushell/pull/5604" target="_blank" rel="noopener noreferrer">Add octal binary literals</a></li>
<li>victormanueltn created <a href="https://github.com/nushell/nushell/pull/5603" target="_blank" rel="noopener noreferrer">Add search term to str substring command.</a>, and <a href="https://github.com/nushell/nushell/pull/5557" target="_blank" rel="noopener noreferrer">Add search terms to build-string command.</a></li>
<li>LawlietLi created <a href="https://github.com/nushell/nushell/pull/5602" target="_blank" rel="noopener noreferrer">feat: add search terms to network</a></li>
<li>IanManske created <a href="https://github.com/nushell/nushell/pull/5581" target="_blank" rel="noopener noreferrer">Fix help menu panic.</a></li>
<li>jaeheonji created <a href="https://github.com/nushell/nushell/pull/5575" target="_blank" rel="noopener noreferrer">feat: apply the <code>--numbered</code> option to acc in <code>reduce</code> command.</a></li>
<li>krober created <a href="https://github.com/nushell/nushell/pull/5573" target="_blank" rel="noopener noreferrer">Add str title-case</a>, and <a href="https://github.com/nushell/nushell/pull/5572" target="_blank" rel="noopener noreferrer">Str casings reorganization &amp; description updates</a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell/pull/5569" target="_blank" rel="noopener noreferrer">move items to showcase</a>, and <a href="https://github.com/nushell/nushell/pull/5567" target="_blank" rel="noopener noreferrer">refactor all write_alls to ensure flushing</a>, and <a href="https://github.com/nushell/nushell/pull/5566" target="_blank" rel="noopener noreferrer">make print flush</a>, and <a href="https://github.com/nushell/nushell/pull/5555" target="_blank" rel="noopener noreferrer">table refactor for readability</a>, and <a href="https://github.com/nushell/nushell/pull/5520" target="_blank" rel="noopener noreferrer">add the ability to change table mode when running script</a>, and <a href="https://github.com/nushell/nushell/pull/5513" target="_blank" rel="noopener noreferrer">add <code>--table_mode</code> <code>-m</code> parameter</a>, and <a href="https://github.com/nushell/nushell/pull/5503" target="_blank" rel="noopener noreferrer">refactor for legibility</a>, and <a href="https://github.com/nushell/nushell/pull/5491" target="_blank" rel="noopener noreferrer">adjust where prompt markers go</a>, and <a href="https://github.com/nushell/nushell/pull/5458" target="_blank" rel="noopener noreferrer">add -n flag to print to print without a newline</a>, and <a href="https://github.com/nushell/nushell/pull/5452" target="_blank" rel="noopener noreferrer">enable cd to work with directory abbreviations</a>, and <a href="https://github.com/nushell/nushell/pull/5450" target="_blank" rel="noopener noreferrer">fix bug in shell_integration</a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell/pull/5568" target="_blank" rel="noopener noreferrer">Revert &quot;Enable backtraces by default (#5562)&quot;</a>, and <a href="https://github.com/nushell/nushell/pull/5563" target="_blank" rel="noopener noreferrer">Upgrade trash dependency</a>, and <a href="https://github.com/nushell/nushell/pull/5562" target="_blank" rel="noopener noreferrer">Enable backtraces by default</a>, and <a href="https://github.com/nushell/nushell/pull/5556" target="_blank" rel="noopener noreferrer">Remove doctests CI action</a>, and <a href="https://github.com/nushell/nushell/pull/5550" target="_blank" rel="noopener noreferrer">CI: bust caches</a>, and <a href="https://github.com/nushell/nushell/pull/5548" target="_blank" rel="noopener noreferrer">Look up git commit hash ourselves, drop libgit2 dependency</a>, and <a href="https://github.com/nushell/nushell/pull/5527" target="_blank" rel="noopener noreferrer">More CI work</a>, and <a href="https://github.com/nushell/nushell/pull/5507" target="_blank" rel="noopener noreferrer">Change history menu keybinding from ctrl+x to ctrl+r</a>, and <a href="https://github.com/nushell/nushell/pull/5489" target="_blank" rel="noopener noreferrer">Enable converting dates to ints</a>, and <a href="https://github.com/nushell/nushell/pull/5488" target="_blank" rel="noopener noreferrer">Parse timestamps as UTC by default</a>, and <a href="https://github.com/nushell/nushell/pull/5487" target="_blank" rel="noopener noreferrer">Display range values better</a>, and <a href="https://github.com/nushell/nushell/pull/5484" target="_blank" rel="noopener noreferrer">Handle int input in <code>into datetime</code></a>, and <a href="https://github.com/nushell/nushell/pull/5463" target="_blank" rel="noopener noreferrer">Enable string interpolation for environment shorthand</a></li>
<li>efugier created <a href="https://github.com/nushell/nushell/pull/5564" target="_blank" rel="noopener noreferrer">feat(errors): more explicit module_or_overlay_not_found_error help me…</a></li>
<li>ocitrev created <a href="https://github.com/nushell/nushell/pull/5554" target="_blank" rel="noopener noreferrer">Sync resources version</a></li>
<li>elferherrera created <a href="https://github.com/nushell/nushell/pull/5546" target="_blank" rel="noopener noreferrer">Lazy dataframes</a>, and <a href="https://github.com/nushell/nushell/pull/5477" target="_blank" rel="noopener noreferrer">join and from derived tables</a>, and <a href="https://github.com/nushell/nushell/pull/5466" target="_blank" rel="noopener noreferrer">Database commands</a></li>
<li>herlon214 created <a href="https://github.com/nushell/nushell/pull/5543" target="_blank" rel="noopener noreferrer">nu-cli/completions: add custom completion test</a>, and <a href="https://github.com/nushell/nushell/pull/5537" target="_blank" rel="noopener noreferrer">nu-glob: add fs::symlink_metadata to detect broken symlinks</a>, and <a href="https://github.com/nushell/nushell/pull/5524" target="_blank" rel="noopener noreferrer">nu-command/filesystem: fix rm .sock file</a>, and <a href="https://github.com/nushell/nushell/pull/5506" target="_blank" rel="noopener noreferrer">nu-cli/completions: verify case for matching dir, .nu, file and command</a>, and <a href="https://github.com/nushell/nushell/pull/5504" target="_blank" rel="noopener noreferrer">nu-cli/completions: add variable completions test + refactor tests</a>, and <a href="https://github.com/nushell/nushell/pull/5468" target="_blank" rel="noopener noreferrer">nu-cli/completions: add tests for flag completions</a>, and <a href="https://github.com/nushell/nushell/pull/5460" target="_blank" rel="noopener noreferrer">nu-cli/completions: add tests for dotnu completions</a>, and <a href="https://github.com/nushell/nushell/pull/5459" target="_blank" rel="noopener noreferrer">nu-cli/completions: send original line to custom completer</a></li>
<li>njbull4 created <a href="https://github.com/nushell/nushell/pull/5523" target="_blank" rel="noopener noreferrer">cp, mv, and rm commands need to support -i flag</a></li>
<li>CozyPenguin created <a href="https://github.com/nushell/nushell/pull/5514" target="_blank" rel="noopener noreferrer">bump umask crate to 2.0.0</a></li>
<li>jmoore34 created <a href="https://github.com/nushell/nushell/pull/5496" target="_blank" rel="noopener noreferrer">Update comment in default_config.nu [skip ci]</a></li>
<li>pejato created <a href="https://github.com/nushell/nushell/pull/5490" target="_blank" rel="noopener noreferrer">Make $nothing | into string == &quot;&quot;</a></li>
<li>onthebridgetonowhere created <a href="https://github.com/nushell/nushell/pull/5462" target="_blank" rel="noopener noreferrer">Fix cp bug</a></li>
<li>PurityLake created <a href="https://github.com/nushell/nushell/pull/5440" target="_blank" rel="noopener noreferrer">Made a change to completion resolution order</a></li>
<li>gipsyh created <a href="https://github.com/nushell/nushell/pull/5434" target="_blank" rel="noopener noreferrer">Add split number flag in <code>split row</code></a></li>
</ul>
<h2 id="documentation" tabindex="-1"> Documentation</h2>
<ul>
<li>sholderbach created <a href="https://github.com/nushell/nushell.github.io/pull/446" target="_blank" rel="noopener noreferrer">Remove outdated reference to <code>open</code> pager</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/445" target="_blank" rel="noopener noreferrer">Document the octal binary literals</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/434" target="_blank" rel="noopener noreferrer">Mention default values for command parameters.</a></li>
<li>unional created <a href="https://github.com/nushell/nushell.github.io/pull/444" target="_blank" rel="noopener noreferrer">docs: add <code>pwd</code> to <code>coming_from_bash.md</code></a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell.github.io/pull/443" target="_blank" rel="noopener noreferrer">Update zh-CN home page and keep the Chinese and English docs in sync</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/442" target="_blank" rel="noopener noreferrer">Update some zh-CN translations from commit: 008c89fc26</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/438" target="_blank" rel="noopener noreferrer">Update some zh-CN translatons from commit: 6f61fadb69</a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell.github.io/pull/441" target="_blank" rel="noopener noreferrer">Update front page</a></li>
<li>mdmundo created <a href="https://github.com/nushell/nushell.github.io/pull/440" target="_blank" rel="noopener noreferrer">Update windows_terminal_default_shell.sh</a></li>
<li>kubouch created <a href="https://github.com/nushell/nushell.github.io/pull/439" target="_blank" rel="noopener noreferrer">Add env.nu to env conversions section</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/437" target="_blank" rel="noopener noreferrer">Document config as environment variable</a></li>
<li>TaKO8Ki created <a href="https://github.com/nushell/nushell.github.io/pull/436" target="_blank" rel="noopener noreferrer">Translate <code>/ja/README.md</code> to Japanese</a></li>
<li>flying-sheep created <a href="https://github.com/nushell/nushell.github.io/pull/435" target="_blank" rel="noopener noreferrer">Document $in</a></li>
</ul>
<h2 id="nu-scripts" tabindex="-1"> Nu_Scripts</h2>
<ul>
<li>thibran created <a href="https://github.com/nushell/nu_scripts/pull/229" target="_blank" rel="noopener noreferrer">Misc tools</a></li>
<li>Suyashtnt created <a href="https://github.com/nushell/nu_scripts/pull/228" target="_blank" rel="noopener noreferrer">feat(custom-completions): add yarn completion</a></li>
<li>jntrnr created <a href="https://github.com/nushell/nu_scripts/pull/227" target="_blank" rel="noopener noreferrer">update nu weekly script</a></li>
<li>fdncred created <a href="https://github.com/nushell/nu_scripts/pull/226" target="_blank" rel="noopener noreferrer">add html colors</a>, and <a href="https://github.com/nushell/nu_scripts/pull/224" target="_blank" rel="noopener noreferrer">add progress bar examples + some benchmarks</a>, and <a href="https://github.com/nushell/nu_scripts/pull/220" target="_blank" rel="noopener noreferrer">help with pr</a>, and <a href="https://github.com/nushell/nu_scripts/pull/215" target="_blank" rel="noopener noreferrer">remove title because it breaks kitty</a></li>
<li>Yethal created <a href="https://github.com/nushell/nu_scripts/pull/225" target="_blank" rel="noopener noreferrer">Update remoting.nu</a>, and <a href="https://github.com/nushell/nu_scripts/pull/222" target="_blank" rel="noopener noreferrer">Added remoting.nu</a></li>
<li>Jacobious52 created <a href="https://github.com/nushell/nu_scripts/pull/223" target="_blank" rel="noopener noreferrer">Auto generation completion help parser</a></li>
<li>kurokirasama created <a href="https://github.com/nushell/nu_scripts/pull/217" target="_blank" rel="noopener noreferrer">added maths, defs and weather scripts</a></li>
<li>drbrain created <a href="https://github.com/nushell/nu_scripts/pull/216" target="_blank" rel="noopener noreferrer">Allow relative entries in CDPATH</a></li>
</ul>
<h2 id="reedline" tabindex="-1"> reedline</h2>
<ul>
<li>sholderbach created <a href="https://github.com/nushell/reedline/pull/430" target="_blank" rel="noopener noreferrer">Prepare the v0.6.0 release</a>, and <a href="https://github.com/nushell/reedline/pull/427" target="_blank" rel="noopener noreferrer">Do not allocate eagerly for full history capacity</a>, and <a href="https://github.com/nushell/reedline/pull/424" target="_blank" rel="noopener noreferrer">Start developer documentation</a></li>
<li>petrisch created <a href="https://github.com/nushell/reedline/pull/429" target="_blank" rel="noopener noreferrer">Typo</a></li>
<li>ahkrr created <a href="https://github.com/nushell/reedline/pull/428" target="_blank" rel="noopener noreferrer">fix: list_menu not accounting for index + indicator</a></li>
<li>sadmac7000 created <a href="https://github.com/nushell/reedline/pull/425" target="_blank" rel="noopener noreferrer">Fix vi-mode word motions</a></li>
<li>DhruvDh created <a href="https://github.com/nushell/reedline/pull/402" target="_blank" rel="noopener noreferrer">Use a default terminal size if reported terminal size is 0, 0</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.62</title>
      <link>https://www.nushell.sh/blog/2022-05-03-nushell_0_62.html</link>
      <guid>https://www.nushell.sh/blog/2022-05-03-nushell_0_62.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.62</source>
      <description> Nushell 0.62
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing version 0.62 of Nu. This release deeper integration with SQLite, new completion logic, and much more.
</description>
      <pubDate>Tue, 03 May 2022 23:15:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-62" tabindex="-1"> Nushell 0.62</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing version 0.62 of Nu. This release deeper integration with SQLite, new completion logic, and much more.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.62 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.62.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p><strong>A note on this release:</strong> The binaries published by the Nu team now include a statically linked copy of the OpenSSL library (previously Nu used a shared library, AKA 'dynamic linking'). The goal of this change is to make Nu simpler to deploy with fewer dependencies.</p>
<p>This feature is enabled by the &quot;static-link-openssl&quot; Cargo feature, so it's easy to disable if needed when building Nu.</p>
<p>If you want all the built-in goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="database-connectivity-rgwood-elferherrera-fdncred" tabindex="-1"> Database connectivity (rgwood, elferherrera, fdncred)</h1>
<p>A gap in the &quot;Nushell story&quot; up to this point has been that although Nushell is a language and shell focused on data, there wasn't yet any ability to query databases and work with their data. With 0.62, we take our first step in that direction.</p>
<p>New in this release is the <code>db</code> command, which allows you to connect to a SQLite database and create a SQL query to run on it:</p>
<div><pre><code>  > db open db.sqlite
    | db from table_a
    | db select a
    | db limit 10
    | db describe
</code></pre></div><p>With the <code>db open</code> command we open a connection to the database, then subsequent <code>db</code> commands build up a query step by step. One new twist with <code>db</code> for Nushell is that the query is built lazily, and will only be run once the data is needed.</p>
<p>Queries can also be written as raw SQL:</p>
<div><pre><code>  > db open db.sqlite | db query "SELECT a FROM table_a LIMIT 10"
</code></pre></div><p>And finally, the <code>open</code> command has been updated to be SQLite-aware:</p>
<div><pre><code>  > open db.sqlite
</code></pre></div><p>In all of the queries above, <code>db open db.sqlite</code> could be replaced by <code>open db.sqlite</code>; <code>open</code> is able to detect databases by looking at file contents.</p>
<h1 id="full-translation-of-the-book-to-chinese-hustcer" tabindex="-1"> Full translation of the book to Chinese (hustcer)</h1>
<p>The book is now fully translated to <a href="https://www.nushell.sh/zh-CN/book/" target="_blank" rel="noopener noreferrer">Chinese (zh-CN)</a>. Huge shout-out to hustcer for doing all the work on the translation!</p>
<h1 id="more-completions-herlon214-jt" tabindex="-1"> More completions (herlon214, jt)</h1>
<p>Nushell can now complete record fields, cell paths in variables created in previous REPL runs, and more.</p>
<p>Starting with 0.62, Nushell will prefer to wrap filenames with spaces in backticks when completing. This allows for filenames to have single quotes, while also being compatible with upcoming improvements in filename handling.</p>
<h1 id="new-commands" tabindex="-1"> New commands</h1>
<ul>
<li><a href="https://github.com/nushell/nushell/pull/5331" target="_blank" rel="noopener noreferrer"><code>watch</code></a> can now watch a filepath and run a block if a change occurs (rgwood)</li>
</ul>
<h1 id="quality-of-life-improvements" tabindex="-1"> Quality-of-life Improvements</h1>
<ul>
<li>
<p><code>ctrl+o</code> - opens your editor of choice to edit line input (elferherrera)</p>
<ul>
<li>Make sure to set <code>buffer_editor</code> in your configuration so Nushell can find your editor</li>
</ul>
</li>
<li>
<p>You can use <code>()</code> in create filenames. eg) <code>ls ./($dirname)</code> (jt)</p>
<ul>
<li>Note: this currently only works if the <code>()</code> isn't the start of the filepath</li>
</ul>
</li>
<li>
<p><code>ctrl+c</code> now breaks in more cases (gipsyh)</p>
</li>
<li>
<p><code>$nu.os-info</code> can give you information about the platform Nushell is running on. (fdncred)</p>
</li>
<li>
<p><code>~user</code> is now a known path shorthand (merelymyself)'</p>
</li>
<li>
<p>Errors now have helpful descriptions that will show up in the error docs. (zkat)</p>
</li>
<li>
<p>Nushell now has <a href="https://github.com/nushell/nushell/pull/5162" target="_blank" rel="noopener noreferrer">better shell integration</a> for terminals like kitty. (schrieveslaach)</p>
</li>
<li>
<p><strong>Note:</strong> this is a shortened list. For the full list, see the &quot;Changelog&quot; section below</p>
</li>
</ul>
<h1 id="breaking-changes" tabindex="-1"> Breaking changes</h1>
<ul>
<li><code>^=</code> is now <code>starts-with</code></li>
<li>config is now an environment variable
<ul>
<li>To update, move <code>let config = ...</code> to <code>let-env config = ...</code></li>
<li>This change was done for performance reasons and gives considerable performance improvements in some use cases.</li>
</ul>
</li>
</ul>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>The <code>db</code> command joins the <code>dfr</code> command in a set of experiments we're working on to better understand how to integrate Nushell with a wider set of data sources. Coming up soon are &quot;lazy dataframes&quot;. These, like the new <code>db</code> command, will allow you to build up a query against a dataframe before you execute it. This allows for much more efficient processing of the request against the data source.</p>
<p>The Nushell design team is deep in discussions about how to make this more universal, allowing the Nushell language to build up queries lazily against a data source, and allowing the data source to perform the optimal native query. There's more research to do here, but we're looking forward to being able to take what we've learned and grow the Nushell language. In the end, we hope, you won't need separate command sets for each data source type. Instead, you'll be able to connect and build your query all in the base Nushell language.</p>
<h1 id="changelog" tabindex="-1"> Changelog</h1>
<h2 id="nushell" tabindex="-1"> Nushell</h2>
<ul>
<li>sholderbach created <a href="https://github.com/nushell/nushell/pull/5427" target="_blank" rel="noopener noreferrer">Pin reedline to v0.5.0 for the next release</a>, and <a href="https://github.com/nushell/nushell/pull/5410" target="_blank" rel="noopener noreferrer">Fix CI to run doctests again</a>, and <a href="https://github.com/nushell/nushell/pull/5404" target="_blank" rel="noopener noreferrer">Bump reedline</a>, and <a href="https://github.com/nushell/nushell/pull/5249" target="_blank" rel="noopener noreferrer">Set to reedline main branch for development cycle</a></li>
<li>elferherrera created <a href="https://github.com/nushell/nushell/pull/5426" target="_blank" rel="noopener noreferrer">added open editor event in config parsing</a>, and <a href="https://github.com/nushell/nushell/pull/5417" target="_blank" rel="noopener noreferrer">Database commands</a>, and <a href="https://github.com/nushell/nushell/pull/5390" target="_blank" rel="noopener noreferrer">Line buffer keybinding</a>, and <a href="https://github.com/nushell/nushell/pull/5381" target="_blank" rel="noopener noreferrer">Line buffer editor</a>, and <a href="https://github.com/nushell/nushell/pull/5343" target="_blank" rel="noopener noreferrer">Database commands</a>, and <a href="https://github.com/nushell/nushell/pull/5307" target="_blank" rel="noopener noreferrer">Database commands</a></li>
<li>zhiburt created <a href="https://github.com/nushell/nushell/pull/5425" target="_blank" rel="noopener noreferrer">Fix coloring when string has spaces</a></li>
<li>jt created <a href="https://github.com/nushell/nushell/pull/5419" target="_blank" rel="noopener noreferrer">Update path completions to handle spaces</a>, and <a href="https://github.com/nushell/nushell/pull/5407" target="_blank" rel="noopener noreferrer">Rename =^ to 'starts-with'</a>, and <a href="https://github.com/nushell/nushell/pull/5403" target="_blank" rel="noopener noreferrer">More escaping/unescaping fixes</a>, and <a href="https://github.com/nushell/nushell/pull/5400" target="_blank" rel="noopener noreferrer">Adds error printing back in a couple places</a>, and <a href="https://github.com/nushell/nushell/pull/5399" target="_blank" rel="noopener noreferrer">Add unescaping to external command parsing</a>, and <a href="https://github.com/nushell/nushell/pull/5398" target="_blank" rel="noopener noreferrer">Move uses of trim_quotes to unescape for filenames</a>, and <a href="https://github.com/nushell/nushell/pull/5386" target="_blank" rel="noopener noreferrer">Make if else more lazy</a>, and <a href="https://github.com/nushell/nushell/pull/5334" target="_blank" rel="noopener noreferrer">Fix 'range' range exclusive</a>, and <a href="https://github.com/nushell/nushell/pull/5327" target="_blank" rel="noopener noreferrer">Allow bare words to interpolate</a>, and <a href="https://github.com/nushell/nushell/pull/5318" target="_blank" rel="noopener noreferrer">Warn if we see let config = ..</a>, and <a href="https://github.com/nushell/nushell/pull/5301" target="_blank" rel="noopener noreferrer">Fix cd -</a>, and <a href="https://github.com/nushell/nushell/pull/5297" target="_blank" rel="noopener noreferrer">Add 'and' and 'or' operators</a>, and <a href="https://github.com/nushell/nushell/pull/5271" target="_blank" rel="noopener noreferrer">Use better quoting for commandline args</a>, and <a href="https://github.com/nushell/nushell/pull/5266" target="_blank" rel="noopener noreferrer">Some cleanups for clippy</a>, and <a href="https://github.com/nushell/nushell/pull/5237" target="_blank" rel="noopener noreferrer">move config back to config.nu</a>, and <a href="https://github.com/nushell/nushell/pull/5230" target="_blank" rel="noopener noreferrer">Move config to be an env var</a></li>
<li>Tropid created <a href="https://github.com/nushell/nushell/pull/5416" target="_blank" rel="noopener noreferrer">Fix erroneous removal of &quot;./&quot; folder prefix</a>, and <a href="https://github.com/nushell/nushell/pull/5401" target="_blank" rel="noopener noreferrer">Update reedline to use partial completion changes</a>, and <a href="https://github.com/nushell/nushell/pull/5387" target="_blank" rel="noopener noreferrer">Remove &quot;./&quot; prefix for file path completions</a>, and <a href="https://github.com/nushell/nushell/pull/5320" target="_blank" rel="noopener noreferrer">Fuzzy completion matching</a>, and <a href="https://github.com/nushell/nushell/pull/5244" target="_blank" rel="noopener noreferrer">Add MatchAlgorithm for completion suggestions</a>, and <a href="https://github.com/nushell/nushell/pull/5228" target="_blank" rel="noopener noreferrer">Feature/refactor completion options</a></li>
<li>stormasm created <a href="https://github.com/nushell/nushell/pull/5415" target="_blank" rel="noopener noreferrer">remove ctrl-l from config.nu as a way to clear scrollback</a>, and <a href="https://github.com/nushell/nushell/pull/5405" target="_blank" rel="noopener noreferrer">event ClearScrollback is working in reedline / update config.nu</a>, and <a href="https://github.com/nushell/nushell/pull/5356" target="_blank" rel="noopener noreferrer">cleanup version command and add in database feature</a>, and <a href="https://github.com/nushell/nushell/pull/5350" target="_blank" rel="noopener noreferrer">mute false import warning for nu-command test where_</a>, and <a href="https://github.com/nushell/nushell/pull/5256" target="_blank" rel="noopener noreferrer">add newlines to the end of the default config files</a></li>
<li>gipsyh created <a href="https://github.com/nushell/nushell/pull/5409" target="_blank" rel="noopener noreferrer">Fixed ctrl-c in recursion loop bug #5362</a>, and <a href="https://github.com/nushell/nushell/pull/5408" target="_blank" rel="noopener noreferrer">Fixed interrupting a for-loop over a list bug #5378</a>, and <a href="https://github.com/nushell/nushell/pull/5369" target="_blank" rel="noopener noreferrer">Don't resuggest accepted completions</a>, and <a href="https://github.com/nushell/nushell/pull/5332" target="_blank" rel="noopener noreferrer">Fix use of <code>export/alias --help</code> bug</a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell/pull/5406" target="_blank" rel="noopener noreferrer">CI: Add job to build plugins</a>, and <a href="https://github.com/nushell/nushell/pull/5402" target="_blank" rel="noopener noreferrer">Add Miette &quot;fancy&quot; feature to fix plugin builds</a>, and <a href="https://github.com/nushell/nushell/pull/5396" target="_blank" rel="noopener noreferrer">CI: build virtualenv tests in dev profile for speed</a>, and <a href="https://github.com/nushell/nushell/pull/5389" target="_blank" rel="noopener noreferrer">Error printing changes for <code>watch</code></a>, and <a href="https://github.com/nushell/nushell/pull/5374" target="_blank" rel="noopener noreferrer">Faster CI</a>, and <a href="https://github.com/nushell/nushell/pull/5359" target="_blank" rel="noopener noreferrer">rust-cache fix</a>, and <a href="https://github.com/nushell/nushell/pull/5358" target="_blank" rel="noopener noreferrer">CI: remove rust-cache from virtualenv tests</a>, and <a href="https://github.com/nushell/nushell/pull/5357" target="_blank" rel="noopener noreferrer">CI: make Clippy reuse build artifacts, other cleanup</a>, and <a href="https://github.com/nushell/nushell/pull/5354" target="_blank" rel="noopener noreferrer">CI: enable rust-cache, remove minimal</a>, and <a href="https://github.com/nushell/nushell/pull/5352" target="_blank" rel="noopener noreferrer">Openssl feature</a>, and <a href="https://github.com/nushell/nushell/pull/5349" target="_blank" rel="noopener noreferrer">Statically link OpenSSL</a>, and <a href="https://github.com/nushell/nushell/pull/5338" target="_blank" rel="noopener noreferrer"><code>db info</code> tweaks</a>, and <a href="https://github.com/nushell/nushell/pull/5331" target="_blank" rel="noopener noreferrer">Add watch command</a>, and <a href="https://github.com/nushell/nushell/pull/5328" target="_blank" rel="noopener noreferrer">Move print_pipeline_data() to nu-protocol</a>, and <a href="https://github.com/nushell/nushell/pull/5273" target="_blank" rel="noopener noreferrer">Clean up tests and unused documentation code</a>, and <a href="https://github.com/nushell/nushell/pull/5272" target="_blank" rel="noopener noreferrer">Clean up unused files in repo root</a>, and <a href="https://github.com/nushell/nushell/pull/5248" target="_blank" rel="noopener noreferrer">Handle custom values in <code>describe</code></a>, and <a href="https://github.com/nushell/nushell/pull/5247" target="_blank" rel="noopener noreferrer">SQLite overhaul: custom value, <code>query db</code> command</a></li>
<li>panicbit created <a href="https://github.com/nushell/nushell/pull/5395" target="_blank" rel="noopener noreferrer">Add ends-with operator and fix dataframe operator behavior</a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell/pull/5394" target="_blank" rel="noopener noreferrer">a little database cleanup</a>, and <a href="https://github.com/nushell/nushell/pull/5380" target="_blank" rel="noopener noreferrer">allows for nushell to have tables without the index column</a>, and <a href="https://github.com/nushell/nushell/pull/5372" target="_blank" rel="noopener noreferrer">Revert &quot;nu-cli/completions: better fix for files with special characters&quot;</a>, and <a href="https://github.com/nushell/nushell/pull/5345" target="_blank" rel="noopener noreferrer">fixes an issue with an empty selector panic</a>, and <a href="https://github.com/nushell/nushell/pull/5335" target="_blank" rel="noopener noreferrer"><code>db info</code> command</a>, and <a href="https://github.com/nushell/nushell/pull/5322" target="_blank" rel="noopener noreferrer">add database feature to extra</a>, and <a href="https://github.com/nushell/nushell/pull/5321" target="_blank" rel="noopener noreferrer">update build status badge</a>, and <a href="https://github.com/nushell/nushell/pull/5317" target="_blank" rel="noopener noreferrer">update contrib to max=500</a>, and <a href="https://github.com/nushell/nushell/pull/5308" target="_blank" rel="noopener noreferrer">update sys with new items, add kernel version to os-info</a>, and <a href="https://github.com/nushell/nushell/pull/5302" target="_blank" rel="noopener noreferrer">consolidate shell integration behind config setting</a>, and <a href="https://github.com/nushell/nushell/pull/5280" target="_blank" rel="noopener noreferrer">add virtualenv to integrations</a>, and <a href="https://github.com/nushell/nushell/pull/5265" target="_blank" rel="noopener noreferrer">update os-info os to name</a>, and <a href="https://github.com/nushell/nushell/pull/5243" target="_blank" rel="noopener noreferrer">add os to $nu based on rust's understanding</a></li>
<li>kubouch created <a href="https://github.com/nushell/nushell/pull/5393" target="_blank" rel="noopener noreferrer">Fix PATH update example</a></li>
<li>herlon214 created <a href="https://github.com/nushell/nushell/pull/5385" target="_blank" rel="noopener noreferrer">nu-cli/completions: complete external args as filepath</a>, and <a href="https://github.com/nushell/nushell/pull/5382" target="_blank" rel="noopener noreferrer">nu-cli/completions: apply correctly nesting for env vars</a>, and <a href="https://github.com/nushell/nushell/pull/5310" target="_blank" rel="noopener noreferrer">nu-command/filesystem: remove newline from cd path</a>, and <a href="https://github.com/nushell/nushell/pull/5303" target="_blank" rel="noopener noreferrer">nu-cli/completions: add completion for $nu</a>, and <a href="https://github.com/nushell/nushell/pull/5299" target="_blank" rel="noopener noreferrer">nu-cli: directory syntax shape + completions</a>, and <a href="https://github.com/nushell/nushell/pull/5298" target="_blank" rel="noopener noreferrer">nu-cli/completions: support record for custom completion</a>, and <a href="https://github.com/nushell/nushell/pull/5254" target="_blank" rel="noopener noreferrer">nu-cli/completions: better fix for files with special characters</a>, and <a href="https://github.com/nushell/nushell/pull/5242" target="_blank" rel="noopener noreferrer">nu-cli/completions: fix file completions with quotes</a>, and <a href="https://github.com/nushell/nushell/pull/5232" target="_blank" rel="noopener noreferrer">nu-cli: added tests for file completions</a></li>
<li>uasi created <a href="https://github.com/nushell/nushell/pull/5384" target="_blank" rel="noopener noreferrer">Fix quoting for command line args</a>, and <a href="https://github.com/nushell/nushell/pull/5365" target="_blank" rel="noopener noreferrer">Avoid using time conversion methods that may panic</a></li>
<li>jmoore34 created <a href="https://github.com/nushell/nushell/pull/5355" target="_blank" rel="noopener noreferrer">Change description of <code>sort</code></a></li>
<li>efx created <a href="https://github.com/nushell/nushell/pull/5346" target="_blank" rel="noopener noreferrer">improve inc plugin docs</a></li>
<li>xgillard created <a href="https://github.com/nushell/nushell/pull/5326" target="_blank" rel="noopener noreferrer">activates optional trim in 'from csv' and 'from tsv'</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell/pull/5323" target="_blank" rel="noopener noreferrer">Allows cd (and other commands that depend on current working directory) to use path of type '~user'</a>, and <a href="https://github.com/nushell/nushell/pull/5251" target="_blank" rel="noopener noreferrer">Adding ~user tilde recognition in file paths</a>, and <a href="https://github.com/nushell/nushell/pull/5224" target="_blank" rel="noopener noreferrer">Added search terms to math commands</a></li>
<li>jokeyrhyme created <a href="https://github.com/nushell/nushell/pull/5311" target="_blank" rel="noopener noreferrer">fix: remove <code>println!()</code> from <code>exec</code> builtin</a></li>
<li>babalolajnr created <a href="https://github.com/nushell/nushell/pull/5306" target="_blank" rel="noopener noreferrer">feat: add search terms to date</a></li>
<li>raboof created <a href="https://github.com/nushell/nushell/pull/5264" target="_blank" rel="noopener noreferrer">typo: seach -&gt; search</a>, and <a href="https://github.com/nushell/nushell/pull/5253" target="_blank" rel="noopener noreferrer">git completion: 'git fetch' for remotes</a></li>
<li>jaeheonji created <a href="https://github.com/nushell/nushell/pull/5259" target="_blank" rel="noopener noreferrer">feat: add search terms to <code>conversions</code></a></li>
<li>pinjeff created <a href="https://github.com/nushell/nushell/pull/5246" target="_blank" rel="noopener noreferrer">refactor html module</a></li>
<li>Yethal created <a href="https://github.com/nushell/nushell/pull/5229" target="_blank" rel="noopener noreferrer">allow par-each to receive $in</a></li>
<li>Sygmei created <a href="https://github.com/nushell/nushell/pull/5227" target="_blank" rel="noopener noreferrer">add custom_completion field to <code>$nu.scope.commands</code> command</a></li>
<li>zkat created <a href="https://github.com/nushell/nushell/pull/5222" target="_blank" rel="noopener noreferrer">update miette and switch to GenericErrors</a>, and <a href="https://github.com/nushell/nushell/pull/5172" target="_blank" rel="noopener noreferrer">documented ShellError errors.</a></li>
<li>filaretov created <a href="https://github.com/nushell/nushell/pull/5219" target="_blank" rel="noopener noreferrer">Simplify known external tests</a>, and <a href="https://github.com/nushell/nushell/pull/5216" target="_blank" rel="noopener noreferrer">Add known external tests</a>, and <a href="https://github.com/nushell/nushell/pull/5213" target="_blank" rel="noopener noreferrer">Simplify known external name recovery</a></li>
<li>homburg created <a href="https://github.com/nushell/nushell/pull/5217" target="_blank" rel="noopener noreferrer"><code>nth</code> -&gt; <code>select</code> command</a></li>
<li>andrasio created <a href="https://github.com/nushell/nushell/pull/5214" target="_blank" rel="noopener noreferrer">Remove 'empty' block support reminders, for now.</a></li>
<li>strega-nil created <a href="https://github.com/nushell/nushell/pull/5212" target="_blank" rel="noopener noreferrer">[ls, path relative-to] Fix use of <code>ls ~ | path relative-to ~</code></a>, and <a href="https://github.com/nushell/nushell/pull/5180" target="_blank" rel="noopener noreferrer">don't join paths to cwd ever in calls to external functions</a></li>
<li>herlon214 created <a href="https://github.com/nushell/nushell/pull/5210" target="_blank" rel="noopener noreferrer">nu-cli/completions: completion for use and source</a>, and <a href="https://github.com/nushell/nushell/pull/5207" target="_blank" rel="noopener noreferrer">nu-cli/completions: removed unnecessary bool</a>, and <a href="https://github.com/nushell/nushell/pull/5204" target="_blank" rel="noopener noreferrer">Completion for variables of type Record</a>, and <a href="https://github.com/nushell/nushell/pull/5199" target="_blank" rel="noopener noreferrer">nu-cli/completions: add completion for $env.</a></li>
<li>fdncred created <a href="https://github.com/nushell/nushell/pull/5209" target="_blank" rel="noopener noreferrer">add hex color parsing to ansi</a>, and <a href="https://github.com/nushell/nushell/pull/5201" target="_blank" rel="noopener noreferrer">updated cargo.lock with cargo update</a>, and <a href="https://github.com/nushell/nushell/pull/5187" target="_blank" rel="noopener noreferrer">tweak ci building badge</a>, and <a href="https://github.com/nushell/nushell/pull/5177" target="_blank" rel="noopener noreferrer">allow default color shortcut names</a></li>
<li>stormasm created <a href="https://github.com/nushell/nushell/pull/5208" target="_blank" rel="noopener noreferrer">cleanup nu-command, remove redundant code</a>, and <a href="https://github.com/nushell/nushell/pull/5184" target="_blank" rel="noopener noreferrer">update crate chrono-tz to its latest version</a></li>
<li>jt created <a href="https://github.com/nushell/nushell/pull/5206" target="_blank" rel="noopener noreferrer">Move to dev version 0.61.1</a></li>
<li>uasi created <a href="https://github.com/nushell/nushell/pull/5205" target="_blank" rel="noopener noreferrer">Fix env capture</a></li>
<li>dantswain created <a href="https://github.com/nushell/nushell/pull/5200" target="_blank" rel="noopener noreferrer">Avoid duplicating post headers</a></li>
<li>ZetaNumbers created <a href="https://github.com/nushell/nushell/pull/5193" target="_blank" rel="noopener noreferrer">fix: reduce command have not redirected block's evaluation output</a></li>
<li>nibon7 created <a href="https://github.com/nushell/nushell/pull/5192" target="_blank" rel="noopener noreferrer">fix timestamp parsing on 32-bit platforms</a></li>
<li>hustcer created <a href="https://github.com/nushell/nushell/pull/5188" target="_blank" rel="noopener noreferrer">Fix completions for <code>git push</code> and <code>git checkout</code> close: #5021 and #4599</a>, and <a href="https://github.com/nushell/nushell/pull/5176" target="_blank" rel="noopener noreferrer">Add a dockerfile example based on debian bullseye-slim</a></li>
<li>tiffany352 created <a href="https://github.com/nushell/nushell/pull/5183" target="_blank" rel="noopener noreferrer">Add <code>char -i</code> for chars from integers</a>, and <a href="https://github.com/nushell/nushell/pull/5174" target="_blank" rel="noopener noreferrer">Allow passing an integer to <code>char -u</code></a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell/pull/5182" target="_blank" rel="noopener noreferrer">Initial SQLite functionality</a></li>
<li>schrieveslaach created <a href="https://github.com/nushell/nushell/pull/5162" target="_blank" rel="noopener noreferrer">Shell Integration</a></li>
</ul>
<h2 id="documentation" tabindex="-1"> Documentation</h2>
<ul>
<li>hustcer created <a href="https://github.com/nushell/nushell.github.io/pull/427" target="_blank" rel="noopener noreferrer">Update zh-CN docs</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/425" target="_blank" rel="noopener noreferrer">feat: Add github action related stuff</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/422" target="_blank" rel="noopener noreferrer">More proofreading work for the zh-CN translations</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/421" target="_blank" rel="noopener noreferrer">Fix some broken links</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/420" target="_blank" rel="noopener noreferrer">Some proofreading work for zh-CN translations</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/419" target="_blank" rel="noopener noreferrer">Update zh-CN translations to the latest english version of commit: b6c91cabfa</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/417" target="_blank" rel="noopener noreferrer">Update some node modules</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/415" target="_blank" rel="noopener noreferrer">Translate dataframes.md to zh-CN from commit: 92fb0ac2c</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/414" target="_blank" rel="noopener noreferrer">Add basic config and pages for Turkish</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/413" target="_blank" rel="noopener noreferrer">Add translation guide</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/412" target="_blank" rel="noopener noreferrer">Translate line_editor.md to zh-CN from commit: e0688a346</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/408" target="_blank" rel="noopener noreferrer">Update i18n.nu add <code>outdated</code> command to check outdated translations</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/407" target="_blank" rel="noopener noreferrer">Translate coloring_and_theming.md to zh-CN from commit: f3dc86d3d</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/403" target="_blank" rel="noopener noreferrer">Translate some small docs to zh-CN from commit: f5987a82d</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/400" target="_blank" rel="noopener noreferrer">Fix some typo and Translate configuration &amp; environment to zh-CN from commit: f5987a82d</a>, and <a href="https://github.com/nushell/nushell.github.io/pull/396" target="_blank" rel="noopener noreferrer">Translate lots of small docs to zh-CN from commit: ae23eeba3</a></li>
<li>reillysiemens created <a href="https://github.com/nushell/nushell.github.io/pull/426" target="_blank" rel="noopener noreferrer">Fix broken nu_scripts repo link</a></li>
<li>merelymyself created <a href="https://github.com/nushell/nushell.github.io/pull/424" target="_blank" rel="noopener noreferrer">Changed the confusing title of &quot;Working With Strings&quot;</a></li>
<li>Yethal created <a href="https://github.com/nushell/nushell.github.io/pull/418" target="_blank" rel="noopener noreferrer">Update working_with_tables.md</a></li>
<li>morzel85 created <a href="https://github.com/nushell/nushell.github.io/pull/416" target="_blank" rel="noopener noreferrer">Update loading_data.md</a></li>
<li>stormasm created <a href="https://github.com/nushell/nushell.github.io/pull/411" target="_blank" rel="noopener noreferrer">update section on aliases for adding pipes and persisting</a></li>
<li>raboof created <a href="https://github.com/nushell/nushell.github.io/pull/410" target="_blank" rel="noopener noreferrer">fix typo required-&gt;require</a></li>
<li>rgwood created <a href="https://github.com/nushell/nushell.github.io/pull/406" target="_blank" rel="noopener noreferrer">Document PATH configuration</a></li>
<li>Sygmei created <a href="https://github.com/nushell/nushell.github.io/pull/402" target="_blank" rel="noopener noreferrer">Fix &quot;Concatenate tables&quot; section from &quot;Table docs&quot;</a></li>
<li>Cyborus04 created <a href="https://github.com/nushell/nushell.github.io/pull/399" target="_blank" rel="noopener noreferrer">Fix command-less <code>cd</code> example</a></li>
<li>Szune created <a href="https://github.com/nushell/nushell.github.io/pull/398" target="_blank" rel="noopener noreferrer">Typo fix in 2022-04-12-nushell_0_61.md</a></li>
<li>fennewald created <a href="https://github.com/nushell/nushell.github.io/pull/397" target="_blank" rel="noopener noreferrer">Update coming_from_bash.md</a></li>
</ul>
<h2 id="nu-scripts" tabindex="-1"> Nu scripts</h2>
<ul>
<li>fdncred created <a href="https://github.com/nushell/nu_scripts/pull/214" target="_blank" rel="noopener noreferrer">update get_os_icon for wsl</a>, and <a href="https://github.com/nushell/nu_scripts/pull/213" target="_blank" rel="noopener noreferrer">update type-o for windows</a>, and <a href="https://github.com/nushell/nu_scripts/pull/212" target="_blank" rel="noopener noreferrer">use $nu.os-info vs (sys).host for speed</a></li>
<li>raboof created <a href="https://github.com/nushell/nu_scripts/pull/210" target="_blank" rel="noopener noreferrer">custom completions: git: 'git fetch'</a></li>
<li>Yethal created <a href="https://github.com/nushell/nu_scripts/pull/208" target="_blank" rel="noopener noreferrer">Update nuschiit.nu</a>, and <a href="https://github.com/nushell/nu_scripts/pull/206" target="_blank" rel="noopener noreferrer">Add webscraping and gitlab scanning scripts</a></li>
<li>kubouch created <a href="https://github.com/nushell/nu_scripts/pull/205" target="_blank" rel="noopener noreferrer">Change conda activation scripts to be a module</a></li>
<li>hustcer created <a href="https://github.com/nushell/nu_scripts/pull/204" target="_blank" rel="noopener noreferrer">Fix completions for <code>git push</code> and <code>git checkout</code></a></li>
<li>ZetaNumbers created <a href="https://github.com/nushell/nu_scripts/pull/203" target="_blank" rel="noopener noreferrer">fix: make complitions referred to undefinded &quot;nu-complete files&quot;</a></li>
</ul>
<h2 id="reedline" tabindex="-1"> reedline</h2>
<ul>
<li>sholderbach created <a href="https://github.com/nushell/reedline/pull/422" target="_blank" rel="noopener noreferrer">Change keybinding for external editor</a>, and <a href="https://github.com/nushell/reedline/pull/421" target="_blank" rel="noopener noreferrer">Prepare the 0.5.0 release</a>, and <a href="https://github.com/nushell/reedline/pull/419" target="_blank" rel="noopener noreferrer">Fix README and lib.rs code examples</a>, and <a href="https://github.com/nushell/reedline/pull/418" target="_blank" rel="noopener noreferrer">Add doctests back to the CI</a>, and <a href="https://github.com/nushell/reedline/pull/417" target="_blank" rel="noopener noreferrer">Vi additions and fixes by @zim0369</a>, and <a href="https://github.com/nushell/reedline/pull/416" target="_blank" rel="noopener noreferrer">Attempt fix of <code>ClearScrollback</code></a>, and <a href="https://github.com/nushell/reedline/pull/415" target="_blank" rel="noopener noreferrer">Fix the CI badge</a>, and <a href="https://github.com/nushell/reedline/pull/414" target="_blank" rel="noopener noreferrer">Change the CI to use caching</a>, and <a href="https://github.com/nushell/reedline/pull/400" target="_blank" rel="noopener noreferrer">Add better options for screen clearing</a>, and <a href="https://github.com/nushell/reedline/pull/399" target="_blank" rel="noopener noreferrer">Add explicit <code>EditCommand::InsertNewline</code></a></li>
<li>elferherrera created <a href="https://github.com/nushell/reedline/pull/413" target="_blank" rel="noopener noreferrer">Buffer editor keybinding</a>, and <a href="https://github.com/nushell/reedline/pull/411" target="_blank" rel="noopener noreferrer">line buffer editor</a></li>
<li>Tropid created <a href="https://github.com/nushell/reedline/pull/412" target="_blank" rel="noopener noreferrer">Only partial complete suggestions when input is a prefix</a></li>
<li>gipsyh created <a href="https://github.com/nushell/reedline/pull/410" target="_blank" rel="noopener noreferrer">Append whitespace after selecting menu</a></li>
<li>zim0369 created <a href="https://github.com/nushell/reedline/pull/405" target="_blank" rel="noopener noreferrer">Add vim's <code>C</code> binding</a>, and <a href="https://github.com/nushell/reedline/pull/403" target="_blank" rel="noopener noreferrer">Implements vim's prepend to start binding</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.61</title>
      <link>https://www.nushell.sh/blog/2022-04-12-nushell_0_61.html</link>
      <guid>https://www.nushell.sh/blog/2022-04-12-nushell_0_61.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.61</source>
      <description> Nushell 0.61
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing version 0.61 of Nu. This release includes UI improvements, many bugfixes, improved glob support, and more.
</description>
      <pubDate>Tue, 12 Apr 2022 22:21:39 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-61" tabindex="-1"> Nushell 0.61</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing version 0.61 of Nu. This release includes UI improvements, many bugfixes, improved glob support, and more.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.61 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.61.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the built-in goodies, you can install <code>cargo install nu --all-features</code>.</p>
<p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="help-menu-elferherrera" tabindex="-1"> Help Menu (elferherrera)</h1>
<p><img src="@source/assets/images/0_61_help_menu.png" alt="Help menu"></p>
<p>In 0.61, you can now use <code>&lt;ctrl+q&gt;</code> to ask a question/query in Nushell. Currently, this will search through the commands and show you commands that mention the word you type.</p>
<p>Tab lets you move between the available commands.</p>
<p>You can use up/down to pick the example you'd like to use. Pressing enter will select the example and insert it into the input for you.</p>
<h1 id="completion-descriptions-elferherrera-fdncred-jt" tabindex="-1"> Completion descriptions (elferherrera, fdncred, jt)</h1>
<p><img src="@source/assets/images/0_61_completion_descriptions.png" alt="Completion descriptions"></p>
<p>Completions now show you a description of the command you're completing, if it's available.</p>
<h1 id="introducing-env-nu-kubouch" tabindex="-1"> Introducing 'env.nu' (kubouch)</h1>
<p>Just as we added 'config.nu' with 0.60, we're now adding a new additional startup file called 'env.nu'. The job of this file is to set up the environment that you'll run Nushell in. As a result, you're able to set up important environment variables like <code>$env.NU_LIB_DIRS</code> before 'config.nu' begins to run, let you take full advantage of the new library directories you've configured.</p>
<h1 id="features" tabindex="-1"> Features</h1>
<ul>
<li><code>input</code> can now <a href="https://github.com/nushell/nushell/pull/5017" target="_blank" rel="noopener noreferrer">suppress output</a> (dev-msp)</li>
<li><a href="https://github.com/nushell/nushell/pull/4956" target="_blank" rel="noopener noreferrer">Termux/Android target support for new engine</a> (dscottboggs)</li>
<li><code>open</code> can now use <a href="https://github.com/nushell/nushell/pull/5049" target="_blank" rel="noopener noreferrer"><code>from ...</code> named custom commands</a> (neosam)</li>
<li>New <a href="https://github.com/nushell/nushell/pull/5054" target="_blank" rel="noopener noreferrer"><code>sort</code> command for easier sorting</a> (jt)</li>
<li><code>date to-record</code> for <a href="https://github.com/nushell/nushell/pull/5058" target="_blank" rel="noopener noreferrer">working with structured dates</a> (jt)</li>
<li>New <a href="https://github.com/nushell/nushell/pull/5061" target="_blank" rel="noopener noreferrer">starts-with operator</a> (fdncred)</li>
<li>Can now create <a href="https://github.com/nushell/nushell/pull/5085" target="_blank" rel="noopener noreferrer">generic menus for repl interactions</a> (elferherrera)</li>
<li>New <a href="https://github.com/nushell/nushell/pull/5087" target="_blank" rel="noopener noreferrer"><code>glob</code> command for fancier globbing</a> (fdncred)</li>
<li><a href="https://github.com/nushell/nushell/pull/5111" target="_blank" rel="noopener noreferrer">Unary <code>not</code> support</a> (jt)</li>
<li>Startup and pre-prompt setup should now be <a href="https://github.com/nushell/nushell/pull/5115" target="_blank" rel="noopener noreferrer">significantly faster</a> (jt)</li>
<li><a href="https://github.com/nushell/nushell/pull/5149" target="_blank" rel="noopener noreferrer"><code>0b[...]</code> support for binary literals</a> (merkrafter)</li>
</ul>
<h1 id="improvements" tabindex="-1"> Improvements</h1>
<ul>
<li>Parser improvements by uasi, jt, rgwood</li>
<li>Error improvements by jmoore34, jt, rgwood</li>
<li>Documentation updates by hustcer, vishalsodani, fdncred, futile, kubouch, stormasm, Hofer-Julian, herlon214, rgwood, michel-slm</li>
<li>General code cleanliness fixes by stormasm, bowlofeggs, rgwood, sholderbach, fdncred, herlon214, elferherrera, boyvanduuren, jt</li>
<li>Multiple improvements to known external commands (filaretov, jt)</li>
<li><a href="https://github.com/nushell/nushell/pull/5167" target="_blank" rel="noopener noreferrer">Use recent miette</a> (zkat)</li>
<li><a href="https://github.com/nushell/nushell/pull/5153" target="_blank" rel="noopener noreferrer">Improved logic to path expansion</a> (strega-nil-ms)</li>
<li><a href="https://github.com/nushell/nushell/pull/5141" target="_blank" rel="noopener noreferrer"><code>ls</code> now outputs date in local time</a> (fdncred)</li>
<li><a href="https://github.com/nushell/nushell/pull/5137" target="_blank" rel="noopener noreferrer"><code>$in</code> should now work in more places</a> (jt)</li>
<li><a href="https://github.com/nushell/nushell/pull/5136" target="_blank" rel="noopener noreferrer"><code>each</code> now also pipes each item as input to the block</a> (jt)</li>
<li>Add ability to <a href="https://github.com/nushell/nushell/pull/5133" target="_blank" rel="noopener noreferrer">opt-in to normal strings in <code>str replace</code></a> (fdncred)</li>
<li><code>touch</code> now <a href="https://github.com/nushell/nushell/pull/5119" target="_blank" rel="noopener noreferrer">includes all common flags</a> (rybertm)</li>
<li><code>=~</code> and <code>!~</code> now <a href="https://github.com/nushell/nushell/pull/5117" target="_blank" rel="noopener noreferrer">use regex</a> (rgwood)</li>
<li><code>describe</code> should now be <a href="https://github.com/nushell/nushell/pull/5116" target="_blank" rel="noopener noreferrer">more precise</a></li>
<li>completions now <a href="https://github.com/nushell/nushell/pull/5108" target="_blank" rel="noopener noreferrer">give priority to non-hidden folders</a> (herlon214)</li>
<li><a href="https://github.com/nushell/nushell/pull/5105" target="_blank" rel="noopener noreferrer">plugins are now loaded for scripts and commands</a> (jt)</li>
<li><a href="https://github.com/nushell/nushell/pull/5097" target="_blank" rel="noopener noreferrer"><code>input</code> now trims the newline</a> (rgwood)</li>
<li><a href="https://github.com/nushell/nushell/pull/5100" target="_blank" rel="noopener noreferrer">regex <code>find</code> now works with records</a> (fdncred)</li>
<li>Fixes to <a href="https://github.com/nushell/nushell/pull/5095" target="_blank" rel="noopener noreferrer"><code>format</code> for non-basic datatypes</a> (rgwood)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/5090" target="_blank" rel="noopener noreferrer">raw string support via backticks</a> (jt)</li>
<li>Switched to <a href="https://github.com/nushell/nushell/pull/5001" target="_blank" rel="noopener noreferrer">levenshtein distance sorting for completions</a> (jt)</li>
<li>Improvements to <a href="https://github.com/nushell/nushell/pull/5041" target="_blank" rel="noopener noreferrer">line editor state handling</a> (sholderbach)</li>
<li>Treat <a href="https://github.com/nushell/nushell/pull/5026" target="_blank" rel="noopener noreferrer">prompt indicators as commands</a> (elferherrera)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/5040" target="_blank" rel="noopener noreferrer">record, list, and table to signature types</a> (kubouch)</li>
<li>Improvements to <a href="https://github.com/nushell/nushell/pull/5016" target="_blank" rel="noopener noreferrer">default git completions</a> (naufraghi)</li>
<li>Prompts <a href="https://github.com/nushell/nushell/pull/5052" target="_blank" rel="noopener noreferrer">can now be simple strings</a> (jt)</li>
<li>Sets <a href="https://github.com/nushell/nushell/pull/5084" target="_blank" rel="noopener noreferrer">LAST_EXIT_CODE on parse errors</a> (rgwood)</li>
<li>Passed <a href="https://github.com/nushell/nushell/pull/5009" target="_blank" rel="noopener noreferrer">more metadata through filter commands</a> (rrcwang)</li>
<li><code>last</code> now returns a <a href="https://github.com/nushell/nushell/pull/5060" target="_blank" rel="noopener noreferrer">simple value for single items</a> (jt)</li>
<li>Fixed <a href="https://github.com/nushell/nushell/pull/5003" target="_blank" rel="noopener noreferrer">loops not terminating with ctrl-c</a> (jt)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/4986" target="_blank" rel="noopener noreferrer">bounded channels for backpressure</a> (b333z)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/4985" target="_blank" rel="noopener noreferrer">streaming support to <code>save</code></a> (b333z)</li>
<li><a href="https://github.com/nushell/nushell/pull/4984" target="_blank" rel="noopener noreferrer">Support for passing binary data into run-external</a> (b333z)</li>
<li><a href="https://github.com/nushell/nushell/pull/4968" target="_blank" rel="noopener noreferrer">Fix for alias imports</a> (filaretov, jt)</li>
<li><a href="https://github.com/nushell/nushell/pull/4983" target="_blank" rel="noopener noreferrer">Fix for <code>ls</code> when file is a socket on macOS</a> (fdncred)</li>
<li><a href="https://github.com/nushell/nushell/pull/4974" target="_blank" rel="noopener noreferrer">Better tilde expansion</a> (filaretov)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/4978" target="_blank" rel="noopener noreferrer">keywords to help messages</a> (kubouch)</li>
<li>Removed <a href="https://github.com/nushell/nushell/pull/4979" target="_blank" rel="noopener noreferrer">is_private from <code>$nu.scope.commands</code></a> (kubouch)</li>
<li><a href="https://github.com/nushell/nushell/pull/4959" target="_blank" rel="noopener noreferrer">Fix for <code>path join</code> on streams</a> (jt)</li>
<li><a href="https://github.com/nushell/nushell/pull/4960" target="_blank" rel="noopener noreferrer">Fixes to environment defaults</a> (jt)</li>
<li><a href="https://github.com/nushell/nushell/pull/4964" target="_blank" rel="noopener noreferrer">Adding escapes to <code>to nuon</code></a> (jt)</li>
<li>Improvements to the <a href="https://github.com/nushell/nushell/pull/4951" target="_blank" rel="noopener noreferrer"><code>reject</code> command</a> (jt)</li>
<li>Fix to the <a href="https://github.com/nushell/nushell/pull/4947" target="_blank" rel="noopener noreferrer">precedence parser</a> (jt)</li>
<li>Calling out through <code>cmd.exe</code> <a href="https://github.com/nushell/nushell/pull/4903" target="_blank" rel="noopener noreferrer">no longer uses AutoRun</a> (LebsterFace)</li>
</ul>
<h1 id="breaking-changes" tabindex="-1"> Breaking changes</h1>
<ul>
<li><a href="https://github.com/nushell/nushell/pull/5120" target="_blank" rel="noopener noreferrer"><code>str find-replace</code> is now <code>str replace</code></a></li>
<li><a href="https://github.com/nushell/nushell/pull/5123" target="_blank" rel="noopener noreferrer"><code>keep</code> is now <code>take</code></a></li>
</ul>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>The 0.61 release, despite slowing down a little to recoup from the 0.60 release, is one of our largest releases. We averaged over 7 PRs/day over the last three weeks, as many new people joined on and more took an interest in Nushell.</p>
<p>Areas of upcoming focus will be on improving dataframe support, adding IDE support, and exploring new ways of working with Nushell.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.60</title>
      <link>https://www.nushell.sh/blog/2022-03-22-nushell_0_60.html</link>
      <guid>https://www.nushell.sh/blog/2022-03-22-nushell_0_60.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.60</source>
      <description>Before we begin, as the Russian invasion of Ukraine still continues to threaten lives, here are ways you can help.
 Nushell 0.60
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing a beta release of 0.60 of Nu. This is an enormous release, with lots of changes across all aspects of Nushell.
</description>
      <pubDate>Tue, 22 Mar 2022 20:57:36 GMT</pubDate>
      <content:encoded><![CDATA[<p><em>Before we begin, as the Russian invasion of Ukraine still continues to threaten lives, <a href="https://war.ukraine.ua" target="_blank" rel="noopener noreferrer">here</a> are ways you can help.</em></p>
<h1 id="nushell-0-60" tabindex="-1"> Nushell 0.60</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing a beta release of 0.60 of Nu. This is an enormous release, with lots of changes across all aspects of Nushell.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.60 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.60.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the built-in goodies, you can install <code>cargo install nu --all-features</code>.</p>
<p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="party-🥳" tabindex="-1"> Party! 🥳</h1>
<p>It's here! 🎉🎉</p>
<p>We're excited to announce the first full release of Nushell using the new engine, new line editor, and so much more!</p>
<h1 id="skipping-versions" tabindex="-1"> Skipping versions</h1>
<p>The first thing you'll notice is that we're skipping from version 0.44 to 0.60. This is on purpose, you didn't miss anything!</p>
<p>Because of the number of changes, and the number of breaking changes, we wanted to let everyone know how much has changed by also making a big jump in the version number. Previous scripts will need to be updated, and you'll need to learn some of the new ways of doing things in Nushell to get back to your same level of comfort.</p>
<p>Let's talk about the features new in this release.</p>
<h1 id="custom-completions" tabindex="-1"> Custom completions</h1>
<p><img src="@source/assets/images/0_60_completions.gif" alt="Custom completions for git and winget"></p>
<p>Let's start with Nushell's most-requested feature: custom completions. The long-awaited, long-requested feature of having nice completions is finally here. With 0.60, you'll be able to write scripts that help you complete parameters and flag values. Let's take a look at an example. When you create a new config, you'll see a section like this:</p>
<div><pre><code># This is a simplified version of completions for git branches and git remotes
def "nu-complete git branches" [] {
  ^git branch | lines | each { |line| $line | str find-replace '\* ' '' | str trim }
}

def "nu-complete git remotes" [] {
  ^git remote | lines | each { |line| $line | str trim }
}
</code></pre></div><p>To call these function at the right time, we need to tell Nushell which parameter can complete with them.</p>
<div><pre><code>extern "git checkout" [
  branch?: string@"nu-complete git branches" # name of the branch to checkout
  -b: string                                 # create and checkout a new branch
  -B: string                                 # create/reset and checkout a branch
  # note: other parameters removed for brevity
]
</code></pre></div><p>The new <code>extern</code> command allows you to describe all the type information for an external command to Nushell. With this, it can perform error checking, completions, syntax highlighting, and more.</p>
<p>You may also notice the <code>@</code> followed by the name of the completion function. This tells the completer what command to call to get a list of completions to use in that position, and you can down-select from these.</p>
<p>We've already seen early adopters starting to write their own completions for other commands, and we're excited to see what people will do.</p>
<h1 id="a-new-config-file" tabindex="-1"> A new config file</h1>
<p>With 0.60, we've moved away from the .toml style of config to a config built from a Nushell script. We've found this to be both more intuitive and much easier to work with.</p>
<p>When you first start up Nushell, you'll be asked if you'd like to create a default config file. This is a great way to see the new defaults and to change them to meet your needs. You'll also see some examples in how to modify the stylings, prompt, keybindings, and external completions.</p>
<h1 id="table-improvements" tabindex="-1"> Table improvements</h1>
<p><img src="@source/assets/images/0_60_ls_colors.png" alt="Better tables"></p>
<p>Tables can now be configured to show a footer with the column names.</p>
<p>Nushell will now also respect your <code>LS_COLORS</code> environment variable if set. If it's not set, Nushell will provide a default 8-bit setting so people with color terminal can see file types in different colors as seen below in the following screenshots.</p>
<h1 id="language-improvements" tabindex="-1"> Language improvements</h1>
<p>There's quite a list of changes to the language itself. Let's talk about each one to help you transition to the new Nushell:</p>
<h2 id="escape-characters-in-strings" tabindex="-1"> Escape characters in strings</h2>
<p>With 0.60, Nushell now divides strings into two types: strings with escape characters and strings without. The escaping case is written with double-quotes (<code>&quot;</code>) and the non-escaping case is written with single-quotes (<code>'</code>):</p>
<div><pre><code>> "hello\nworld"
hello
world
> 'hello\nworld'
hello\nworld
</code></pre></div><p>Nushell will prefer the single-quotes for things like path names that include spaces, allowing you to naturally write paths for Windows as well.</p>
<p>The difference in double-quoted and single-quoted strings also extends to interpolated strings (<code>$&quot;&quot;</code> and <code>$''</code>):</p>
<div><pre><code>> let x = 100
> $"value is:\n($x)"
value is:
100
> $'value is:\n($x)'
value is:\n100
</code></pre></div><h2 id="new-value-forms" tabindex="-1"> New value forms</h2>
<p>The 0.60 release also brings with it a number of new value forms.</p>
<h3 id="records" tabindex="-1"> Records</h3>
<p>You now can write a record, or a list of key/value pairs, as a native data type in Nushell:</p>
<div><pre><code>> {name: "Bob", age: 10}
╭──────┬─────╮
│ name │ Bob │
│ age  │ 10  │
╰──────┴─────╯
</code></pre></div><h3 id="table-as-a-list-of-records" tabindex="-1"> Table as a list of records</h3>
<p>With the introduction of records, a second way to define a table is a list (or stream) of records:</p>
<div><pre><code>> seq 3 | each { |x| { name: Bob, x: $x } }
  #   name   x
────────────────
  0   Bob    1
  1   Bob    2
  2   Bob    3
</code></pre></div><h3 id="integers-are-now-signed-64-bit-integers" tabindex="-1"> Integers are now signed 64-bit integers</h3>
<p>We're moving away from the 'bigint' style of integers, so now integers are always signed 64-bit ints.</p>
<h3 id="decimals-are-now-signed-64-bit-floats" tabindex="-1"> Decimals are now signed 64-bit floats</h3>
<p>Likewise, we're moving away from 'bigdecimal' to signed 64-bit float values.</p>
<h3 id="dates" tabindex="-1"> Dates</h3>
<p>Earlier versions of Nushell supported dates as a value type, but they lacked a way to write them. You can now write a date literal in one of three ways:</p>
<div><pre><code># A date
> 2022-02-02

# A date and time, assuming UTC
> 2022-02-23T19:47:47

# A date and time, with a timezone
2022-02-23T19:47:47.888239621-05:00
</code></pre></div><p>These come from the <a href="https://datatracker.ietf.org/doc/html/rfc3339" target="_blank" rel="noopener noreferrer">RFC 3339</a> standard for datetime formats.</p>
<h3 id="binary-data" tabindex="-1"> Binary data</h3>
<p>Like dates, earlier versions of Nushell also supported binary data but there was no way to write a binary data literal. You're now able to write them using the <code>0x[...]</code> form:</p>
<div><pre><code>> 0x[11 ff]
Length: 2 (0x2) bytes | printable whitespace ascii_other non_ascii
00000000:   11 ff                                                •×
</code></pre></div><p>Spaces and commas are optional in this form, letting you separate write them however is best for readability.</p>
<h3 id="custom-values" tabindex="-1"> Custom values</h3>
<p>Another form we'll be talking about more as it grows is the &quot;custom value&quot; form. These are value types that you can extend the current set with by implementing a trait in Rust and registering the type.</p>
<p>The dataframe support in 0.60 uses this feature.</p>
<h2 id="if-meet-else" tabindex="-1"> if, meet else</h2>
<p>We've improved the syntax of Nushell in a few key places. Previously, in 0.44 you'd write:</p>
<div><pre><code>> if $x &lt; 3 { echo "true!" } { echo "false" }
</code></pre></div><p>This not only felt inelegant, but was prone to errors as people would want to leave off the second block when they didn't need it or just naturally want to type <code>else</code>.</p>
<p>This led to a new concept in Nushell: the keyword shape. Shapes in Nushell are a way for commands to tell the parser what the shape of their parameters are. In turn, the parser will use this knowledge to parse the arguments before they're given to the command (and also to do completions and early errors). With this, <code>else</code> is now one of the new keyword shapes, allowing it to take an expression that follows.</p>
<p>Taken together, in 0.60 we can now not only write the above like this:</p>
<div><pre><code>if $x &lt; 3 {
  echo "true!"
} else {
  echo "false"
}
</code></pre></div><p>We can also string together multiple if/else:</p>
<div><pre><code>if $x &lt; 3 {
  echo "less than three"
} else if $x &lt; 10 {
  echo "less than ten
} else {
  echo "something else!"
}
</code></pre></div><h2 id="shortcircuiting-conditions" tabindex="-1"> Shortcircuiting conditions</h2>
<p>Boolean operators <code>&amp;&amp;</code> and <code>||</code> now will properly shortcircuit, only evaluating the right hand side if necessary.</p>
<h2 id="new-built-in-values" tabindex="-1"> New built-in values</h2>
<p>We're introducing <code>true</code> and <code>false</code> as builtin values. These represent their boolean values true and false respectively.</p>
<h2 id="better-binary-data-support" tabindex="-1"> Better binary data support</h2>
<p>You can now use <code>get</code>, <code>skip</code>, and <code>first</code> on binary data to reach the bytes you'd like to work with. We're exploring extending this further so that it becomes easier to explore your binary data just like your text data.</p>
<h2 id="structured-environment" tabindex="-1"> Structured environment</h2>
<p>Inside of Nu, the environment can now hold any kind of structured value. For example, opening the <code>PATH</code> environment variable now might look like this in macOS:</p>
<div><pre><code>> $env.PATH
╭───┬─────────────────────────────────╮
│ 0 │ /opt/homebrew/opt/openssl@3/bin │
│ 1 │ /opt/homebrew/bin               │
│ 2 │ /opt/homebrew/sbin              │
│ 3 │ /usr/local/bin                  │
│ 4 │ /usr/bin                        │
│ 5 │ /bin                            │
│ 6 │ /usr/sbin                       │
│ 7 │ /sbin                           │
╰───┴─────────────────────────────────╯
</code></pre></div><p>This allows you to more easily add and update to the environment. For example, we can add a new entry to the PATH:</p>
<div><pre><code>> let-env PATH = ($env.PATH | prepend '/my/path')
</code></pre></div><p>Environment variables that aren't strings can be converted to strings automatically using the new <code>ENV_CONVERSIONS</code> environment variable.</p>
<h2 id="scoped-cd" tabindex="-1"> Scoped <code>cd</code></h2>
<p>In this release, we're also moving to keeping the current directory in the environment as <code>$env.PWD</code>. This leads to a few interesting twists in the design. For one, this means that <code>cd</code> is now scoped to the block you're currently in.</p>
<div><pre><code>> cd ./foo
./foo> do { cd ./bar }
./foo>
</code></pre></div><p>This allows you to more easily loop over subdirectories without having to do the bookkeeping of remembering to change back to the previous directory:</p>
<div><pre><code>> ls | where type == dir | each { |it| cd $it.name; ls | length }
</code></pre></div><p>That said, it takes a little getting used to. It does mean that changing a directory in a traditional custom command won't work, as the <code>PWD</code> environment variable will reset after the call completes. To help with this, we're also introducing <code>def-env</code>, a way to work inside the caller's environment and not lose any environment changes made by the custom command:</p>
<div><pre><code>> def-env my-cd [path] {
  cd $path
}

> my-cd ./foo
./foo>
</code></pre></div><h2 id="more-consistent-tables-and-cell-paths" tabindex="-1"> More consistent tables and cell paths</h2>
<p>With this release, we've simplified the commands for working with tables. The two fundamental commands are now: <code>select</code> and <code>get</code>.</p>
<h3 id="select-ing-data" tabindex="-1"> <code>Select</code>-ing data</h3>
<p>The <code>select</code> command allows you to keep the structure of what you're working on and reduce it to only the part you want. For example, just as before you can pass <code>select</code> to get a column:</p>
<div><pre><code>> ls | select name
╭────┬───────────────────╮
│ #  │       name        │
├────┼───────────────────┤
│  0 │ CNAME             │
│  1 │ CONTRIBUTING.md   │
│  2 │ LICENSE           │
│  3 │ README.md         │
│  4 │ assets            │
│  5 │ blog              │
...
</code></pre></div><p>You can now also use <code>select</code> on rows, by passing in a row number:</p>
<div><pre><code>> ls | select 1
╭───┬─────────────────┬──────┬───────┬────────────╮
│ # │      name       │ type │ size  │  modified  │
├───┼─────────────────┼──────┼───────┼────────────┤
│ 0 │ CONTRIBUTING.md │ file │ 389 B │ 2 days ago │
╰───┴─────────────────┴──────┴───────┴────────────╯
</code></pre></div><h3 id="get-ing-data" tabindex="-1"> <code>Get</code>-ing data</h3>
<p>The other fundamental command for working with tables is <code>get</code>. Like <code>select</code>, <code>get</code> allows you to work with columns and rows in a table, or fields in a record. Unlike <code>select</code>, the <code>get</code> command extracts data out of the table and does not try to preserve its original form. This is helpful when you want to get at the cell data itself.</p>
<p>Via a column:</p>
<div><pre><code>> ls | get name
╭────┬───────────────────╮
│  0 │ CNAME             │
│  1 │ CONTRIBUTING.md   │
│  2 │ LICENSE           │
│  3 │ README.md         │
│  4 │ assets            │
│  5 │ blog              │
...
</code></pre></div><p>Via a row:</p>
<div><pre><code>> ls | get 1
╭──────────┬─────────────────╮
│ name     │ CONTRIBUTING.md │
│ type     │ file            │
│ size     │ 389 B           │
│ modified │ 2 days ago      │
╰──────────┴─────────────────╯
</code></pre></div><p>You'll notice that getting rows out of a table with columns gives you back a record. You can think of a table as a list of records.</p>
<p>You can combine working with rows and columns together into a &quot;cell path&quot;, a way of reaching the data you want. If we only wanted to get the cell's data in row 1, column &quot;size&quot;, we can do:</p>
<div><pre><code>> ls | get size.1
</code></pre></div><h2 id="new-pipeline-syntax-form" tabindex="-1"> New pipeline syntax form</h2>
<p>When writing scripts in Nushell, often folks want to be able to build up a pipeline and line up all the pipes on the left. This is now supported in scripts:</p>
<div><pre><code>ls
| where size > 10kb
| length
</code></pre></div><h2 id="default-params" tabindex="-1"> Default params</h2>
<p>A common request as more people tried Nushell was &quot;can we have default values for parameters&quot;. Thanks to the work on the new parser, we can!</p>
<p>Now, you're able to set a default value for any optional parameter in your command:</p>
<div><pre><code>def add-maybe-hundred [x:int, y = 100] {
  $x + $y
}

let twelve_squared = add-maybe-hundred 44
</code></pre></div><p>Default values also work for flag parameters.</p>
<h2 id="stdout-stderr-and-exit-codes" tabindex="-1"> Stdout, stderr, and exit codes</h2>
<p>In previous versions of Nushell, you generally had easy access to the stdout of an external command. You could run it, and then create a pipe and work with its output. If you wanted to work with stderr or get its exit code, you didn't have an easy way to do it.</p>
<p>With 0.60, we've introduced the <code>complete</code> command. Running an external command and then pipeline it to <code>complete</code> runs the external to completion and then gives you the stdout, stderr, and exit code of that external.</p>
<div><pre><code>> cat CNAME | complete
╭───────────┬────────────────╮
│ stdout    │ www.nushell.sh │
│ stderr    │                │
│ exit_code │ 0              │
╰───────────┴────────────────╯
</code></pre></div><p>To redirect stderr, you can call through <code>do -i</code>. For example, let's say we're calling <code>cat</code> again, this time with a file that doesn't exist:</p>
<div><pre><code>> do -i { cat unknown.txt } | complete
╭───────────┬─────────────────────────────────────────────╮
│ stdout    │                                             │
│ stderr    │ cat: unknown.txt: No such file or directory │
│ exit_code │ 1                                           │
╰───────────┴─────────────────────────────────────────────╯
</code></pre></div><p>You can also access the last exit code via <code>$env.LAST_EXIT_CODE</code>.</p>
<h2 id="modules" tabindex="-1"> Modules</h2>
<p>With 0.60, you're now able to create your own modules, allowing you to grow to larger projects with clean interfaces between files. A module can be written either using the <code>module</code> keyword:</p>
<div><pre><code>module greetings {
  export def greet [] {
    print "hello!"
  }
}

use greetings greet
greet
</code></pre></div><p>You can also make modules from whole files. We can rewrite the above using a separate file:</p>
<div><pre><code># greetings.nu
export def greet [] {
  print "hello!"
}

# main.nu
use greetings.nu greet
greet
</code></pre></div><p>Modules allow you to <code>export</code> custom commands and environment variables to be used in other places.</p>
<h2 id="make-your-own-errors" tabindex="-1"> Make your own errors</h2>
<p>You can also create your own error messages in your custom commands and send these back to the user if they call your command in the wrong way. For example, let's say you wanted to require that the user pass in a value between 1 and 10:</p>
<div><pre><code>> def one-to-ten [x: int] {
    let span = (metadata $x).span
    if $x > 10 || $x &lt; 1 {
      error make {
        msg: "Value not between 1 and 10",
        label: {
          text: "expected a value between 1 and 10",
          start: $span.start,
          end: $span.end
        }
      }
    } else {
      $"passed ($x)"
    }
  }
> one-to-ten 6
passed 6
> one-to-ten 21
Error:
  × Value not between 1 and 10
   ╭─[entry #47:1:1]
 1 │ one-to-ten 21
   ·            ─┬
   ·             ╰── expected a value between 1 and 10
   ╰────
</code></pre></div><h2 id="new-commands" tabindex="-1"> New commands</h2>
<p>To accompany the new functionality in the language, we've also added a number of new commands.</p>
<table>
<thead>
<tr>
<th>category</th>
<th>command</th>
</tr>
</thead>
<tbody>
<tr>
<td>conversions</td>
<td><code>into bool</code>, <code>into datetime</code>, <code>into decimal</code>, <code>into duration</code></td>
</tr>
<tr>
<td>core</td>
<td><code>def-env</code>, <code>error make</code>, <code>export def env</code>, <code>export def</code>, <code>export env</code>, <code>export</code>, <code>env</code>, <code>extern</code>, <code>hide</code>, <code>metadata</code>, <code>module</code>, <code>register</code>, <code>use</code>, <code>view-source</code></td>
</tr>
<tr>
<td>filters</td>
<td><code>columns</code>, <code>group</code>, <code>par-each</code>, <code>transpose</code>, <code>window</code>, <code>roll</code>, <code>roll down</code>, <code>roll left</code>, <code>roll right</code>, <code>upsert</code></td>
</tr>
<tr>
<td>formats</td>
<td><code>from nuon</code>, <code>to nuon</code></td>
</tr>
<tr>
<td>plugins</td>
<td><code>gstat</code></td>
</tr>
<tr>
<td>strings</td>
<td><code>decode</code>, <code>nu-highlight</code>, <code>print</code>, <code>fmt</code></td>
</tr>
<tr>
<td>system</td>
<td><code>complete</code>, <code>input</code>, <code>keybindings</code>, <code>keybindings default</code>, <code>keybindings list</code>, <code>keybindings listen</code></td>
</tr>
<tr>
<td>viewers</td>
<td><code>grid</code></td>
</tr>
</tbody>
</table>
<h1 id="shell-improvements" tabindex="-1"> Shell improvements</h1>
<h2 id="bang-bang-and-more" tabindex="-1"> Bang bang and more</h2>
<p>You can now use <code>!!</code> to run the previous command, or <code>!</code> followed by the row number in the <code>history</code> you'd like to run again.</p>
<p>We're working to bring the <a href="https://www.nushell.sh/book/" target="_blank" rel="noopener noreferrer">book up to date</a>, and it's a good place to find explanations of these improvements. Be sure to also look at the <a href="https://www.nushell.sh/book/command_reference.html" target="_blank" rel="noopener noreferrer">updated command documentation</a> for more information on the updated commands.</p>
<h2 id="better-multiline-editing" tabindex="-1"> Better multiline editing</h2>
<p><img src="@source/assets/images/0_59_1_for_multiline_indicator.png" alt="Multiline editing"></p>
<p>With the switch to reedline, you can also get better feedback when working on multiline edits. For example, moving to the next line, you'll now see <code>:::</code> by default preceding the extended input:</p>
<div><pre><code>> do {
::: echo "hello"
::: echo "world"
::: }
hello
world
</code></pre></div><p>You can configure the <code>:::</code> default value by setting the <code>PROMPT_MULTILINE_INDICATOR</code> environment variable. For example, the above screenshot uses ANSI to give it a bit of flare.</p>
<h2 id="grid-output" tabindex="-1"> Grid output</h2>
<p>Nushell also now has a more compact <code>ls</code> representation you can use called <code>grid</code>.</p>
<p><img src="@source/assets/images/0_59_1_ls_gridc.png" alt="Grid file listing"></p>
<h2 id="better-less-support" tabindex="-1"> Better <code>less</code> support</h2>
<p>With Nushell, you can now pipe to your preferred pager, and get a page-able output. For example, if you wanted to look at a long table, you can pipe into the <code>less</code> command (or the equivalent for your OS):</p>
<div><pre><code>> ls **/* | less
</code></pre></div><p>Nushell by default will strip the ANSI colors, letting you look at the data with most pagers.</p>
<h2 id="miette" tabindex="-1"> Miette</h2>
<p>We're moving to a new error reporter called <a href="https://github.com/zkat/miette" target="_blank" rel="noopener noreferrer">miette</a>. It's an attractive way of showing errors back while you're working in the REPL or on scripts.</p>
<p><img src="@source/assets/images/0_60_miette.png" alt="Miette error message"></p>
<h1 id="reedline" tabindex="-1"> Reedline</h1>
<p>Nushell has changed its line editor and now it uses <a href="https://github.com/nushell/reedline" target="_blank" rel="noopener noreferrer">Reedline</a>. This new line
editor allows for improvements and added functionality to the already awesome Nushell experience. Some of the
new improvements are:</p>
<h2 id="completions-menus" tabindex="-1"> Completions menus</h2>
<p><img src="@source/assets/images/0_60_0_completions_internal.gif" alt="Commands menu"></p>
<p>Do you want to search for commands using a menu? Nushell has you covered.
Press tab and a completion menu will appear with options for you to select. Based on the context different
options will be available to you</p>
<h2 id="history-menu" tabindex="-1"> History menu</h2>
<p><img src="@source/assets/images/0_60_0_history.gif" alt="History menu"></p>
<p>Your shell history can be easily accessed as well via menus. Using ctrl-x, you can search for a
history item or you could just simply navigate the menu until you find what you are looking for.</p>
<p>You can also use the history menu to compose a pipe with smaller pipes you have used before.</p>
<p><img src="@source/assets/images/0_60_0_history_complete.gif" alt="History complete"></p>
<h2 id="new-keybindings" tabindex="-1"> New Keybindings</h2>
<p>Now you can define complex keybindings for nushell. For example, say you have changed your config file and
want to reload it in your nushell session. You can create a special keybinding to help reload your config file:</p>
<div><pre><code>{
    name: reload_config
    modifier: none
    keycode: f5
    mode: emacs
    event: {
      send: executehostcommand,
      cmd: $"source '($nu.config-path)'"
    }
}
</code></pre></div><p>with this keybinding every time you press F5 your config file is sourced and ready to go. Neat!</p>
<h1 id="introducing-nuon" tabindex="-1"> Introducing 'nuon'</h1>
<p>As the syntax for Nushell has continued to grow and evolve, we noticed that writing data in Nushell was kinda fun. The more we played with it, the more the idea grew that we could create a data file format using the Nushell syntax for data. Thus, 'nuon' was born. With it, we now include <code>from nuon</code> and <code>to nuon</code> to help you work with the new .nuon files.</p>
<p>Nuon is a superset of JSON, allowing you to pass JSON files and parse them as Nuon. Additionally, Nuon supports the data forms from Nushell, including compact tables, durations, filesizes, and more.</p>
<div><pre><code># sample.nuon
[
    # The nuon compact table format
    [[a, nuon, table]; [1, 2, 3], [4, 5, 6]],

    # A filesize
    100kib,

    # A duration
    100sec,

    # A date
    2022-01-11,

    # A boolean
    true,

    # A record
    {name: "Bobby", age: 99},

    # Binary data
    0x[11, ff, ee, 1f]
]
</code></pre></div><p>Nuon is still experimental, but we're already enjoying using it and are eager to continue to improve on it.</p>
<h1 id="smaller-release-size" tabindex="-1"> Smaller release size</h1>
<p>The 0.60 release is significantly smaller than the previous 0.44 release.</p>
<table>
<thead>
<tr>
<th>release file for 0.44.0</th>
<th>size</th>
</tr>
</thead>
<tbody>
<tr>
<td>nu_0_44_0_linux.tar.gz</td>
<td>103 MB</td>
</tr>
<tr>
<td>nu_0_44_0_macOS.zip</td>
<td>79.7 MB</td>
</tr>
<tr>
<td>nu_0_44_0_windows.msi</td>
<td>55.5 MB</td>
</tr>
<tr>
<td>nu_0_44_0_windows.zip</td>
<td>57.9 MB</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>release file for 0.60.0</th>
<th>size</th>
</tr>
</thead>
<tbody>
<tr>
<td>nu_0_60_0_linux.tar.gz</td>
<td>14.8 MB</td>
</tr>
<tr>
<td>nu_0_60_0_macOS.zip</td>
<td>12.9 MB</td>
</tr>
<tr>
<td>nu_0_60_0_windows.msi</td>
<td>10.1 MB</td>
</tr>
<tr>
<td>nu_0_60_0_windows.zip</td>
<td>10.1 MB</td>
</tr>
</tbody>
</table>
<h1 id="new-engine" tabindex="-1"> New Engine</h1>
<p>Nicknamed &quot;engine-q&quot;, the new engine grew from being a rewrite of parsing and evaluation logic into a full rewrite of Nushell itself. Done over 8 months, the final result has many improvements over the 0.44 engine.</p>
<h2 id="the-new-delta-system" tabindex="-1"> The new delta system</h2>
<p>One powerful new aspect of the new engine is its delta system. Deltas, or change sets, let the engine stay immutable except at key phase shifts. For Nushell, after the user has hit enter in the repl, it will phase shift into parsing, then take a delta of what was given by the user. This delta may contain new definitions, new variables, new modules and more. This delta is merged into the permanent state inside of the engine. After this, the engine returns to being immutable as evaluation begins.</p>
<p>These discrete phase shifts make it possible to limit what mutates while maintaining flexibility, including the ability for users to write parallel code against the engine at any point of evaluation.</p>
<p>Mutation during evaluation isn't removed, instead it's isolated to the stack.</p>
<h2 id="stacks-the-site-of-change" tabindex="-1"> Stacks, the site of change</h2>
<p>For evaluation, stacks are now the site of change in the engine. Stacks are represented as vectors that are passed around during evaluation. They include changes to the environment, newly shadowed variables, and more.</p>
<h2 id="closing-over-variables" tabindex="-1"> Closing over variables</h2>
<p>Another important aspect of the engine and the new uses of stacks is an increased focus on correctness for how blocks work with stacks. In 0.60, we've eliminated many bugs related to variables scopes, where sometimes variables would &quot;leak&quot; from one scope to the next. Now, a &quot;snapshot&quot; of a variable's value is captured when the block is taken as a value in the system. This allows us easy access to run the block later and always have the correct state to run it with.</p>
<h2 id="spans-for-better-errors" tabindex="-1"> Spans for better errors</h2>
<p>Another important area of correctness we wanted to fix from previous versions of Nushell was error spans. Prior Nushell versions struggled with a very common pattern: errors that happen in code that isn't the code you just typed. For example, aliases that failed, calls to custom commands that were previously defined, and more.</p>
<p>In 0.60, along with keeping around code that's still available for the user to call, we also keep around the original span information and original source. This allows us to give better errors for the cases where the error refers to code that's not the current line.</p>
<h2 id="bind-once-run-anywhere" tabindex="-1"> Bind once, run anywhere</h2>
<p>While improving the parser and engine, we also improved how the two connected to each other. One piece of this was &quot;binding&quot;, that is, how definition sites and use sites connect to one another.</p>
<p>In the new engine, we use unique identifiers for all forms of definition in the engine, including variables, declarations, aliases, modules and more. During parse time, we bind the use we see against the definition in scope, and replace the use with a reference to the ID we found. With this, we can later safely export or pass the containing block without losing track of what the original code meant.</p>
<h2 id="faster-than-ever-before" tabindex="-1"> Faster than ever before</h2>
<p>The new engine's data representation is also quite a bit lighter than before. This allows us to evaluate scripts with less overhead. Early results are already quite positive:</p>
<table>
<thead>
<tr>
<th>1 million iteration tight loop</th>
<th>timing</th>
</tr>
</thead>
<tbody>
<tr>
<td>0.44</td>
<td>626ms</td>
</tr>
<tr>
<td>0.60</td>
<td>239ms</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Gradient drawing benchmark</th>
<th>timing</th>
</tr>
</thead>
<tbody>
<tr>
<td>0.44</td>
<td>168ms</td>
</tr>
<tr>
<td>0.60</td>
<td>78ms</td>
</tr>
</tbody>
</table>
<h2 id="going-parallel" tabindex="-1"> Going parallel</h2>
<p>The new engine has a fun trick up it's sleeve: you can effortlessly convert your scripts to run in parallel by changing <code>each</code> calls to <code>par-each</code>.</p>
<p>For example, if we had a script that opened files that fit a certain pattern and counted their number of lines:</p>
<div><pre><code>ls **/*.rs | each { |it|
  let num_lines = (open $it.name | lines | length)
  {name: $it.name, loc: $num_lines}
}
</code></pre></div><p>We can turn this into a script that runs in parallel by changing the <code>each</code> to <code>par-each</code>:</p>
<div><pre><code>ls **/*.rs | par-each { |it|
  let num_lines = (open $it.name | lines | length)
  {name: $it.name, loc: $num_lines}
}
</code></pre></div><table>
<thead>
<tr>
<th>Line counter script</th>
<th>timing</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>each</code></td>
<td>683ms</td>
</tr>
<tr>
<td><code>par-each</code></td>
<td>447ms</td>
</tr>
</tbody>
</table>
<p>While further improvements are possible, it's nice to know we can get such a speedup with a four character change to our script.</p>
<h1 id="new-plugin-architecture" tabindex="-1"> New plugin architecture</h1>
<p>Rather that scanning for all new plugins on startup like we did with 0.44 (and taking ages to start Nu), the new <code>register</code> command stores the
location and signature of your plugins, making it easier to load at start up.</p>
<div><pre><code>> register -e json ~/.cargo/bin/nu_plugin_extra_query
</code></pre></div><p>Also, the new plugin architecture is now multi-protocol, allowing you to pick the right protocol for your plugin. We currently support json and have experimental support for capnp.</p>
<p>By the way, you are not limited to write plugins in Rust. You can even create a python script and use it as a Nushell plugin. You only need to
specify what command should be used to run the plugin</p>
<div><pre><code>> register -e json -s python ~/my_plugins/plugin.py
</code></pre></div><p>Nushell now has three optional plugins (all using 'json' serialization):</p>
<ul>
<li><code>inc</code>: a value/version incrementor</li>
<li><code>gstat</code>: a git stats viewer</li>
<li><code>query</code>: a set of three commands for querying data</li>
</ul>
<h1 id="breaking-changes" tabindex="-1"> Breaking changes</h1>
<p>There are quite a number of breaking changes as we fixed design flaws, cleaned up the design, and rethought how commands should work.</p>
<table>
<thead>
<tr>
<th>Nushell 0.44</th>
<th>Nushell 0.60</th>
</tr>
</thead>
<tbody>
<tr>
<td>if { } { }</td>
<td>if { } else { }</td>
</tr>
<tr>
<td>str trim -rc (char nl)</td>
<td>str trim -r -c (char nl)</td>
</tr>
<tr>
<td>config.toml</td>
<td>config.nu (find location with <code>$nu.config-path</code>)</td>
</tr>
<tr>
<td>let-env FOO = $nothing</td>
<td>hide $FOO</td>
</tr>
<tr>
<td>$nu.home-dir</td>
<td>$nu.home-path</td>
</tr>
<tr>
<td>$nu.temp-dir</td>
<td>$nu.temp-path</td>
</tr>
<tr>
<td><code>$true</code> and <code>$false</code></td>
<td>now <code>true</code> and <code>false</code></td>
</tr>
<tr>
<td>config commands</td>
<td>$config</td>
</tr>
<tr>
<td><code>$nu.env</code></td>
<td><code>$nu.env</code> is now <code>$env</code></td>
</tr>
<tr>
<td>$nu.path</td>
<td><code>$env.PATH</code>/<code>$env.Path</code> &lt;- can do more in config.nu</td>
</tr>
<tr>
<td>$nu.lang</td>
<td>$nu.scope.commands</td>
</tr>
<tr>
<td>str to-int</td>
<td>into int</td>
</tr>
<tr>
<td><code>$nu.env.PROMPT_COMMAND</code> is a string</td>
<td><code>$env.PROMPT_COMMAND</code> is a block or a string</td>
</tr>
<tr>
<td>get (has auto flatten)</td>
<td>get doesn't auto flatten</td>
</tr>
<tr>
<td>to json</td>
<td>to json is formatted as 'pretty'</td>
</tr>
<tr>
<td>environment variable is a string</td>
<td>environment variable can be any value</td>
</tr>
<tr>
<td><code>tags</code></td>
<td><code>tags</code> is now <code>metadata</code></td>
</tr>
<tr>
<td>bigint/bigdecimal</td>
<td>engine-q uses machine i64 and f64</td>
</tr>
<tr>
<td>File, Dir in <code>ls</code></td>
<td>file, dir in <code>ls</code></td>
</tr>
<tr>
<td>binaryview</td>
<td>binaryview has been removed (it may be an optional plugin in the future)</td>
</tr>
<tr>
<td>textview</td>
<td>textview is removed. Install <code>bat</code> to view source files, or pipe the output into <code>less</code></td>
</tr>
<tr>
<td>dataframe</td>
<td>dfr</td>
</tr>
<tr>
<td>shells: <code>active</code>, <code>name</code>, <code>path</code> columns</td>
<td>shells: <code>active</code>, <code>path</code> columns</td>
</tr>
<tr>
<td><code>cd</code> is now scoped</td>
<td>current directory now comes from <code>PWD</code> in <code>$env</code>. Changing directory in a block or custom command no longer changes the caller's directory. To do this, return a table that the caller can use to update their env</td>
</tr>
<tr>
<td>char branch, char segment</td>
<td>char nf-branch, char nf-segment (<code>char</code>s that start with <code>nf-</code> are from nerdfont fonts)</td>
</tr>
<tr>
<td>wasm supported</td>
<td>wasm support currently not started</td>
</tr>
<tr>
<td><code>enter &lt;filename&gt;</code></td>
<td>engine-q only supports entering directories</td>
</tr>
<tr>
<td>str to-decimal</td>
<td>into decimal</td>
</tr>
<tr>
<td><code>pivot</code></td>
<td>renamed to <code>transpose</code></td>
</tr>
<tr>
<td><code>term size -w -t</code></td>
<td><code>term size -c -r</code></td>
</tr>
<tr>
<td>selector</td>
<td>query web</td>
</tr>
<tr>
<td>xpath</td>
<td>query xml</td>
</tr>
<tr>
<td>config directory name: <code>nu</code></td>
<td>config directory name: <code>nushell</code></td>
</tr>
<tr>
<td><code>nth 1</code></td>
<td><code>select 1</code>, <code>select</code> can now down-select rows as well as columns</td>
</tr>
<tr>
<td>match</td>
<td>match command is now integrated into the find command</td>
</tr>
<tr>
<td><code>each group</code></td>
<td><code>each</code> and <code>group</code> are now separate</td>
</tr>
<tr>
<td><code>each window</code></td>
<td><code>each</code> and <code>windows</code> are now separate</td>
</tr>
</tbody>
</table>
<p>You can find out more on <a href="https://github.com/nushell/nushell/issues/4305" target="_blank" rel="noopener noreferrer">the full breaking changes list</a>.</p>
<h1 id="acknowledgements" tabindex="-1"> Acknowledgements</h1>
<p>A big &quot;thank you!&quot; to everyone who helped us build this version of Nushell!</p>
<div><pre><code>╭────┬─────────────────────────────────╮
│  0 │ Access                          │
│  1 │ adamijak                        │
│  2 │ ahkrr                           │
│  3 │ ammkrn                          │
│  4 │ Andrew                          │
│  5 │ Andrew Barnes                   │
│  6 │ Andrés N. Robalino              │
│  7 │ Antonio Natilla                 │
│  8 │ Arthur                          │
│  9 │ Arthur Targaryen                │
│ 10 │ Ashish Thapa                    │
│ 11 │ Basile Henry                    │
│ 12 │ Benoît Cortier                  │
│ 13 │ Charles Dixon                   │
│ 14 │ Chris Gillespie                 │
│ 15 │ crozbo                          │
│ 16 │ Dakota Clark                    │
│ 17 │ Daniel Reilly                   │
│ 18 │ Daniella Mesquita               │
│ 19 │ Darren Schroeder                │
│ 20 │ David Lattimore                 │
│ 21 │ DawnMagnet                      │
│ 22 │ dependabot[bot]                 │
│ 23 │ dgalbraith                      │
│ 24 │ Dheepak Krishnamurthy           │
│ 25 │ Ebuka Agbanyim                  │
│ 26 │ eggcaker                        │
│ 27 │ Eli Flanagan                    │
│ 28 │ Fernando Herrera                │
│ 29 │ Gabriel B Gutierrez             │
│ 30 │ Gabriel Borges Gutierrez        │
│ 31 │ Genna Wingert                   │
│ 32 │ Guillermo Lella                 │
│ 33 │ Hilmar Gústafsson               │
│ 34 │ Homa Wong                       │
│ 35 │ hustcer                         │
│ 36 │ jacremer                        │
│ 37 │ Jae-Heon Ji                     │
│ 38 │ jaeheonji                       │
│ 39 │ Jakub Žádník                    │
│ 40 │ Jason Hansen                    │
│ 41 │ Jonathan Moore                  │
│ 42 │ Joseph T. Lyons                 │
│ 43 │ Josh                            │
│ 44 │ JT                              │
│ 45 │ Julian Aichholz                 │
│ 46 │ Justin                          │
│ 47 │ Justin Ma                       │
│ 48 │ Kamil                           │
│ 49 │ Kat Marchán                     │
│ 50 │ Leo Kettmeir                    │
│ 51 │ LordMZTE                        │
│ 52 │ Luca Trevisani                  │
│ 53 │ Luccas Mateus                   │
│ 54 │ Luccas Mateus de Medeiros Gomes │
│ 55 │ Marco Zanrosso                  │
│ 56 │ Mariano Guerra                  │
│ 57 │ Matthew Auld                    │
│ 58 │ Maxim Zhiburt                   │
│ 59 │ Michael Angerman                │
│ 60 │ Michael Rutter                  │
│ 61 │ mzanrosso                       │
│ 62 │ nibon7                          │
│ 63 │ Niklas S                        │
│ 64 │ Niklas Schoellhorn              │
│ 65 │ onthebridgetonowhere            │
│ 66 │ Onur Şahin                      │
│ 67 │ panicbit                        │
│ 68 │ Ray Henry                       │
│ 69 │ Reilly Wood                     │
│ 70 │ Robert O'Shea                   │
│ 71 │ Sebastian Jung                  │
│ 72 │ Sherub Thakur                   │
│ 73 │ sholderbach                     │
│ 74 │ st155052                        │
│ 75 │ Stefan Holderbach               │
│ 76 │ Stefan Stanciulescu             │
│ 77 │ Tanishq Kancharla               │
│ 78 │ Tom Panton                      │
│ 79 │ Urgau                           │
│ 80 │ WindSoilder                     │
│ 81 │ xiuxiu62                        │
│ 82 │ Yutaro Ohno                     │
│ 83 │ ZetaNumbers                     │
│ 84 │ zkldi                           │
│ 85 │ Ștefan                          │
╰────┴─────────────────────────────────╯
</code></pre></div><h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>With 0.60, we have a solid foundation to build on to reach 1.0. The cleaner architecture and improvements to the language will make way for future improvements, like pattern matching, tasks, and more.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.59 (aka 0.60 beta)</title>
      <link>https://www.nushell.sh/blog/2022-03-01-nushell_0_59.html</link>
      <guid>https://www.nushell.sh/blog/2022-03-01-nushell_0_59.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.59 (aka 0.60 beta)</source>
      <description> Nushell 0.59 (aka 0.60 beta)
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing a beta release of 0.60 of Nu. This is to get early feedback on 0.60 before it's full release in three weeks.
</description>
      <pubDate>Tue, 01 Mar 2022 17:01:13 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-59-aka-0-60-beta" tabindex="-1"> Nushell 0.59 (aka 0.60 beta)</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing a beta release of 0.60 of Nu. This is to get early feedback on 0.60 before it's full release in three weeks.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.59 is available only as pre-built binaries.</p>
<ul>
<li><a href="/binaries/nushell_0_59_windows.msi">Windows .msi</a></li>
<li><a href="/binaries/nushell_0_59_windows.zip">Windows .zip</a></li>
<li><a href="/binaries/nushell_0_59_linux.tar.gz">Linux .zip</a></li>
<li><a href="/binaries/nushell_0_59_macOS.zip">macOS .zip</a></li>
</ul>
<h1 id="what-s-new" tabindex="-1"> What's new</h1>
<p>We'll wait until the full release for the final set of features going into 0.60, but suffice to say it's a <em>lot</em>.</p>
<p>Some of the main things we want to cover for this beta release: the new engine, language improvements, new plugin infrastructure, and more.</p>
<h1 id="new-engine" tabindex="-1"> New Engine</h1>
<p>You can now try out the improvements that came with engine-q as part of a Nushell release. The engine offers a lot of improvements over the previous one. You can now get much better errors, run code in parallel, run code generally faster, and more correctly.</p>
<p>We'll be talking about this more in the full release announcement, but we'd also love your help in testing the engine as you port your code over to it. Crashes, incorrect answers, or just plain weirdness are things we'd like to work on.</p>
<h1 id="language-improvements" tabindex="-1"> Language improvements</h1>
<p>We've made a bunch of improvements to the language, from the change to <code>if</code> to allow <code>else</code>, to modules and imports, operator short-circuiting, and much more.</p>
<p>We're working to bring the <a href="https://www.nushell.sh/book/" target="_blank" rel="noopener noreferrer">book up to date</a>, and it's a good place to find explanations of these improvements. Be sure to also look at the <a href="https://www.nushell.sh/book/command_reference.html" target="_blank" rel="noopener noreferrer">updated command documentation</a> for more information on the updated commands.</p>
<h1 id="new-plugin-architecture" tabindex="-1"> New plugin architecture</h1>
<p>The new plugin architecture is now multi-protocol, allowing you to pick the right protocol for your plugin. We currently support json and capnp.</p>
<p>Rather that scanning for all new plugins on startup like we did with 0.44, there is also a new <code>register</code> command you use a plugin for use:</p>
<div><pre><code>> register -e capnp ~/.cargo/bin/nu_plugin_extra_query
</code></pre></div><h1 id="and-more" tabindex="-1"> And more</h1>
<p>We're still hard at work finishing up the 0.60 release, and we're excited to tell you everything it can do. You'll notice some new chapters in the <a href="https://www.nushell.sh/book/" target="_blank" rel="noopener noreferrer">book</a> on some of these, including: support for exit codes, better stderr support, new language literals for dates and binary data, a whole new line editor with an improved interface, and much more.</p>
<h1 id="one-more-thing" tabindex="-1"> One more thing</h1>
<p>Before we go, we thought we should mention that Nushell now supports completions for external commands. When you first start up nushell, you'll notice that it asks if you want to create a default configuration. If you say yes, and look at the file, you'll see a few of these:</p>
<div><pre><code>def "nu-complete git branches" [] {
  ^git branch | lines | each { |line| $line | str find-replace "\* " "" | str trim }
}

def "nu-complete git remotes" [] {
  ^git remote | lines | each { |line| $line | str trim }
}

extern "git checkout" [
  branch?: string@"nu-complete git branches" # name of the branch to checkout
  -b: string                                 # create and checkout a new branch
  -B: string                                 # create/reset and checkout a branch
</code></pre></div><p>These are completions for external commands (here <code>git checkout</code>) written all in Nushell. We're already getting contributions for <a href="https://github.com/nushell/nu_scripts/tree/main/custom-completions" target="_blank" rel="noopener noreferrer">other completions</a>, too!</p>
<h1 id="looking-forward" tabindex="-1"> Looking forward</h1>
<p>It's time to polish 0.60 and get it to a nice shine. Your help in testing this beta release is invaluable to help making that happen. If you'd like to help us with docs, samples, code, or anything else that crosses your mind, come join us on the <a href="https://discord.gg/NtAbbGn" target="_blank" rel="noopener noreferrer">discord</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.44</title>
      <link>https://www.nushell.sh/blog/2022-02-08-nushell_0_44.html</link>
      <guid>https://www.nushell.sh/blog/2022-02-08-nushell_0_44.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.44</source>
      <description> Nushell 0.44 - the calm before the storm
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.44 of Nu. This is the last release before engine-q becomes the new engine.
</description>
      <pubDate>Tue, 08 Feb 2022 11:10:49 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-44-the-calm-before-the-storm" tabindex="-1"> Nushell 0.44 - the calm before the storm</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.44 of Nu. This is the last release before engine-q becomes the new engine.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.44 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.44.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<p>The <code>drop nth</code> command can now also take a range, allowing you to drop a range of rows as well.</p>
<h1 id="it-s-time" tabindex="-1"> It's time</h1>
<p>Here we are. The last release before engine-q merges into Nushell main. There are an <a href="https://github.com/nushell/nushell/pull/4364" target="_blank" rel="noopener noreferrer">enormous amount of changes coming</a>, including many <a href="https://github.com/nushell/nushell/issues/4305" target="_blank" rel="noopener noreferrer">breaking changes</a>. We encourage you to take a look at the breaking changes ahead of the engine-q releases so that you're familiar with the differences in commands.</p>
<h1 id="looking-forward" tabindex="-1"> Looking forward</h1>
<p>A few things are coming up:</p>
<ul>
<li>After this release, engine-q will land into Nushell main. At this point, we'll work to polish it and prepare it for its first release.</li>
<li>If, as we approach time for the coming release, we feel that it's close but not yet ready, we'll instead release a one-off set of binaries that you can download. This won't be a full release, but instead a beta release geared towards getting more feedback from early adopters.</li>
<li>When it's ready, we'll release the first full Nushell release with engine-q. We'll likely number this by skipping versions, jumping to 0.60 to show how much has changed and also letting folks know to look for breaking changes as well.</li>
<li>From there we'll keep building on the new engine, improving it for 1.0 and beyond.</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.43</title>
      <link>https://www.nushell.sh/blog/2022-01-18-nushell_0_43.html</link>
      <guid>https://www.nushell.sh/blog/2022-01-18-nushell_0_43.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.43</source>
      <description> Nushell 0.43
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.43 of Nu. This release is a bugfix release of 0.42.
</description>
      <pubDate>Tue, 18 Jan 2022 19:25:54 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-43" tabindex="-1"> Nushell 0.43</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.43 of Nu. This release is a bugfix release of 0.42.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.43 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.43.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<p>You can now learn about some of the upcoming changes in Nushell by reading the <code>tutor e-q</code> page. It will tell you about some of the new features and breaking changes, as well as link you to the full list of changes.</p>
<h2 id="fixes" tabindex="-1"> Fixes</h2>
<ul>
<li>Fix to the <a href="https://github.com/nushell/nushell/pull/4241" target="_blank" rel="noopener noreferrer">sample configuration file</a> (ilius)</li>
<li>Fix to a <a href="https://github.com/nushell/nushell/pull/4247" target="_blank" rel="noopener noreferrer">crate description</a> (michel-slm)</li>
<li>Bump to some <a href="https://github.com/nushell/nushell/pull/4258" target="_blank" rel="noopener noreferrer">dependencies in wasm support</a> (dependabot)</li>
<li>Update to <a href="https://github.com/nushell/nushell/pull/4261" target="_blank" rel="noopener noreferrer">sysinfo support</a> (GuillaumeGomez)</li>
<li>Fix to build <a href="https://github.com/nushell/nushell/pull/4262" target="_blank" rel="noopener noreferrer">on latest Rust stable + clippy</a> (jt)</li>
</ul>
<h1 id="engine-q-progress" tabindex="-1"> Engine-q progress</h1>
<p>Engine-q is now nearly complete. Most of the commands have been ported, as has support for the <code>shells</code> feature, many reedline-related improvements, text encoding, and much more. It's now ready for early adopters to pick it up and use it as their shell, reporting any issues they find.</p>
<p>To try it out, you can <a href="https://github.com/nushell/engine-q" target="_blank" rel="noopener noreferrer">build and run engine-q as a standalone application</a>. Also check out the <a href="https://github.com/nushell/engine-q/issues/459" target="_blank" rel="noopener noreferrer">list of configuration settings</a>, <a href="https://github.com/nushell/engine-q/issues/522" target="_blank" rel="noopener noreferrer">list of breaking changes</a>, and <a href="https://github.com/nushell/engine-q/issues/735" target="_blank" rel="noopener noreferrer">the final checklist before engine-q merges into Nushell</a>.</p>
<p>We're hoping to merge engine-q into the main Nushell codebase after the the upcoming 0.44 release. We'll number this release 0.60 to show how much progress has been made by switching to the new engine. We've love to get your feedback on engine-q before it becomes the main Nushell, to help us fix any major issues before the merge happens. Let us know what you find!</p>
<p>You can check out a <a href="https://www.youtube.com/watch?v=c18l_HPsOxs" target="_blank" rel="noopener noreferrer">recent video about engine-q</a> if you'd like to see it in action.</p>
<h1 id="looking-forward" tabindex="-1"> Looking forward</h1>
<p>There are still <a href="https://github.com/nushell/engine-q/issues/242" target="_blank" rel="noopener noreferrer">some commands left to port</a> if you'd like to jump in and give porting a try. If you're interested, you can also help us by testing out engine-q itself as a shell and report your experiences with it. And of course, come join us on the <a href="https://discord.gg/NtAbbGn" target="_blank" rel="noopener noreferrer">discord</a>. We'd be happy to show you around.</p>
<p>Thanks again for all your support.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.42</title>
      <link>https://www.nushell.sh/blog/2021-12-28-nushell_0_42.html</link>
      <guid>https://www.nushell.sh/blog/2021-12-28-nushell_0_42.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.42</source>
      <description> Nushell 0.42
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.42 of Nu. This release is a bugfix release of 0.41.
</description>
      <pubDate>Tue, 28 Dec 2021 20:35:36 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-42" tabindex="-1"> Nushell 0.42</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.42 of Nu. This release is a bugfix release of 0.41.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.42 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.42.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="fixes" tabindex="-1"> Fixes</h2>
<ul>
<li>Can optionally <a href="https://github.com/nushell/nushell/pull/4219" target="_blank" rel="noopener noreferrer">use an insecure SSL cert</a> (nibon7)</li>
<li>Fixed a crash <a href="https://github.com/nushell/nushell/pull/4226" target="_blank" rel="noopener noreferrer">when viewing text files</a> (nibon7)</li>
<li>Build fixed for <a href="https://github.com/nushell/nushell/pull/4192" target="_blank" rel="noopener noreferrer">NetBSD</a> (0323pin)</li>
</ul>
<h2 id="breaking-change" tabindex="-1"> Breaking change</h2>
<ul>
<li>For naming consistency, <a href="https://github.com/nushell/nushell/pull/4189" target="_blank" rel="noopener noreferrer"><code>into column_path</code> is now <code>into column-path</code></a> (hustcer)</li>
</ul>
<h1 id="engine-q-progress" tabindex="-1"> Engine-q progress</h1>
<p>At this point, we're now 100% focused on getting engine-q done. Over <a href="https://github.com/nushell/engine-q/pulls?page=1&amp;q=is%3Apr+is%3Aclosed" target="_blank" rel="noopener noreferrer">120 PRs</a> have been merged into engine-q since the last Nushell release and another <a href="https://github.com/nushell/reedline/pulls?q=is%3Apr+is%3Aclosed" target="_blank" rel="noopener noreferrer">20 PRs in reedline</a>.</p>
<p>Engine-q is now able to be used as a standalone shell. It includes the full set of dataframe functionality and most of the nushell commands. We aren't yet making nightly builds available, but you should be able to <a href="https://github.com/nushell/engine-q" target="_blank" rel="noopener noreferrer">clone and build engine-q</a> on your machine in the same way you might grab the latest Nushell. As you try out engine-q, also give a read over the <a href="https://github.com/nushell/engine-q/issues/522" target="_blank" rel="noopener noreferrer">in-progress breaking change list</a>, as it shows where the new engine will differ from Nushell's current engine.</p>
<h1 id="looking-forward" tabindex="-1"> Looking forward</h1>
<p>There are still <a href="https://github.com/nushell/engine-q/issues/242" target="_blank" rel="noopener noreferrer">some commands left to port</a> if you'd like to jump in and give porting a try. If you're interested, you can also help us by testing out engine-q itself as a shell and report your experiences with it. And of course, come join us on the <a href="https://discord.gg/NtAbbGn" target="_blank" rel="noopener noreferrer">discord</a>. We'd be happy to show you around.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.41</title>
      <link>https://www.nushell.sh/blog/2021-12-07-nushell_0_41.html</link>
      <guid>https://www.nushell.sh/blog/2021-12-07-nushell_0_41.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.41</source>
      <description> Nushell 0.41
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.41 of Nu. This release is a bugfix release of 0.41.
</description>
      <pubDate>Tue, 07 Dec 2021 19:04:55 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-41" tabindex="-1"> Nushell 0.41</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.41 of Nu. This release is a bugfix release of 0.41.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.41 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.41.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="features" tabindex="-1"> Features</h2>
<ul>
<li><a href="https://github.com/nushell/nushell/pull/4175" target="_blank" rel="noopener noreferrer">Add -l/--login flag for compat with other shells</a> (ahouts)</li>
</ul>
<h2 id="fixes" tabindex="-1"> Fixes</h2>
<ul>
<li><a href="https://github.com/nushell/nushell/pull/4156" target="_blank" rel="noopener noreferrer"><code>save --append</code> will now create a file if missing</a> (BraulioVM)</li>
<li><a href="https://github.com/nushell/nushell/pull/4135" target="_blank" rel="noopener noreferrer">Upgraded dependencies</a> (ahkrr)</li>
<li><a href="https://github.com/nushell/nushell/pull/4152" target="_blank" rel="noopener noreferrer">Corrected spelling in crate docs and code docs</a> (EdwardBetts)</li>
<li><a href="https://github.com/nushell/nushell/pull/4155" target="_blank" rel="noopener noreferrer">Fixed the markup in some of the crate docs</a> (tshepang)</li>
<li><a href="https://github.com/nushell/nushell/pull/4157" target="_blank" rel="noopener noreferrer">external arguments are now sanitized more</a> (BraulioVM)</li>
<li><a href="https://github.com/nushell/nushell/pull/4173" target="_blank" rel="noopener noreferrer">upx/strip has been removed after feedback from users</a> (fdncred)</li>
<li><a href="https://github.com/nushell/nushell/pull/4174" target="_blank" rel="noopener noreferrer">Clipboard capability via arboard removed</a> (jt)</li>
<li><a href="https://github.com/nushell/nushell/pull/4178" target="_blank" rel="noopener noreferrer">Removed some unnecessary allocation</a> (ahouts)</li>
</ul>
<h1 id="engine-q-progress" tabindex="-1"> Engine-q progress</h1>
<p>As engine-q matures, our energy continues to be directed towards it. Over <a href="https://github.com/nushell/engine-q/pulls?page=1&amp;q=is%3Apr+is%3Aclosed" target="_blank" rel="noopener noreferrer">80 PRs</a> have been merged into engine-q since the last Nushell release. As engine-q nears readiness for early adopters to begin using it, we've begun concentrating on closing the remaining gaps in functionality so that it can be used as a daily shell. Once ready, Nushell will have its core functionality replaced by engine-q and from there on we'll be using the new engine. We're planning to change the version number significantly to reflect the jump in features.</p>
<h1 id="looking-forward" tabindex="-1"> Looking forward</h1>
<p>As we enter the holidays, the focus of the Nushell effort continues to be on engine-q. There are still <a href="https://github.com/nushell/engine-q/issues/242" target="_blank" rel="noopener noreferrer">many commands left to port</a> and more places to jump in. If you'd like to help, come join us on the <a href="https://discord.gg/NtAbbGn" target="_blank" rel="noopener noreferrer">discord</a>. We'd be happy to show you around.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.40</title>
      <link>https://www.nushell.sh/blog/2021-11-16-nushell_0_40.html</link>
      <guid>https://www.nushell.sh/blog/2021-11-16-nushell_0_40.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.40</source>
      <description> Nushell 0.40
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.40 of Nu. This release is includes better table imports and much smaller release size.
</description>
      <pubDate>Tue, 16 Nov 2021 18:37:43 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-40" tabindex="-1"> Nushell 0.40</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.40 of Nu. This release is includes better table imports and much smaller release size.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.40 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.40.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="detecting-columns-jt" tabindex="-1"> Detecting columns (jt)</h2>
<p>Nushell now supports a new command: <code>detect columns</code>. This command is intended as an easy way to handle tabular data that's written as text. Commands like <code>ps</code>, <code>ls -l</code>, <code>netstat</code>, <code>df</code>, and others commonly output their output as text. With <code>detect columns</code>, you can run the external command, and convert them into Nushell's tabular data format.</p>
<p>Let's look at an example:</p>
<div><pre><code>> df
Filesystem     1K-blocks      Used Available Use% Mounted on
udev             8108824         0   8108824   0% /dev
tmpfs            1631284      2068   1629216   1% /run
/dev/nvme1n1p2 490691512 346066860 119629172  75% /
tmpfs            8156408    251332   7905076   4% /dev/shm
tmpfs               5120         4      5116   1% /run/lock
tmpfs            8156408         0   8156408   0% /sys/fs/cgroup
/dev/nvme0n1p1    508932    211684    297248  42% /boot/efi
tmpfs            1631280       128   1631152   1% /run/user/1000
/dev/nvme0n1p2 238810780 136867812  89742316  61% /media/jt/Data
</code></pre></div><p>The <code>df</code> command comes with most Unix-based systems and prints out a table of data for each of the devices on the system. Let's turn this into a table we can work with in Nushell:</p>
<div><pre><code>> df | detect columns
───┬────────────────┬───────────┬───────────┬───────────┬──────┬────────────────┬────────────────
 # │   Filesystem   │ 1K-blocks │   Used    │ Available │ Use% │    Mounted     │       on
───┼────────────────┼───────────┼───────────┼───────────┼──────┼────────────────┼────────────────
 0 │ udev           │ 8108824   │ 0         │ 8108824   │ 0%   │ /dev           │
 1 │ tmpfs          │ 1631284   │ 2068      │ 1629216   │ 1%   │ /run           │
 2 │ /dev/nvme1n1p2 │ 490691512 │ 346067044 │ 119628988 │ 75%  │ /              │
 3 │ tmpfs          │ 8156408   │ 251332    │ 7905076   │ 4%   │ /dev/shm       │
 4 │ tmpfs          │ 5120      │ 4         │ 5116      │ 1%   │ /run/lock      │ /run/lock
 5 │ tmpfs          │ 8156408   │ 0         │ 8156408   │ 0%   │ /sys/fs/cgroup │ /sys/fs/cgroup
 6 │ /dev/nvme0n1p1 │ 508932    │ 211684    │ 297248    │ 42%  │ /boot/efi      │ /boot/efi
 7 │ tmpfs          │ 1631280   │ 128       │ 1631152   │ 1%   │ /run/user/1000 │ /run/user/1000
 8 │ /dev/nvme0n1p2 │ 238810780 │ 136867812 │ 89742316  │ 61%  │ /media/jt/Data │ /media/jt/Data
───┴────────────────┴───────────┴───────────┴───────────┴──────┴────────────────┴────────────────
</code></pre></div><p>Ahh, that's close to what we want in just one step. Let's go ahead and clean this up a little. First, let's drop that last column. &quot;Mounted on&quot; being two words confused the importer, but all the data is there, we just need to drop the last column.</p>
<div><pre><code>> df | detect columns | drop column
───┬────────────────┬───────────┬───────────┬───────────┬──────┬────────────────
 # │   Filesystem   │ 1K-blocks │   Used    │ Available │ Use% │    Mounted
───┼────────────────┼───────────┼───────────┼───────────┼──────┼────────────────
 0 │ udev           │ 8108824   │ 0         │ 8108824   │ 0%   │ /dev
 1 │ tmpfs          │ 1631284   │ 2068      │ 1629216   │ 1%   │ /run
 2 │ /dev/nvme1n1p2 │ 490691512 │ 346067188 │ 119628844 │ 75%  │ /
 3 │ tmpfs          │ 8156408   │ 251332    │ 7905076   │ 4%   │ /dev/shm
 4 │ tmpfs          │ 5120      │ 4         │ 5116      │ 1%   │ /run/lock
 5 │ tmpfs          │ 8156408   │ 0         │ 8156408   │ 0%   │ /sys/fs/cgroup
 6 │ /dev/nvme0n1p1 │ 508932    │ 211684    │ 297248    │ 42%  │ /boot/efi
 7 │ tmpfs          │ 1631280   │ 128       │ 1631152   │ 1%   │ /run/user/1000
 8 │ /dev/nvme0n1p2 │ 238810780 │ 136867812 │ 89742316  │ 61%  │ /media/jt/Data
───┴────────────────┴───────────┴───────────┴───────────┴──────┴────────────────
</code></pre></div><p>Finally, it'd be nice to be able to have real file sizes for the middle columns, so let's convert the numbers into Nushell's filesize type:</p>
<div><pre><code>> df | detect columns | drop column | into filesize 1K-blocks Used Available
───┬────────────────┬───────────┬──────────┬───────────┬──────┬────────────────
 # │   Filesystem   │ 1K-blocks │   Used   │ Available │ Use% │    Mounted
───┼────────────────┼───────────┼──────────┼───────────┼──────┼────────────────
 0 │ udev           │    8.1 MB │      0 B │    8.1 MB │ 0%   │ /dev
 1 │ tmpfs          │    1.6 MB │   2.1 KB │    1.6 MB │ 1%   │ /run
 2 │ /dev/nvme1n1p2 │  490.7 MB │ 346.1 MB │  119.6 MB │ 75%  │ /
 3 │ tmpfs          │    8.2 MB │ 251.3 KB │    7.9 MB │ 4%   │ /dev/shm
 4 │ tmpfs          │    5.1 KB │      4 B │    5.1 KB │ 1%   │ /run/lock
 5 │ tmpfs          │    8.2 MB │      0 B │    8.2 MB │ 0%   │ /sys/fs/cgroup
 6 │ /dev/nvme0n1p1 │  508.9 KB │ 211.7 KB │  297.2 KB │ 42%  │ /boot/efi
 7 │ tmpfs          │    1.6 MB │    128 B │    1.6 MB │ 1%   │ /run/user/1000
 8 │ /dev/nvme0n1p2 │  238.8 MB │ 136.9 MB │   89.7 MB │ 61%  │ /media/jt/Data
───┴────────────────┴───────────┴──────────┴───────────┴──────┴────────────────
</code></pre></div><p>In just a couple steps, we've converted the text-based table into tabular data we can use just like any other Nushell command. To make this easy to do in the future, we can alias <code>df</code> to do these steps:</p>
<div><pre><code>> alias df = (^df | detect columns | drop column | into filesize 1K-blocks Used Available)
</code></pre></div><h2 id="smaller-binaries-fdncred" tabindex="-1"> Smaller binaries (fdncred)</h2>
<p>The size of the Nushell release binaries has come up as regular feedback from Nushell users. &quot;Why does the shell have to be so big?&quot; And we've heard you!</p>
<p>Today's release now uses a combination of <code>strip</code> and <code>upx</code> to bring considerable savings in binary size. The Linux release (plugins incl.) has dropped from 475mb to 58mb(!!), making it <strong>88% smaller</strong>. We're seeing similar improvements in the sizes of the macOS and Windows releases.</p>
<h2 id="additional-fixes" tabindex="-1"> Additional fixes</h2>
<ul>
<li>Upgraded <a href="https://github.com/nushell/nushell/pull/4122" target="_blank" rel="noopener noreferrer">polars dataframe support</a> (nmandery)</li>
<li>Fixed a <a href="https://github.com/nushell/nushell/pull/4107" target="_blank" rel="noopener noreferrer">panic during parsing</a> (ahkrr)</li>
<li>File matching between <code>rm</code> and <code>ls</code> is now <a href="https://github.com/nushell/nushell/pull/4099" target="_blank" rel="noopener noreferrer">more consistent</a> (yogi)</li>
</ul>
<h1 id="engine-q-progress" tabindex="-1"> Engine-q progress</h1>
<p>We've also hit a milestone with engine-q: now over 100 commands have been ported to engine-q! Special thanks to onthebridgetonowhere, CBenoit, luccasmmg, stormasm, and aslynatilla for their work in these ports since the last Nushell release.</p>
<p>We've also added support for <a href="https://github.com/nushell/engine-q/pull/332" target="_blank" rel="noopener noreferrer"><code>$config</code></a>, <a href="https://github.com/nushell/engine-q/pull/309" target="_blank" rel="noopener noreferrer"><code>$in</code></a>, a new <a href="https://github.com/nushell/engine-q/pull/326" target="_blank" rel="noopener noreferrer">record syntax</a>, <a href="https://github.com/nushell/engine-q/pull/340" target="_blank" rel="noopener noreferrer"><code>ls</code> colors</a>, <a href="https://github.com/nushell/engine-q/pull/331" target="_blank" rel="noopener noreferrer">environment variable module imports</a>, and much more. While engine-q isn't quite ready to be tested as a daily driver, with each day its capabilities and stability grows.</p>
<p>If you're interested in how some of the upcoming support for parallel processing in engine-q works, contributor JT <a href="https://www.youtube.com/watch?v=3o8b_QcrFHc" target="_blank" rel="noopener noreferrer">made a video explaining it</a>.</p>
<h1 id="looking-forward" tabindex="-1"> Looking forward</h1>
<p>We're excited to see Nushell continue to gain more ability to work with data in easier ways as well as doing so in as a much smaller binary. Progress on engine-q continues to grow, and covers a large amount of ground in the engine internals, porting commands, plugin support, modules, and more.</p>
<p>If you're interested in helping out, come <a href="https://discord.gg/NtAbbGn" target="_blank" rel="noopener noreferrer">join us on the discord</a>. We're more than happy to help answer questions and point you towards on-going projects!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.39</title>
      <link>https://www.nushell.sh/blog/2021-10-26-nushell_0_39.html</link>
      <guid>https://www.nushell.sh/blog/2021-10-26-nushell_0_39.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.39</source>
      <description> Nushell 0.39
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.39 of Nu. This release is a bugfix release of 0.38.
</description>
      <pubDate>Wed, 27 Oct 2021 01:42:52 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-39" tabindex="-1"> Nushell 0.39</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.39 of Nu. This release is a bugfix release of 0.38.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.39 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.39.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<ul>
<li>History file is now removed when the history is cleared (fdncred)</li>
<li>HTML selector has a regression fixed (lucassmmg)</li>
<li>Unused dependencies were removed (lucassmmg)</li>
<li>Updated clippy warnings were fixed (jt)</li>
</ul>
<h1 id="engine-q-progress" tabindex="-1"> Engine-q progress</h1>
<p>You'll notice that this release is pretty light, only a set of fixes on 0.38. This is because our energy is now largely focused on engine-q. We're excited to get this in front of you.</p>
<p>Just to tease a little of what will be possible, this week we added support for processing streams in parallel in engine-q using a new <code>par-each</code> command. We'll talk more about this as it develops.</p>
<h1 id="looking-forward" tabindex="-1"> Looking forward</h1>
<p>We're excited about what the new engine changes will bring in terms of performance, correctness, and new capabilities. If you're interested in helping out, come <a href="https://discord.gg/NtAbbGn" target="_blank" rel="noopener noreferrer">join us on the discord</a>!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.38</title>
      <link>https://www.nushell.sh/blog/2021-10-05-nushell_0_38.html</link>
      <guid>https://www.nushell.sh/blog/2021-10-05-nushell_0_38.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.38</source>
      <description> Nushell 0.38
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.38 of Nu. This release includes polish to the user interface, improvements to how columns are passed, lots of bug fixes, and updates on the upcoming engine.
</description>
      <pubDate>Tue, 05 Oct 2021 19:30:58 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-38" tabindex="-1"> Nushell 0.38</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.38 of Nu. This release includes polish to the user interface, improvements to how columns are passed, lots of bug fixes, and updates on the upcoming engine.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.38 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.38.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="quickly-jump-to-a-shell-tw4452852" tabindex="-1"> Quickly jump to a shell (tw4452852)</h2>
<p>If you've used shells, you've no doubt used the <code>n</code> and <code>p</code> commands to quickly jump between them. This can be a big time saver when you're working in multiple directories.</p>
<p>In this release, we've added a <code>g</code> command that helps you quickly jump to a particular shell. This helps in the cases where you end up with more than two shells open and you already know what shell you want to jump to.</p>
<h2 id="additional-improvements" tabindex="-1"> Additional improvements</h2>
<ul>
<li>Improvements in <a href="https://github.com/nushell/nushell/pull/4027" target="_blank" rel="noopener noreferrer">updated table cell values</a> (andrasio)</li>
<li><code>update cells</code> command now <a href="https://github.com/nushell/nushell/pull/4039" target="_blank" rel="noopener noreferrer">can take a list of columns</a> (ArtoLord)</li>
<li>You can now also <a href="https://github.com/nushell/nushell/pull/4062" target="_blank" rel="noopener noreferrer">pass a list of columns to <code>select</code></a> (JoshCheek)</li>
<li>Improvements in <a href="https://github.com/nushell/nushell/pull/4036" target="_blank" rel="noopener noreferrer">how html table scraping works</a> and <a href="https://github.com/nushell/nushell/pull/4043" target="_blank" rel="noopener noreferrer">also</a> (luccasmmg)</li>
<li>Fix to <a href="https://github.com/nushell/nushell/pull/4037" target="_blank" rel="noopener noreferrer">compiling on nightly</a> (gilescope)</li>
<li>Removed <a href="https://github.com/nushell/nushell/pull/4038" target="_blank" rel="noopener noreferrer">unused deps</a> (gilescope)</li>
<li>Completions now <a href="https://github.com/nushell/nushell/pull/4023" target="_blank" rel="noopener noreferrer">can complete inside of an argument</a> (tw4452852)</li>
<li>We now <a href="https://github.com/nushell/nushell/pull/4052" target="_blank" rel="noopener noreferrer">expand tilde when reading plugin directories</a> (hedonihilist)</li>
<li>We also <a href="https://github.com/nushell/nushell/pull/4058" target="_blank" rel="noopener noreferrer">turn off ansi colors when not in a TTY</a></li>
<li>Fixed some of the <a href="https://github.com/nushell/nushell/pull/4061" target="_blank" rel="noopener noreferrer">wasm deps</a> (jt)</li>
<li>Fixed a <a href="https://github.com/nushell/nushell/pull/4022" target="_blank" rel="noopener noreferrer">leak of a <code>let</code>-binding</a> (Pantonshire)</li>
<li>Use <a href="https://github.com/nushell/nushell/pull/4021" target="_blank" rel="noopener noreferrer">SIMD-enabled compiler flags</a> (aminya)</li>
<li>Updated polars <a href="https://github.com/nushell/nushell/pull/4013" target="_blank" rel="noopener noreferrer">dependency to 0.16</a> (elferherrera)</li>
<li>Updates to how <a href="https://github.com/nushell/nushell/pull/4008" target="_blank" rel="noopener noreferrer"><code>path join</code> works</a> (kubouch)</li>
<li>Moved <code>nu-path</code> tests into <a href="https://github.com/nushell/nushell/pull/4015" target="_blank" rel="noopener noreferrer">integration tests</a> (kubouch)</li>
<li>New support for <a href="https://github.com/nushell/nushell/pull/4048" target="_blank" rel="noopener noreferrer">converting to column paths</a> (fdncred)</li>
<li>Cleanup <a href="https://github.com/nushell/nushell/pull/4029" target="_blank" rel="noopener noreferrer">fixes to make tests more resilient</a> (kubouch)</li>
<li>Internal improvement <a href="https://github.com/nushell/nushell/pull/4031" target="_blank" rel="noopener noreferrer">to make working with spans easier</a> (elferherrera)</li>
<li>Fix to <a href="https://github.com/nushell/nushell/pull/4033" target="_blank" rel="noopener noreferrer">gitpod</a> (Merith-TK)</li>
<li>Fix to <a href="https://github.com/nushell/nushell/pull/4034" target="_blank" rel="noopener noreferrer">big int handling in <code>to</code></a> (pjmore)</li>
<li>Fixed a <a href="https://github.com/nushell/nushell/pull/4040" target="_blank" rel="noopener noreferrer">typo</a> (lildata)</li>
<li>Fixed <a href="https://github.com/nushell/nushell/pull/4051" target="_blank" rel="noopener noreferrer">some typos in the tutor</a> (hojjatabdollahi)</li>
<li>Removed <a href="https://github.com/nushell/nushell/pull/4063" target="_blank" rel="noopener noreferrer">the experimental scrolling support as it had broken</a></li>
</ul>
<h2 id="engine-q" tabindex="-1"> Engine-q</h2>
<p>Engine-q continues to grow to become the upcoming engine for Nushell. Over the last three weeks, it gained basic filesystem support, improved completions, lots of new internal commands including <code>select</code>, <code>ps</code>, <code>sys</code>, and more.</p>
<p>We've also added a full module system, a new error reporter using <a href="https://github.com/zkat/miette" target="_blank" rel="noopener noreferrer">miette</a>, and support for externals.</p>
<p>It's grown to the stage that some of us are starting to dogfood using engine-q as our shell.</p>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>For the next few months, as engine-q matures, we'll be contributing to both Nushell and engine-q. This will help Nushell continue to grow and help support users of Nushell. We'll also use the knowledge we get from support Nushell in how we design these last pieces of engine-q.</p>
<p>As it grows, we'll make a way to help us test engine-q until we're confident it's ready to be moved into place.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.37</title>
      <link>https://www.nushell.sh/blog/2021-09-14-nushell_0_37.html</link>
      <guid>https://www.nushell.sh/blog/2021-09-14-nushell_0_37.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.37</source>
      <description> Nushell 0.37
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.37 of Nu. This release adds a new find function, improvements to the current engine, and updates on the upcoming engine.
</description>
      <pubDate>Tue, 14 Sep 2021 21:53:21 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-37" tabindex="-1"> Nushell 0.37</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.37 of Nu. This release adds a new <code>find</code> function, improvements to the current engine, and updates on the upcoming engine.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.37 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.37.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="finding-data-in-tables" tabindex="-1"> <code>find</code>ing data in tables</h2>
<p><img src="@source/assets/images/0_37_find.png" alt="Screenshot showing using the new find command to find the phrase toml in a table"></p>
<p>In 0.37, you now have access to a new <code>find</code> command, which can help you quickly look for data across all columns in a table.</p>
<p>You can still reach your system's <code>find</code> command using <code>^</code> by typing <code>^find</code>.</p>
<h2 id="additional-improvements" tabindex="-1"> Additional improvements</h2>
<ul>
<li>fdncred added more <a href="https://github.com/nushell/nushell/pull/3973" target="_blank" rel="noopener noreferrer">support for ansi art</a>, and <a href="https://github.com/nushell/nushell/pull/3975" target="_blank" rel="noopener noreferrer">more chars</a></li>
<li>aminya removed shelling out in <a href="https://github.com/nushell/nushell/pull/3974" target="_blank" rel="noopener noreferrer">some cases where it's not needed</a></li>
<li>jt made <a href="https://github.com/nushell/nushell/pull/3983" target="_blank" rel="noopener noreferrer">sys/ps/fetch/post core commands</a>, moving them from plugins to internal commands. This allows for future capability to have nushell download its own extensions.</li>
<li>andrasio began adding <a href="https://github.com/nushell/nushell/pull/3986" target="_blank" rel="noopener noreferrer">support for creating errors inside of nushell code</a>, extended <a href="https://github.com/nushell/nushell/pull/3988" target="_blank" rel="noopener noreferrer"><code>tags</code> to support basic command reflection</a></li>
<li>lily-mara added <a href="https://github.com/nushell/nushell/pull/3987" target="_blank" rel="noopener noreferrer"><code>into filesize</code></a></li>
<li>tw4452852 added <a href="https://github.com/nushell/nushell/pull/3992" target="_blank" rel="noopener noreferrer">support to append when calling <code>save</code></a></li>
<li>Pantoshire improved <a href="https://github.com/nushell/nushell/pull/3995" target="_blank" rel="noopener noreferrer">errors when bash-style alias was mistakingly used</a></li>
<li>tranzystorek-io did a lot of <a href="https://github.com/nushell/nushell/pull/3996" target="_blank" rel="noopener noreferrer">general code improvements</a></li>
<li>kubouch did some fixes to p<a href="https://github.com/nushell/nushell/pull/3998" target="_blank" rel="noopener noreferrer">aths and the <code>source</code> command</a></li>
<li>elferherrera updated the <a href="https://github.com/nushell/nushell/pull/4003" target="_blank" rel="noopener noreferrer">prompt environment variable to PROMPT_COMMAND</a> to show that it is nushell code that gets run</li>
</ul>
<h2 id="engine-q" tabindex="-1"> Engine-q</h2>
<p>We've been hard at work on the upcoming set of engine updates for Nushell (codenamed 'engine-q'). These updates address some fundamental flaws in the current Nushell engine design and should help set us up for a strong engine in the future.</p>
<p>In this section we'll talk a bit about the design of this engine and show some fun tricks it's able to do.</p>
<h3 id="background" tabindex="-1"> Background</h3>
<p>The current Nushell code uses a single concept for the scope that's shared between the parser and the evaluation engine. This is how definitions could be added by the parser into the scope that the engine could find them. This scope used locks to maintain thread safety. This meant that each variable lookup had the additional cost of unlocking the lock around the scope. The way this was set up also had subtle bugs with how the scope was handled, including corner cases where variables would be visible in scopes where they shouldn't be.</p>
<p>In addition, there wasn't an easy way to do a speculative parse of content like you might with syntax highlighting or completions.</p>
<h3 id="new-design" tabindex="-1"> New design</h3>
<p>In the new design, both the parser and the engine have received a pretty thorough rework. The parser now uses an <a href="https://en.wikipedia.org/wiki/String_interning" target="_blank" rel="noopener noreferrer">interning system</a> for its definitions, allowing the resulting parse tree to be simpler. It also has a change delta system where the parser can create a temporary working set to use, and this working set can optionally merge into the permanent state. We've also building in a lot of additional fun additions -- like typechecking! -- so you can get additional benefits from information the parser knows.</p>
<p>Likewise, the engine has been rewritten to use proper scoping, a simpler value system, and more.</p>
<p>As you can see, we're taking full advantage of the opportunity to fix long-standing issues we wished we could fix over the last couple of years working on Nu.</p>
<p>Oh, there is one more thing.</p>
<p><img src="@source/assets/images/eq_git_branch_completion.gif" alt="Animated gif showing off dynaming git branch completions"></p>
<p>A big motivator for the rewrite was to make it easier to add dynamic custom completions, like the kind you use when completing a git branch while doing <code>git checkout</code>. The above gif shows a very early prototype of how we might implement this using the engine-q system. It works by running actually nushell code at completion time, getting the list of git branches as a list, and handing that list back to the completion system.</p>
<p>The demo took less than two hours to implement using the capabilities of the new engine, and we're excited to see how we can make this more general and offer the ability for folks to create their own completions in nushell code.</p>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>Engine-q offers some huge improvements to both the internals of Nushell as well as a way to finally check off tasks we know we've wanted for a long time (like git completions). If you're interested in helping out with the engine-q work, we'd love to have the help. The best place is to join us on the discord and on the engine-q repo.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.36</title>
      <link>https://www.nushell.sh/blog/2021-08-24-nushell_0_36.html</link>
      <guid>https://www.nushell.sh/blog/2021-08-24-nushell_0_36.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.36</source>
      <description> Nushell 0.36
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.36 of Nu. This release fixes some long-standing issues with history, improves the help system, improves dataframes, and much more.
</description>
      <pubDate>Tue, 24 Aug 2021 22:05:28 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-36" tabindex="-1"> Nushell 0.36</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.36 of Nu. This release fixes some long-standing issues with history, improves the help system, improves dataframes, and much more.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.36 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.36.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="help-now-has-search-fdncred" tabindex="-1"> Help now has search (fdncred)</h2>
<p>You can now use <code>help -f &lt;term&gt;</code> and search the help for text. This can come in handy if you know roughly what you want but can't remember the name of the command:</p>
<div><pre><code>> help -f string
────┬──────────────────────────┬────────────────────────────────────────────────┬─────────────
 #  │           name           │                     usage                      │ extra_usage
────┼──────────────────────────┼────────────────────────────────────────────────┼─────────────
  0 │ ansi strip               │ strip ansi escape sequences from string        │
  1 │ build-string             │ Builds a string from the arguments.            │
  2 │ dataframe concatenate    │ [Series] Concatenates strings with other array │
  3 │ dataframe contains       │ [Series] Checks if a pattern is contained in a │
    │                          │ string                                         │
  4 │ dataframe replace        │ [Series] Replace the leftmost (sub)string by a │
    │                          │ regex pattern                                  │
...
</code></pre></div><h2 id="built-in-tutor-jt" tabindex="-1"> Built-in tutor (jt)</h2>
<p>In addition to the new help search, we've also started to build out a built-in Nushell tutorial. You can navigate by topic or search the help text for a string.</p>
<p><img src="@source/assets/images/0_36_tutor.png" alt="Screenshot showing the tutor command running 'tutor table'"></p>
<p>We've only added a few topics so far, but we hope to grow these topics (with your help) over the coming releases.</p>
<h2 id="new-commands-and-features" tabindex="-1"> New commands and features</h2>
<ul>
<li><a href="https://github.com/nushell/nushell/pull/3917" target="_blank" rel="noopener noreferrer"><code>drop nth</code></a> - drops the given rows (andrasio)</li>
<li><a href="https://github.com/nushell/nushell/pull/3918" target="_blank" rel="noopener noreferrer"><code>PROMPT_STRING</code> environment variable</a> - configures the script to run to create the prompt directly from the environment (elferherrera)</li>
<li><a href="https://github.com/nushell/nushell/pull/3919" target="_blank" rel="noopener noreferrer"><code>zip</code></a> - combine two lists into one list of pairs (andrasio)</li>
</ul>
<h2 id="dataframe-improvements-elferherrera" tabindex="-1"> Dataframe improvements (elferherrera)</h2>
<ul>
<li><a href="https://github.com/nushell/nushell/pull/3894" target="_blank" rel="noopener noreferrer">datetime commands</a></li>
<li><a href="https://github.com/nushell/nushell/pull/3907" target="_blank" rel="noopener noreferrer">describe command</a></li>
<li><a href="https://github.com/nushell/nushell/pull/3960" target="_blank" rel="noopener noreferrer">rolling and cumulative commands</a></li>
</ul>
<h2 id="important-bugfixes-lily-mara-gwenn-jt" tabindex="-1"> Important bugfixes (lily-mara, gwenn, jt)</h2>
<p>A long-standing issue with history getting garbled when you have multiple shells open sending history updates is hopefully <a href="https://github.com/kkawakam/rustyline/pull/560" target="_blank" rel="noopener noreferrer">now fixed</a>. Thanks to the rustyline maintainers for helping find the root cause and creating a fix for it.</p>
<h2 id="additional-improvements" tabindex="-1"> Additional improvements</h2>
<ul>
<li>waldyrious fixed <a href="https://github.com/nushell/nushell/pull/3890" target="_blank" rel="noopener noreferrer">a typo</a>, and fixed <a href="https://github.com/nushell/nushell/pull/3891" target="_blank" rel="noopener noreferrer">issue templates</a></li>
<li>fdncred started a list of <a href="https://github.com/nushell/nushell/pull/3895" target="_blank" rel="noopener noreferrer">projects that officially support Nushell</a></li>
<li>RealCundo added <a href="https://github.com/nushell/nushell/pull/3888" target="_blank" rel="noopener noreferrer">PartialEq to ReturnValue</a></li>
<li>hedonihilist improved <a href="https://github.com/nushell/nushell/pull/3902" target="_blank" rel="noopener noreferrer">how DirInfo calculates directory size</a></li>
<li>soumil-07 <a href="https://github.com/nushell/nushell/pull/3905" target="_blank" rel="noopener noreferrer">worked around a BigDecimal issue that broke <code>math floor</code></a></li>
<li>jt added <a href="https://github.com/nushell/nushell/pull/3906" target="_blank" rel="noopener noreferrer"><code>in</code> and <code>not-in</code> for strings</a>, changed the <a href="https://github.com/nushell/nushell/pull/3924" target="_blank" rel="noopener noreferrer">release build to focus on binary size</a></li>
<li>baoyachi <a href="https://github.com/nushell/nushell/pull/3914" target="_blank" rel="noopener noreferrer">updated shadow-rs, which fixes some datetime issues and more</a></li>
<li>knottio added <a href="https://github.com/nushell/nushell/pull/3921" target="_blank" rel="noopener noreferrer">trailing slash when completing symlinked directory</a></li>
<li>fdncred fixed <a href="https://github.com/nushell/nushell/pull/3923" target="_blank" rel="noopener noreferrer"><code>fetch</code> to better follow redirects</a>, and improved the <a href="https://github.com/nushell/nushell/pull/3962" target="_blank" rel="noopener noreferrer">issue template</a></li>
<li>filaretov fixed <a href="https://github.com/nushell/nushell/pull/3936" target="_blank" rel="noopener noreferrer">unaliasing to only affect the current scope</a></li>
<li>kubouch fixed <a href="https://github.com/nushell/nushell/pull/3939" target="_blank" rel="noopener noreferrer">an issue where <code>source</code> couldn't handle paths with emojis</a></li>
</ul>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>The ability to search help and improve a built-in tutorial gives us a lot of opportunties to make Nushell more user-friendly, especially to users who are just getting started learning what Nushell can do. If you're interested, these are some good places to <a href="https://github.com/nushell/nushell/blob/main/crates/nu-command/src/commands/core_commands/tutor.rs" target="_blank" rel="noopener noreferrer">jump in and help</a> if you have specific topics or areas of interest.</p>
<p>The projects we reported on last time, engine-q and reedline, are steadily improving. We're currently working through any remaining issues so that we can begin experimenting with integrating them into Nushell.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Two years of Nushell</title>
      <link>https://www.nushell.sh/blog/2021-08-23-two-years-of-nushell.html</link>
      <guid>https://www.nushell.sh/blog/2021-08-23-two-years-of-nushell.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Two years of Nushell</source>
      <pubDate>Tue, 24 Aug 2021 03:14:11 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="two-years-of-nushell" tabindex="-1"> Two years of Nushell</h1>
<p><img src="@source/assets/images/two_year_cake.png" alt="Stock cake photo with a 2"></p>
<p><em>Happy birthday, Nushell!</em></p>
<p>Happy birthday, Nushell! Today marks the second year for Nushell since its first public release. We wanted to write a bit about what the last year has meant and share some of the highlights and lowlights along the way.</p>
<h2 id="focus" tabindex="-1"> Focus</h2>
<p>Through out Nushell's first year, we had faith in the basics behind Nushell but couldn't guess how it would grow and what it might be able to do. As we progressed through this second year, the project gained a focus: <strong>to be the best tool for interactively working with your system and your data</strong>.</p>
<p>It's a high bar to set, but we're happy to try to achieve that goal. To achieve it, we're focusing on three different parts of Nushell, each of which deeply connects to the other two.</p>
<h3 id="nushell-the-language" tabindex="-1"> Nushell, the language</h3>
<p>Nushell (sometimes shortened to just Nu) is a language that allows you to easily create pipelines for working on structured data. As a language, Nushell has grown considerably over the last year. You're now able to make your own commands to process data, create aliases, variables, and much much more.</p>
<p>We've started collecting examples to share with each other as Nushell grows and our skill with it grows with it. You can check them out in the <a href="https://github.com/nushell/nu_scripts" target="_blank" rel="noopener noreferrer">Nu Scripts repo</a>.</p>
<p><img src="@source/assets/images/two_year_vscode.png" alt="Dark theme vscode showing Nushell"></p>
<p>To work with Nushell, we also published a <a href="https://marketplace.visualstudio.com/items?itemName=TheNuProjectContributors.vscode-nushell-lang" target="_blank" rel="noopener noreferrer">vscode extension</a>.</p>
<h3 id="nushell-the-shell" tabindex="-1"> Nushell, the shell</h3>
<p>From day #1, Nushell has always been intended to work well as a shell. It's even in the name 🙂.</p>
<p>We've spent a lot of time this year steadily improving areas that make Nushell -- as a shell -- feel better, more stable, and generally easier to use. We've improved integrations with <a href="https://github.com/nushell/nu_scripts/tree/main/virtual_environments" target="_blank" rel="noopener noreferrer">Python</a>, integrations with tools like <a href="https://github.com/ajeetdsouza/zoxide" target="_blank" rel="noopener noreferrer">zoxide</a> and <a href="https://github.com/starship/starship" target="_blank" rel="noopener noreferrer">starship</a>, and more. That said, as more people have adopted it, we've learned more what regular shell users need. Lots of ideas going into next year as to places that Nushell can work better with the broader range of tools and techniques that commandline users use.</p>
<h3 id="nushell-the-data-analysis-tool" tabindex="-1"> Nushell, the data analysis tool</h3>
<p>A relatively new aspect of being an interactive tool for working with data is Nushell's recent adoption of supporting dataframes. Dataframes allow users to work with large datasets in an efficient way. Recent versions of Nushell, using dataframes, are able to process and aggregate data from <a href="https://www.nushell.sh/blog/2021-07-13-nushell_0_34.html#dataframes-elferherrera" target="_blank" rel="noopener noreferrer">5 million line csv files in less than a second</a>. Did we mention dataframes are fast?</p>
<p>We'll be exploring how best to more-fully integrate dataframes with the rest of the Nushell features in the coming year.</p>
<h2 id="highlights" tabindex="-1"> Highlights</h2>
<h3 id="seeing-what-nushell-will-become" tabindex="-1"> Seeing what Nushell will become</h3>
<p>With 0.32, we first <a href="https://www.nushell.sh/blog/2021-06-01-nushell_0_32.html#new-expression-syntax-jt" target="_blank" rel="noopener noreferrer">got a glimpse of what the Nushell language will become</a>. With 0.34, we saw <a href="https://www.nushell.sh/blog/2021-07-13-nushell_0_34.html#dataframes-elferherrera" target="_blank" rel="noopener noreferrer">what data processing could be</a>. These recent releases help to sketch where Nushell will feel like when it hits 1.0.</p>
<p>One example that shows this off is the script we use every week to create the This Week in Nu newsletter. As you can see, <a href="https://github.com/nushell/nu_scripts/blob/main/make_release/this_week_in_nu_release.nu" target="_blank" rel="noopener noreferrer">it's a full script</a> of the sort you might write in Python or Ruby.</p>
<h3 id="growing-love" tabindex="-1"> Growing love</h3>
<p>We're seeing a growing amount of love for Nushell as more people try it and share their experiences. Here are some tweets from the last few weeks:</p>
<p><img src="@source/assets/images/two_year_tweet1.png" alt="Oh damn @nu_shell is awesome. It's a really powerful advancement over existing shells on unix!"></p>
<p><img src="@source/assets/images/two_year_tweet2.png" alt="The pandas style dataframe feature in nushell is Exploding head♥"></p>
<p><img src="@source/assets/images/two_year_tweet3.png" alt="@nu_shell has fundamentally changed the way I interact with data on my computer. It's no longer a process to get anything out of a csv, etc. It's just... there. however I want it served up."></p>
<p><img src="@source/assets/images/two_year_tweet4.png" alt="Acabo de probar el @nu_shell y estoy enamorao"></p>
<p><img src="@source/assets/images/two_year_tweet5.png" alt="Nu Shell is amazing. I can’t believe it took me this long to find it."></p>
<p>The Nushell repo has also felt a recent surge of interest. Since this time last year, the number of stars has nearly doubled!</p>
<p><img src="@source/assets/images/two_year_stars.png" alt="image of with the number of GitHub stars doubling over the last year"></p>
<p><em>Growing interest in Nushell (shown: number of GitHub stars)</em></p>
<h3 id="nushell-getting-used-for-real-things" tabindex="-1"> Nushell getting used for real things</h3>
<p>We're getting feedback from folks using Nushell about how much time Nushell saves them everyday. One report mentioned that their daily processing of files was cut by as much as 30 minutes! Saving 30 mins per day is an enormous amount, and we're happy to help.</p>
<p>Another area where Nushell is getting used is to process <a href="https://twitter.com/cocoronata" target="_blank" rel="noopener noreferrer">Covid data in Ecuador</a> (you can see <a href="https://github.com/cocoronata/ecuacovid-scripts" target="_blank" rel="noopener noreferrer">more recent scripts written all in Nushell here</a>).</p>
<h2 id="contributors" tabindex="-1"> Contributors</h2>
<p>As of this post, 280 contributors helped make Nushell what it is today. A <em>big</em> thank you to the contributors who helped us get to this point!</p>
<p>1ntEgr8, AaronC81, aborruso, acanalis, AdminXVII, aeosynth, aeshirey, agateau, ahkrr, aidanharris, alexshadley, almindor, Aloso, Amanita-muscaria, amitdev, ammkrn, amousa11, andrasio, Andy-Python-Programmer, apatrushev, arashout, ArturKovacs, autophagy, avandesa, avranju, Azgrom, bailey-layzer, baoyachi, BatmanAoD, bbkane, bndbsh, Bocom, Borimino, Br1ght0ne, BradyBromley, brightly-salty, BurNiinTRee, Byron, casidiablo, CBenoit, ccde177b5fb9b8c55078417b4c9fee, charlespierce, chhetripradeep, chrisfinazzo, ChristopherBiscardi, cjpearce, coolshaurya, cristicismas, DangerFunPants, daschl, davidmalcolm, dbofmmbt, defstryker, Delapouite, dependabot[bot], Detegr, devnought, Dietr1ch, diogomafra, dirtybit, DivineGod, djc, dmeijboom, DonnotPanic, drmason13, DrSensor, dywedir, dyxushuai, efx, elferherrera, elichai, EmNudge, eoinkelly, epost, equal-l2, est31, EverlastingBugstopper, fdncred, fhalim, filaretov, Flare576, Garfield96, gdhuper, gilesv, gillespiecd, gonatz, gorogoroumaru, GuillaumeGomez, Gymea, hampuslidin, hdhoang, he4d, hedonihilist, henriiik, HiranmayaGundu, hirschenberger, homburg, iamcodemaker, ibraheemdev, iCodeSometime, iliekturtles, ilius, incrop, ineol, itn3000, Jacobious52, jafriyie1, jakevossen5, jankeromnes, jankoprowski, janosimas, JCavallo, jdvr, jerodsanto, JesterOrNot, jgoday, jinlow, jjshanks, jntrnr, John-Goff, johnae, johnterickson, jonahsnider, JonathanArns, JonnyWalker81, jonstodle, jonstodle-webstep, JosephTLyons, just1a-person, jz448, jzaefferer, k-brk, Kelli314, klnusbaum, kloun, knottio, kornelski, kubouch, kvrhdn, lambdagolem, landaire, lesichkovm, LhKipp, lightclient, lily-mara, lincis, LittleboyHarry, LovecraftianHorror, lpil, luccasmmg, LyesSaadi, marcelocg, MarcoIeni, margguo, matsuu, mattclarke, mattyhall, max-sixty, mcbattirola, mfarberbrodsky, mhmdanas, mike-morr, miller-time, mlbright, moonrise-tk, morbatex, morrme, mvolkmann, naefl, nalpine, nalshihabi, nathom, naufraghi, nespera, neuronull, nibon7, nickgerace, nightscape, NiklasJonsson, nmandery, notryanb, oknozor, onthebridgetonowhere, orf, orientnab, oskarskog, pag4k, palashahuja, Paradiesstaub, phaunt, philip-peterson, piotrek-szczygiel, pka, pontaoski, Porges, prrao87, pulpdrew, quebin31, Qwanve, rabisg0, radekvit, ramonsnir, reaganmcf, realcundo, RedlineTriad, rezural, richardpark-msft, rimathia, ritobanrc, rjboas, rnxpyke, routrohan, RReverser, rrichardson, rtlechow, ryuichi1208, sambordo1, Samboy218, samhedin, samuelvanderwaal, sandorex, schrieveslaach, Sciencentistguy, scrabsha, sdfnz, sebastian-xyz, shaaraddalvi, sholderbach, siedentop, skelly37, smaydew, Sosthene-Guedon, soumil-07, sousajf1, Southclaws, stevenbarragan, stormasm, suzanje, svartalf, Sympatron, syndek, taiki-e, tchak, TechWatching, thegedge, therealprof, tiffany352, tim77, Tiwalun, TrevorAC99, tumdum, tupini07, tw4452852, twe4ked, twitu, u5surf, UltraWelfare, uma0317, utam0k, ve-nt, VincentWo, vladdoster, voanhduy1512, vsoch, vthriller, waldyrious, warrenseine, WatsonThink, watzon, waywardmonkeys, wcarss, wycats, x3rAx, xolve, yaahc, yahsinhuangtw, yanganto, yaymukund, Yethal, ymgyt, zkat</p>
<h2 id="lowlights" tabindex="-1"> Lowlights</h2>
<h3 id="completions" tabindex="-1"> Completions</h3>
<p>We've known for quite a long time that to have a strong shell experience means having strong completions. Shells like fish are an example of what's possible with completions, and it's an easy feature to miss if the shell you move to doesn't support them at the same level.</p>
<p>In Nushell, we hit a bit of a snag as we built out completions - we had a bug in the language. It was one of those nasty ones that makes scripts hard to debug, variables leaking from one scope to another. We knew that it'd make creating custom completions far harder.</p>
<p>We've been hard at work on a <a href="https://github.com/jntrnr/engine-q" target="_blank" rel="noopener noreferrer">rebuild of important parts of Nushell</a> for correctness that hopes to address this. Once it lands, we'll be able to turn our collective attention to standing up a full completion design that allows users to write completions in Nushell.</p>
<h3 id="forgotten-dreams" tabindex="-1"> Forgotten dreams</h3>
<p>For the last two years, we've been hoping to spend more time on making Nushell work well in other environments. Projects like our <a href="https://github.com/nushell/nu_jupyter" target="_blank" rel="noopener noreferrer">Jupyter notebook experiment</a> show a tiny piece of what might be possible, but we haven't yet been able to commit time to create a more complete implementation (or our own notebook).</p>
<h2 id="looking-ahead" tabindex="-1"> Looking ahead</h2>
<p>Over the next year, as we close the gaps in functionality to bring Nushell up to a higher level of polish as a language, shell, and data system, we'll be taking a hard look at what will become part of the 1.0 release. While there isn't a date set, yet, will be looking at the feedback from users telling us how well various features work and which should be included in Nushell's first stable release.</p>
<p>If you're interested in helping get us there, come join us in the <a href="https://discord.gg/NtAbbGn" target="_blank" rel="noopener noreferrer">discord</a> and <a href="https://github.com/nushell/nushell/" target="_blank" rel="noopener noreferrer">repo</a> and let's see just how good Nushell can be.</p>
<p><em>Cake photo from: https://depositphotos.com/stock-photos/birthday-cake-2.html</em></p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.35</title>
      <link>https://www.nushell.sh/blog/2021-08-03-nushell_0_35.html</link>
      <guid>https://www.nushell.sh/blog/2021-08-03-nushell_0_35.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.35</source>
      <description> Nushell 0.35
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.35 of Nu. This release shows off a lot of dataframe progress and lots of command polish.
</description>
      <pubDate>Tue, 03 Aug 2021 18:45:21 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-35" tabindex="-1"> Nushell 0.35</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.35 of Nu. This release shows off a lot of dataframe progress and lots of command polish.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.35 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.35.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="new-commands" tabindex="-1"> New commands</h2>
<ul>
<li><a href="https://github.com/nushell/nushell/pull/3811" target="_blank" rel="noopener noreferrer"><code>into path</code></a> (realcundo)</li>
<li><a href="https://github.com/nushell/nushell/pull/3833" target="_blank" rel="noopener noreferrer"><code>date humanize</code></a> (zkat)</li>
<li><a href="https://github.com/nushell/nushell/pull/3836" target="_blank" rel="noopener noreferrer"><code>hash sha256</code></a> (with <a href="https://github.com/nushell/nushell/pull/3841" target="_blank" rel="noopener noreferrer">additional improvements</a>) (realcundo)</li>
</ul>
<h2 id="dataframe-improvements-elferherrera" tabindex="-1"> Dataframe improvements (elferherrera)</h2>
<ul>
<li><a href="https://github.com/nushell/nushell/pull/3776" target="_blank" rel="noopener noreferrer">Improved join operation</a></li>
<li><a href="https://github.com/nushell/nushell/pull/3781" target="_blank" rel="noopener noreferrer">Faster CSV reading and encoding</a></li>
<li><a href="https://github.com/nushell/nushell/pull/3805" target="_blank" rel="noopener noreferrer">New shape command</a></li>
<li><a href="https://github.com/nushell/nushell/pull/3812" target="_blank" rel="noopener noreferrer">Remove Series and treat all dataframe structures the same</a></li>
<li><a href="https://github.com/nushell/nushell/pull/3839" target="_blank" rel="noopener noreferrer">Support for appending dataframes</a></li>
<li><a href="https://github.com/nushell/nushell/pull/3864" target="_blank" rel="noopener noreferrer">Allow dataframes to hold more kinds of data</a></li>
<li><a href="https://github.com/nushell/nushell/pull/3874" target="_blank" rel="noopener noreferrer">Simplified contains command</a></li>
<li><a href="https://github.com/nushell/nushell/pull/3875" target="_blank" rel="noopener noreferrer">Pretty printing for nested dataframes</a></li>
</ul>
<h2 id="additional-improvements" tabindex="-1"> Additional improvements</h2>
<ul>
<li>Hinting is <a href="https://github.com/nushell/nushell/pull/3780" target="_blank" rel="noopener noreferrer">now configurable</a> (fdncred)</li>
<li><a href="https://github.com/nushell/nushell/pull/3767" target="_blank" rel="noopener noreferrer">Improvements to our winget releases</a> and <a href="https://github.com/nushell/nushell/pull/3819" target="_blank" rel="noopener noreferrer">publish workflows</a> (TechWatching)</li>
<li>More commands <a href="https://github.com/nushell/nushell/pull/3794" target="_blank" rel="noopener noreferrer">got some additional cleanup</a> (sambordo1)</li>
<li>Startup times <a href="https://github.com/nushell/nushell/pull/3854" target="_blank" rel="noopener noreferrer">now have a detailed breakdown</a> (fdncred)</li>
<li>You can now <a href="https://github.com/nushell/nushell/pull/3845" target="_blank" rel="noopener noreferrer">compare durations</a> (fdncred)</li>
<li>Fixed <a href="https://github.com/nushell/nushell/pull/3804" target="_blank" rel="noopener noreferrer">docs for <code>completion_type</code></a> (dirtybit)</li>
<li>Fixed <a href="https://github.com/nushell/nushell/pull/3807" target="_blank" rel="noopener noreferrer">theme for text viewing</a> (fdncred)</li>
<li><a href="https://github.com/nushell/nushell/pull/3832" target="_blank" rel="noopener noreferrer"><code>describe</code> no longer outputs using colors</a> (fdncred)</li>
<li>String intepolation <a href="https://github.com/nushell/nushell/pull/3866" target="_blank" rel="noopener noreferrer">now handles Unicode better</a> (fdncred)</li>
<li>Fixed <a href="https://github.com/nushell/nushell/pull/3829" target="_blank" rel="noopener noreferrer">path separator in <code>pathvar</code></a> (nathom)</li>
<li><a href="https://github.com/nushell/nushell/pull/3821" target="_blank" rel="noopener noreferrer">Power operations can now be negative</a> (jafriyie1)</li>
<li>Issues now <a href="https://github.com/nushell/nushell/pull/3818" target="_blank" rel="noopener noreferrer">use GitHub forms</a> (zkat)</li>
<li>Fixed a typo <a href="https://github.com/nushell/nushell/pull/3824" target="_blank" rel="noopener noreferrer">in our github release configuration</a> (zkat)</li>
<li>Date formatting now <a href="https://github.com/nushell/nushell/pull/3834" target="_blank" rel="noopener noreferrer">uses the chrono_humanize crate</a> (zkat)</li>
<li>Updated the <a href="https://github.com/nushell/nushell/pull/3848" target="_blank" rel="noopener noreferrer">docs on implementing a command</a> (margguo)</li>
<li>Cleaned up <a href="https://github.com/nushell/nushell/pull/3853" target="_blank" rel="noopener noreferrer">some stale dependencies</a> (elferherrera)</li>
<li>Improved <a href="https://github.com/nushell/nushell/pull/3857" target="_blank" rel="noopener noreferrer">how <code>select</code> handles empty cells</a> (realcundo)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/3863" target="_blank" rel="noopener noreferrer">named block params to <code>all?</code></a> (jt)</li>
<li><a href="https://github.com/nushell/nushell/pull/3869" target="_blank" rel="noopener noreferrer">Better handling of environement shorthands</a> (lily-mara)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/3870" target="_blank" rel="noopener noreferrer">support for multi-doc yaml files</a> (realcundo)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/3878" target="_blank" rel="noopener noreferrer">a new crate to support Nu serialization more directly with serde</a> (lily-mara)</li>
</ul>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>We're hard at work at bringing more dataframe support into nushell itself, which will allow us to use it for more actions, and extend support to dataframes to existing commands.</p>
<p>We're also working on the new <a href="https://github.com/jntrnr/engine-q" target="_blank" rel="noopener noreferrer">parsing/evaluation engine</a> which is proving to be both faster and more correct than the current nushell engine. We're excited to keep evolving it and then integrating it into Nushell. This engine will also be fast enough, and correct enough, to drive completions as Nu scripts. This will allow us to add intelligent completions that work with both internal and external commands.</p>
<p>Finally, we're nearing the goal for <a href="https://github.com/jntrnr/reedline" target="_blank" rel="noopener noreferrer">reedline</a>, which is now solid enough, and complete enough, to use for daily work. We're hoping to polish it up and then experiment with moving Nushell to use it in the coming release (or two).</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.34</title>
      <link>https://www.nushell.sh/blog/2021-07-13-nushell_0_34.html</link>
      <guid>https://www.nushell.sh/blog/2021-07-13-nushell_0_34.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.34</source>
      <description> Nushell 0.34
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.34 of Nu. This release is the first to support dataframes and also includes a set of usability improvements.
</description>
      <pubDate>Tue, 13 Jul 2021 19:56:07 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-34" tabindex="-1"> Nushell 0.34</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.34 of Nu. This release is the first to support dataframes and also includes a set of usability improvements.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.34 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.34.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>If you'd like to try the experimental paging feature in this release, you can install with <code>cargo install nu --features=table-pager</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="dataframes-elferherrera" tabindex="-1"> Dataframes (elferherrera)</h2>
<p>With 0.34, we've introduced a new family of commands to work with dataframes. Dataframes are an efficient way of working with large datasets by storing data as columns and offering a set of operations over them.</p>
<p>To create a dataframe, you can use the <code>dataframe open</code> command and pass it a source file to load. This command currently supports CSV and parquet files.</p>
<div><pre><code>> let df = (dataframe open .\Data7602DescendingYearOrder.csv)
</code></pre></div><p>Once loaded, there are a variety of commands you can use to interact with the dataframe (you can get the full list with <code>dataframe --help</code>). For example, to see the first few rows of the dataframe we just loaded, we can use <code>dataframe first</code>:</p>
<div><pre><code>> $df | dataframe first

───┬──────────┬─────────┬──────┬───────────┬──────────
 # │ anzsic06 │  Area   │ year │ geo_count │ ec_count
───┼──────────┼─────────┼──────┼───────────┼──────────
 0 │ A        │ A100100 │ 2000 │        96 │      130
 1 │ A        │ A100200 │ 2000 │       198 │      110
 2 │ A        │ A100300 │ 2000 │        42 │       25
 3 │ A        │ A100400 │ 2000 │        66 │       40
 4 │ A        │ A100500 │ 2000 │        63 │       40
───┴──────────┴─────────┴──────┴───────────┴──────────
</code></pre></div><p>Where dataframes really shine is their performance.</p>
<p>For example, the above dataset is 5 columns and ~5.5 million rows of data. We're able to process group it by the year column, sum the results, and display it to the user in 557ms:</p>
<div><pre><code># process.nu
let df = (dataframe open Data7602DescendingYearOrder.csv)
let res = ($df | dataframe group-by year | dataframe aggregate sum | dataframe select geo_count)
$res
</code></pre></div><div><pre><code>> benchmark {source process.nu}

───┬───────────────────
 # │     real time
───┼───────────────────
 0 │ 557ms 658us 500ns
───┴───────────────────
</code></pre></div><p>By comparison, here's the same example in pandas:</p>
<div><pre><code>import pandas as pd

df = pd.read_csv("Data7602DescendingYearOrder.csv")
res = df.groupby("year")["geo_count"].sum()
print(res)
</code></pre></div><div><pre><code>> benchmark {python .\load.py}

───┬────────────────────────
 # │       real time
───┼────────────────────────
 0 │ 1sec 966ms 954us 800ns
───┴────────────────────────
</code></pre></div><blockquote>
<p>System Details: The benchmarks presented in this section were run using a machine with a processor Intel(R) Core(TM) i7-10710U (CPU @1.10GHz 1.61 GHz) and 16 gb of RAM.</p>
</blockquote>
<p>While these results are still early, we're excited to see what can be possible using Nushell for processing large datasets.</p>
<p>You can learn more about dataframes, including many examples and a much more in-depth explanation, by reading the new <a href="https://www.nushell.sh/book/dataframes.html" target="_blank" rel="noopener noreferrer">dataframes chapter of the Nushell book</a>.</p>
<p>Note: while all the dataframe functionality is currently grouped behind the <code>dataframe</code> top-level command, we hope to extend support for dataframes to other common Nushell commands.</p>
<h2 id="improved-multiline-support-jt" tabindex="-1"> Improved multiline support (jt)</h2>
<p>We've extended multiline expression support to more areas. Now, you can span tables over multiple lines more naturally:</p>
<div><pre><code>[
  [name, value];
  [foo, 2]
  [bar, 7]
]
</code></pre></div><p>Subexpression now also span multiple lines. Everything inside of the parentheses are treated as if they were written together:</p>
<div><pre><code>(echo foo
| str length)
</code></pre></div><p>This also gives you a way to split up commands that have many arguments over multiple lines:</p>
<div><pre><code>(echo foo
bar)
</code></pre></div><h2 id="multiple-shorthand-environment-vars-jt" tabindex="-1"> Multiple shorthand environment vars (jt)</h2>
<p>A long-time shortcoming is now fixed in 0.34. You can now pass multiple environment shorthands to the same command:</p>
<div><pre><code>> FOO=bar BAR=baz $nu.env.FOO + $nu.env.BAR
barbaz
</code></pre></div><h2 id="variable-completions-andrasio" tabindex="-1"> Variable completions (andrasio)</h2>
<p>In addition to steadily improving the completion engine, we've started adding support for completions for built-in variables.</p>
<p>You can now write <code>$nu.&lt;TAB&gt;</code> to complete into the built-in <code>$nu</code> variable, including completions for <code>$nu.env.S&lt;TAB&gt;</code> for completing into environment variables.</p>
<p>Other variables that are in scope can also have their names completed.</p>
<h2 id="new-commands" tabindex="-1"> New commands</h2>
<ul>
<li>Added the <a href="https://github.com/nushell/nushell/pull/3670" target="_blank" rel="noopener noreferrer"><code>pathvar</code> command for updating the PATH</a> (nathom)</li>
<li>Added a <a href="https://github.com/nushell/nushell/pull/3694" target="_blank" rel="noopener noreferrer"><code>paste</code> command for pasting from clipboard</a> (1ntEgr8)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/3720" target="_blank" rel="noopener noreferrer"><code>$nu.lang</code> to reflect on the current commands</a> (fdncred)</li>
</ul>
<h2 id="additional-improvements" tabindex="-1"> Additional improvements</h2>
<ul>
<li>Updated <a href="https://github.com/nushell/nushell/pull/3758" target="_blank" rel="noopener noreferrer"><code>into binary</code> to be more composable</a> (fdncred)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/3754" target="_blank" rel="noopener noreferrer">unique option to <code>uniq</code></a> (mcbattirola)</li>
<li>Removed an <a href="https://github.com/nushell/nushell/pull/3751" target="_blank" rel="noopener noreferrer">outdated README note</a> (yaymukund)</li>
<li>Added more <a href="https://github.com/nushell/nushell/pull/3750" target="_blank" rel="noopener noreferrer">comparsion coercions with <code>$nothing</code></a> (jt)</li>
<li>Updated the <a href="https://github.com/nushell/nushell/pull/3749" target="_blank" rel="noopener noreferrer"><code>version</code> command to output more info</a> (fdncred)</li>
<li>Fixed a <a href="https://github.com/nushell/nushell/pull/3745" target="_blank" rel="noopener noreferrer">broken unit test</a> (fdncred)</li>
<li>Downgraded <a href="https://github.com/nushell/nushell/pull/3740" target="_blank" rel="noopener noreferrer">crossterm to fix pager compilation</a> (kubouch)</li>
<li>Removed <a href="https://github.com/nushell/nushell/pull/3732" target="_blank" rel="noopener noreferrer">unused crate features</a> (waywardmonkeys)</li>
<li>Updated a few <a href="https://github.com/nushell/nushell/pull/3723" target="_blank" rel="noopener noreferrer">dependencies</a> and <a href="https://github.com/nushell/nushell/pull/3724" target="_blank" rel="noopener noreferrer">here</a> and <a href="https://github.com/nushell/nushell/pull/3739" target="_blank" rel="noopener noreferrer">here</a> and <a href="https://github.com/nushell/nushell/pull/3741" target="_blank" rel="noopener noreferrer">here</a> and <a href="https://github.com/nushell/nushell/pull/3757" target="_blank" rel="noopener noreferrer">here</a> (therealprof, waywardmonkeys)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/3722" target="_blank" rel="noopener noreferrer">dataframe take command</a> (elferherrera)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/3717" target="_blank" rel="noopener noreferrer">script to submit winget package during release</a> (TechWatching)</li>
<li>Aligned <a href="https://github.com/nushell/nushell/pull/3713" target="_blank" rel="noopener noreferrer">dataframe params to match other Nushell commands</a> (elferherrera)</li>
<li>Added the <a href="https://github.com/nushell/nushell/pull/3712" target="_blank" rel="noopener noreferrer">ansi osc string terminator</a> (fdncred)</li>
<li>Removed <a href="https://github.com/nushell/nushell/pull/3709" target="_blank" rel="noopener noreferrer">unused dependencies</a> and <a href="https://github.com/nushell/nushell/pull/3716" target="_blank" rel="noopener noreferrer">also</a> (waywardmonkeys, andrasio)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/3702" target="_blank" rel="noopener noreferrer">casting operations for Series data</a> (elferherrera)</li>
<li>Fixed a <a href="https://github.com/nushell/nushell/pull/3697" target="_blank" rel="noopener noreferrer">dataframe series bug with f64</a> (elferherrera)</li>
<li>Added <a href="https://github.com/nushell/nushell/pull/3696" target="_blank" rel="noopener noreferrer">all-trim option to <code>str trim</code></a> (palashahuja)</li>
<li>Ported more commands to engine-p <a href="https://github.com/nushell/nushell/pull/3690" target="_blank" rel="noopener noreferrer">1</a> and <a href="https://github.com/nushell/nushell/pull/3753" target="_blank" rel="noopener noreferrer">2</a> (efx)</li>
<li>Added support for <a href="https://github.com/nushell/nushell/pull/3688" target="_blank" rel="noopener noreferrer">arbitrarily nested subcommands</a> (jt)</li>
<li>Added support for <a href="https://github.com/nushell/nushell/pull/3686" target="_blank" rel="noopener noreferrer">string interpolation when calling externals</a> (voanhduy1512)</li>
<li>Made <a href="https://github.com/nushell/nushell/pull/3684" target="_blank" rel="noopener noreferrer">URL docs more consistent</a> (efx)</li>
<li>Speed up <a href="https://github.com/nushell/nushell/pull/3683" target="_blank" rel="noopener noreferrer">dataframe loading</a> (elferherrera)</li>
<li>Improved <a href="https://github.com/nushell/nushell/pull/3681" target="_blank" rel="noopener noreferrer">parse errors for <code>def</code></a> (jt)</li>
<li>Updated textview to <a href="https://github.com/nushell/nushell/pull/3680" target="_blank" rel="noopener noreferrer">always read its input from the stream</a> (jt)</li>
<li>Dataframe aggregation uses <a href="https://github.com/nushell/nushell/pull/3678" target="_blank" rel="noopener noreferrer">simpler column names</a> (elferherrera)</li>
<li>Add support for more <a href="https://github.com/nushell/nushell/pull/3675" target="_blank" rel="noopener noreferrer">filesize to filesize math</a> (fdncred)</li>
<li>Updated the Nu API surface to <a href="https://github.com/nushell/nushell/pull/3673" target="_blank" rel="noopener noreferrer">expose more useful functionality</a> (stormasm)</li>
<li>Fixed a <a href="https://github.com/nushell/nushell/pull/3669" target="_blank" rel="noopener noreferrer">panic during math with large durations</a> (luccasmmg)</li>
</ul>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>Work on <a href="https://github.com/jntrnr/reedline" target="_blank" rel="noopener noreferrer">reedline</a> has steadily grown in the background, and is now nearing the time where we will explore integrating it into Nushell as Nushell's line editor.</p>
<p>We're also working on a number of <a href="https://github.com/jntrnr/engine-q" target="_blank" rel="noopener noreferrer">parser and engine improvements</a> which we hope will make their way into future version of Nushell.</p>
<p>Dataframe support continues to grow, and we're continuing to collaborate with projects that this builds on to ensure we are using the best techniques possible. There's a lot of potential here not only in terms of using dataframes, but where the Apache Arrow support might allow us to grow additional functionality in the future.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.33</title>
      <link>https://www.nushell.sh/blog/2021-06-22-nushell_0_33.html</link>
      <guid>https://www.nushell.sh/blog/2021-06-22-nushell_0_33.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.33</source>
      <description> Nushell 0.33
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.33 of Nu. This release includes improved completions, support for pipeline variables, syntax theming and more.
</description>
      <pubDate>Tue, 22 Jun 2021 19:16:42 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-33" tabindex="-1"> Nushell 0.33</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.33 of Nu. This release includes improved completions, support for pipeline variables, syntax theming and more.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.33 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.33.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>If you'd like to try the experimental paging feature in this release, you can install with <code>cargo install nu --features=table-pager</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="improved-completions-fdncred-niklasjonsson-kubouch-andrasio-jt" tabindex="-1"> Improved completions (fdncred, NiklasJonsson, kubouch, andrasio, jt)</h2>
<p>We've begun the completion improvements that have been planned for some time. In this release, we've added completions for <a href="https://github.com/nushell/nushell/pull/3594" target="_blank" rel="noopener noreferrer">alias definitions</a>, <a href="https://github.com/nushell/nushell/pull/3589" target="_blank" rel="noopener noreferrer">source imports</a>, completions for <a href="https://github.com/nushell/nushell/pull/3577" target="_blank" rel="noopener noreferrer">quoted paths</a>, completions while <a href="https://github.com/nushell/nushell/pull/3575" target="_blank" rel="noopener noreferrer">inside of a pipeline</a>, completions in <a href="https://github.com/nushell/nushell/pull/3564" target="_blank" rel="noopener noreferrer">incomplete expressions</a>, <a href="https://github.com/nushell/nushell/pull/3571" target="_blank" rel="noopener noreferrer">subcommand completions</a> and more.</p>
<p>On Windows, we've <a href="https://github.com/nushell/nushell/pull/3665" target="_blank" rel="noopener noreferrer">sped up path completions</a>. We've also reworked path handling, which should help make <a href="https://github.com/nushell/nushell/pull/3653" target="_blank" rel="noopener noreferrer">path completions in Windows more consistent</a>, including handling of <code>~</code>.</p>
<p>Behind the scenes, we've also refactored completions into their own crate, so that we can more easily grow the areas where completions are supported.</p>
<h2 id="pipeline-vars-jt" tabindex="-1"> Pipeline vars (jt)</h2>
<p>Sometimes, when you're working on a pipeline, you want to refer to values coming in using an xargs style. With 0.33, we've introduced a new built-in variable called <code>$in</code>. The <code>$in</code> variable will collect the pipeline into a value for you, allowing you to access the whole stream as a parameter.</p>
<div><pre><code><span>></span> <span>echo</span> <span>1</span> <span>2</span> <span>3</span> <span>|</span> <span>$in</span>.1 * <span>$in</span>.2
<span>6</span>
</code></pre></div><h2 id="new-distributions-itsme-alan-zmedico" tabindex="-1"> New distributions (itsme-alan, zmedico)</h2>
<p>You can now install Nushell from the <a href="https://github.com/microsoft/winget-pkgs/pull/17428" target="_blank" rel="noopener noreferrer">winget repo</a> and from <a href="https://packages.gentoo.org/packages/app-shells/nushell" target="_blank" rel="noopener noreferrer">gentoo</a>.</p>
<h2 id="more-natural-pipeline-output-jt" tabindex="-1"> More natural pipeline output (jt)</h2>
<p>In this release, we've also relaxed some of the strictness in when output happens to always be at the end of a pipeline. In previous versions of Nushell, it was common for people to try an example like <code>echo &quot;hello &quot;; echo &quot;world&quot;</code> only to be confused why they only saw <code>world</code> in the output. Now, we treat <code>;</code> like carriage return, so that pipelines more naturally output their results just as they do at the end of lines.</p>
<p>You can add back in the ignore ability using the new <code>ignore</code> command, which will ignore any stdout or data output from the previous command in the pipeline. For example, <code>ls | ignore</code>.</p>
<h2 id="syntax-highlighting-themes-fdncred" tabindex="-1"> Syntax highlighting themes (fdncred)</h2>
<p><img src="@source/assets/images/0_32_themes.png" alt="image of syntax highlighting themes in Nushell"></p>
<p><em>Nu, with configurable colors</em></p>
<p>You can now configure the colors used in syntax highlighting. For the currently supported token types and examples, check out <a href="https://github.com/nushell/nushell/pull/3606" target="_blank" rel="noopener noreferrer">the original PR</a>.</p>
<h2 id="new-commands" tabindex="-1"> New commands</h2>
<ul>
<li>nathom added <a href="https://github.com/nushell/nushell/pull/3629" target="_blank" rel="noopener noreferrer"><code>unlet_env</code> to remove environment variables from the current scope</a></li>
<li>jt added the <a href="https://github.com/nushell/nushell/pull/3643" target="_blank" rel="noopener noreferrer"><code>ignore</code> command to ignore pipeline output</a></li>
<li>fdncred added <a href="https://github.com/nushell/nushell/pull/3570" target="_blank" rel="noopener noreferrer"><code>ansi gradient</code> command</a></li>
</ul>
<h2 id="additional-improvements" tabindex="-1"> Additional improvements</h2>
<ul>
<li>fdncred added <a href="https://github.com/nushell/nushell/pull/3660" target="_blank" rel="noopener noreferrer">path and environment path separators to <code>char</code></a> to allow for creating more portable scripts, fixed an issue with <a href="https://github.com/nushell/nushell/pull/3634" target="_blank" rel="noopener noreferrer">error colors</a>, added <a href="https://github.com/nushell/nushell/pull/3601" target="_blank" rel="noopener noreferrer">single and double quote to char</a>, <a href="https://github.com/nushell/nushell/pull/3548" target="_blank" rel="noopener noreferrer">version now lists plugins</a></li>
<li>efx updated <a href="https://github.com/nushell/nushell/pull/3649" target="_blank" rel="noopener noreferrer">commands to engine-p style</a></li>
<li>chrisfinazzo <a href="https://github.com/nushell/nushell/pull/3635" target="_blank" rel="noopener noreferrer">fixed some of our helper scripts</a></li>
<li>andrasio, jt <a href="https://github.com/nushell/nushell/pull/3632" target="_blank" rel="noopener noreferrer">removed the clap dependency, so nushell parses its own parameters</a></li>
<li>vladdoster landed <a href="https://github.com/nushell/nushell/pull/3630" target="_blank" rel="noopener noreferrer">some doc improvements</a></li>
<li>NiklasJonsson improved <a href="https://github.com/nushell/nushell/pull/3628" target="_blank" rel="noopener noreferrer">nu doc comments</a></li>
<li>reaganmcf added <a href="https://github.com/nushell/nushell/pull/3618" target="_blank" rel="noopener noreferrer">an optional plugin for handling mp4 metadata</a> and <a href="https://github.com/nushell/nushell/pull/3561" target="_blank" rel="noopener noreferrer">bumped sysinfo</a></li>
<li>voanhduy1512 added support for <a href="https://github.com/nushell/nushell/pull/3611" target="_blank" rel="noopener noreferrer">invoking external commands via string interpolation</a></li>
<li>Garfield96 added <a href="https://github.com/nushell/nushell/pull/3600" target="_blank" rel="noopener noreferrer">--sheets for xlsx/ods</a>, <a href="https://github.com/nushell/nushell/pull/3529" target="_blank" rel="noopener noreferrer">--tables for <code>from sqlite</code></a>, and <a href="https://github.com/nushell/nushell/pull/3522" target="_blank" rel="noopener noreferrer">fixed a panic with giving empty tables to <code>to sqlite</code></a></li>
<li>kubouch improved <a href="https://github.com/nushell/nushell/pull/3588" target="_blank" rel="noopener noreferrer">errors and updated commands to engine-p</a>, improved some <a href="https://github.com/nushell/nushell/pull/3580" target="_blank" rel="noopener noreferrer">internal handling of <code>def</code></a>, <a href="https://github.com/nushell/nushell/pull/3588" target="_blank" rel="noopener noreferrer">clarified the <code>exec</code> help message</a></li>
<li>sholderbach improved <a href="https://github.com/nushell/nushell/pull/3573" target="_blank" rel="noopener noreferrer"><code>where</code> docs</a></li>
<li>jt added <a href="https://github.com/nushell/nushell/pull/3562" target="_blank" rel="noopener noreferrer">parsing for hex, binary, and octal numbers</a></li>
<li>pka improved <a href="https://github.com/nushell/nushell/pull/3560" target="_blank" rel="noopener noreferrer">territory in locale support for byte formatting</a></li>
<li>ahkrr fixed handling of <a href="https://github.com/nushell/nushell/pull/3524" target="_blank" rel="noopener noreferrer"># in filenames</a></li>
<li>jt, LovecraftianHorror, apatrushev, sholderbach, elferherrera, inet56 added fixes to the website and docs</li>
<li>fdncred, efx, jt, and andrasio all added scripts and fixes to the scripts repo</li>
</ul>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>We're continuing to improve our dataframe support, and hope to be rolling it out a part of the default commands in the next release. Elfherrera has been <a href="https://github.com/nushell/nushell/pull/3608" target="_blank" rel="noopener noreferrer">hard at work improving the dataframe support to get it ready</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.32</title>
      <link>https://www.nushell.sh/blog/2021-06-01-nushell_0_32.html</link>
      <guid>https://www.nushell.sh/blog/2021-06-01-nushell_0_32.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.32</source>
      <description> Nushell 0.32
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.32 of Nu. This release contains a large amount of usability improvements.
</description>
      <pubDate>Tue, 01 Jun 2021 01:11:18 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-32" tabindex="-1"> Nushell 0.32</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.32 of Nu. This release contains a large amount of usability improvements.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.32 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.32.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>If you'd like to try the experimental paging feature in this release, you can install with <code>cargo install nu --features=table-pager</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<p>There are a <em>lot</em> of new changes in this release of Nu. You can check these out by in this blog post, or, if you like, there is also an accompanying <a href="https://youtu.be/AqYxhJKblvY" target="_blank" rel="noopener noreferrer">YouTube video of 0.32 features</a> as well as updated <a href="https://github.com/nushell/nu_scripts" target="_blank" rel="noopener noreferrer">Nushell samples</a>.</p>
<h2 id="new-expression-syntax-jt" tabindex="-1"> New expression syntax (jt)</h2>
<p>We've simplified our expression/subexpression logic to make it much more predictable and universal. The parser will now automatically handle by command calls and expressions in the same way, so that you don't have to remember to use <code>=</code> to switch from one mode to the next.</p>
<p>Before 0.32:</p>
<div><pre><code><span>></span> <span>=</span> <span>10</span> + <span>3</span>
<span>13</span>
</code></pre></div><p>With 0.32:</p>
<div><pre><code><span>></span> <span>10</span> + <span>3</span>
<span>13</span>
</code></pre></div><p>You can also use any value as an expression, including variables or strings:</p>
<div><pre><code><span>></span> <span>"hello world"</span>
hello world
</code></pre></div><p>Subexpressions also follow a similar simplification. We've removed the previous <code>$()</code> style, replacing it with <code>()</code>. This allows you to put subexpressions anywhere that you want.</p>
<div><pre><code><span>></span> <span>10</span> * <span>(</span><span>3</span> + <span>2</span><span>)</span>
<span>50</span>
</code></pre></div><div><pre><code><span>></span> <span>echo</span> <span>((</span>ls <span>|</span> length<span>)</span> / <span>2</span><span>)</span>
<span>7</span>
</code></pre></div><p>This allows parens to mean &quot;do this first&quot; in both math expression and command calls.</p>
<h2 id="subexpressions-and-column-paths-jt" tabindex="-1"> Subexpressions and column paths (jt)</h2>
<p>The new subexpressions can also use &quot;column paths&quot;, or paths that start from the current value and travel to a subset of the structured data inside.</p>
<p>For example, you could combine column paths with some subtraction to find when you last booted your system:</p>
<div><pre><code><span>></span> <span>(</span>date now<span>)</span> - <span>(</span>sys<span>)</span>.host.uptime
<span>2021</span>-05-31 09:00:24.124736365 +12:00
</code></pre></div><h2 id="new-string-interpolation-jt" tabindex="-1"> New string interpolation (jt)</h2>
<p>We've also updated string interpolation to match the expression/subexpression simplification mentioned above. The same &quot;parens mean do this first&quot; pattern applies:</p>
<div><pre><code><span>></span> $<span>"the result is (3 + 2)"</span>
the result is <span>5</span>
</code></pre></div><p>For interpolation that uses column paths, wrap the entire column path in a pair of parens:</p>
<div><pre><code><span>></span> $<span>"uptime is (sys).host.uptime"</span>
<span>uptime</span> is <span>[</span>row <span>host</span> cpu mem temp<span>]</span>.host.uptime

<span>></span> $<span>"uptime is ((sys).host.uptime)"</span>
<span>uptime</span> is 1day 19hr 57min 7sec
</code></pre></div><p>As part of this change, we removed the previous backtick string interpolation form.</p>
<h2 id="environment-loading-lily-mara" tabindex="-1"> Environment loading (lily-mara)</h2>
<p>In Nushell, we've worked hard to limit the amount of mutation that will happen in the system. This helps developers focus on the task at hand, and not have to think about non-local effects from the code they're running.</p>
<p>At the same time, we've also wanted to support virtual environment systems like <code>virtualenv</code>, <code>conda</code>, and others. Traditionally these systems updated the global environment from inside of their activate/deactivate commands.</p>
<p>With 0.32, we feel like we've managed to come up with a solution that meets both the Nushell philosophy of limiting mutation while also giving the freedom to port virtual environment scripts to Nushell.</p>
<p>We call it &quot;environment loading&quot;. Here, rather than having commands mutate the global environment, they instead return a table of changes they'd like to apply to the environment. This table can be then loaded into the current scope, effectively separating the &quot;what&quot; of the update from the &quot;when&quot;.</p>
<p>Let's try this by creating a table of three new environment variables we'll load:</p>
<div><pre><code>def activate <span>[</span><span>]</span> <span>{</span>
  <span>[</span><span>[</span>name, value<span>]</span><span>;</span> <span>[</span>FOO, BAR<span>]</span> <span>[</span>DEBUG, TRUE<span>]</span> <span>[</span>CURRENTENV, NUSHELL<span>]</span><span>]</span>
<span>}</span>

load-env <span>(</span>activate<span>)</span>
<span>echo</span> <span>$nu</span>.env.FOO
</code></pre></div><p>The changes to the environment are still scoped to the block you're inside of. In the example above, because we're at the top level, we can safely shadow the previous environment values.</p>
<h2 id="locale-improvements-fdncred" tabindex="-1"> Locale improvements (fdncred)</h2>
<p>When you have <code>filesize_format = &quot;B&quot;</code> set in your config.toml file you should be able to see the thousands separators based on your locale. i.e. some locales use <code>,</code> other locales use <code>.</code> and i'm not sure if there are others.</p>
<p>This is with the <code>de_DE</code> locale on linux: (note the number separators)
<img src="https://user-images.githubusercontent.com/343840/119736601-93ff4b00-be43-11eb-9f17-0d9303e89cd6.png" alt="image"></p>
<p>This is with <code>en-US</code> on windows:
<img src="https://user-images.githubusercontent.com/343840/119736671-b2fddd00-be43-11eb-91c0-512cad551d5d.png" alt="image"></p>
<h2 id="better-line-editing-support-schrieveslaach-fdncred" tabindex="-1"> Better line editing support (schrieveslaach, fdncred)</h2>
<h3 id="partial-completions" tabindex="-1"> Partial completions</h3>
<p>With 0.32, you can use ctrl+right arrow to do a partial completion from a completion hint.</p>
<h3 id="delete-word" tabindex="-1"> Delete word</h3>
<p>You can also use alt+backspace to delete whole words.</p>
<h3 id="and-more" tabindex="-1"> And more</h3>
<p>For a full list of updated line editing capabilities, check out the update <a href="https://github.com/nushell/nushell/blob/main/docs/sample_config/keybindings.yml" target="_blank" rel="noopener noreferrer">sample keybinding file</a>.</p>
<h2 id="explicit-block-parameters-jt" tabindex="-1"> Explicit block parameters (jt)</h2>
<p>You can now name block parameters. You can use this to help make working with blocks easier to read.</p>
<div><pre><code><span>></span> <span>ls</span> <span>|</span> each <span>{</span> <span>|</span>row<span>|</span> <span>echo</span> <span>$row</span>.name <span>}</span>
</code></pre></div><h2 id="do-supports-passing-arguments-stepnivik" tabindex="-1"> <code>do</code> supports passing arguments (stepnivik)</h2>
<p>You can now pass arguments to give the running block as part of a <code>do</code> call:</p>
<div><pre><code><span>></span> <span>do</span> <span>{</span> <span>|</span>x<span>|</span> <span>$x</span> + <span>100</span><span>}</span> <span>55</span>
<span>155</span>
</code></pre></div><h2 id="new-for-in-command-jt" tabindex="-1"> New <code>for..in</code> command (jt)</h2>
<p>With the new <code>for..in</code> command, you can write more natural iterating loops:</p>
<div><pre><code><span>></span> <span>for</span> <span>$x</span> <span>in</span> <span>1</span><span>..</span><span>3</span> <span>{</span> <span>echo</span> <span>(</span><span>$x</span> + <span>10</span><span>)</span> <span>}</span>
───┬────
 <span>0</span> │ <span>11</span>
 <span>1</span> │ <span>12</span>
 <span>2</span> │ <span>13</span>
───┴────
</code></pre></div><h2 id="flags-can-now-use-equals-andrasio" tabindex="-1"> Flags can now use equals (andrasio)</h2>
<p>You can now use <code>=</code> between a flag and its value.</p>
<p>For example, in addition to:</p>
<div><pre><code><span>></span> <span>seq</span> <span>--separator</span> <span>':'</span> <span>1</span> <span>10</span>
<span>1</span>:2:3:4:5:6:7:8:9:10
</code></pre></div><p>You can also write:</p>
<div><pre><code><span>></span> <span>seq</span> <span>--separator</span><span>=</span><span>':'</span> <span>1</span> <span>10</span>
<span>1</span>:2:3:4:5:6:7:8:9:10
</code></pre></div><h2 id="other-improvements" tabindex="-1"> Other improvements</h2>
<h3 id="simple-string-concatenation-jt" tabindex="-1"> Simple string concatenation (jt)</h3>
<p>You can now create a new string by concatenating two strings <code>&quot;hello &quot; + &quot;world&quot;</code>.</p>
<h3 id="path-relative-to-kubouch" tabindex="-1"> Path relative-to (kubouch)</h3>
<p>Implements path relative-to subcommand. It converts the input path as a relative to the argument path, like this:</p>
<div><pre><code><span>></span> <span>'eggs/bacon/sausage/spam'</span> <span>|</span> path relative-to <span>'eggs/bacon/sausage'</span>
spam
</code></pre></div><p>There are also additional <a href="https://github.com/nushell/nushell/pull/3441" target="_blank" rel="noopener noreferrer"><code>path</code>-related fixes</a>.</p>
<h3 id="negative-indexing-for-range-alexshadley" tabindex="-1"> Negative indexing for range (alexshadley)</h3>
<p>You can now pass negative ranges to the <code>range</code> command, and it will work from the back of the input.</p>
<div><pre><code>> echo [1 2 3 4 5] | range (-3..)
</code></pre></div><p>Will return <code>[3, 4, 5]</code>.</p>
<h3 id="default-integer-is-now-signed-64-bit-jt" tabindex="-1"> Default integer is now signed 64-bit (jt)</h3>
<p>In 0.32, adds a new primitive data type for i64 and makes it the default integer type.</p>
<h3 id="improved-filename-support-ahkrr-fdncred" tabindex="-1"> Improved filename support (ahkrr, fdncred)</h3>
<p>Filename <a href="https://github.com/nushell/nushell/pull/3524" target="_blank" rel="noopener noreferrer">quoting for #</a>. Pipes are <a href="https://github.com/nushell/nushell/pull/3489" target="_blank" rel="noopener noreferrer">also now escaped</a></p>
<h3 id="sqlite-improvements-garfield96" tabindex="-1"> sqlite improvements (Garfield96)</h3>
<p>A panic in <a href="https://github.com/nushell/nushell/pull/3522" target="_blank" rel="noopener noreferrer">sqlite support has been fixed</a> and the support rusqlite crate <a href="https://github.com/nushell/nushell/pull/3523" target="_blank" rel="noopener noreferrer">has been updated</a>.</p>
<h3 id="seq-is-now-more-nu-like-fdncred" tabindex="-1"> <code>seq</code> is now more nu-like (fdncred)</h3>
<p>The <code>seq</code> command is now more nushell friendly by returning numbers when it can and strings when it must. This will definitely break some scripts.</p>
<p><img src="https://user-images.githubusercontent.com/343840/117849029-83e34b00-b249-11eb-8ecf-ec026ea468f7.png" alt="image"></p>
<h3 id="case-insensitive-completions-are-now-the-default-on-windows-sympatron" tabindex="-1"> Case-insensitive completions are now the default on Windows (Sympatron)</h3>
<p>Since Windows filenames are case-insensitive, This changes to case-insensitive completion matching by default. All other platforms still use case-sensitive matching by default.</p>
<h3 id="porting-commands-to-the-new-engine-efx-lhkipp-elferherrera" tabindex="-1"> Porting commands to the new engine (efx, LhKipp, elferherrera)</h3>
<p>More commands have been updated to use the new engine-p engine.</p>
<h3 id="char-now-has-more-characters-fdncred-kubouch" tabindex="-1"> <code>char</code> now has more characters (fdncred, kubouch)</h3>
<p>The <code>char</code> command now supports an <a href="https://github.com/nushell/nushell/pull/3457" target="_blank" rel="noopener noreferrer">additional set of characters</a>. It also supports the path separator character.</p>
<p>You can use <code>char --list</code> to see the full list of available character and ansi values.</p>
<h3 id="protect-against-bad-config-more-defensively-fdncred" tabindex="-1"> Protect against bad config more defensively (fdncred)</h3>
<p>Nushell is now more resilient if it encounters <a href="https://github.com/nushell/nushell/pull/3510" target="_blank" rel="noopener noreferrer">a bad config file</a>.</p>
<h3 id="better-glob-support-for-rm-lily-mara" tabindex="-1"> Better glob support for <code>rm</code> (lily-mara)</h3>
<p>The <code>*</code> wildcard should not attempt to delete files with a leading dot unless the more explicit <code>.*</code> is used. <code>rm *</code> should also not attempt to delete the current directory or its parent directory (. and ..), either. With this release, these should now be followed.</p>
<h1 id="breaking-changes" tabindex="-1"> Breaking changes</h1>
<ul>
<li>The previous math mode command <code>=</code> has been replaced by a smarter parser that can autodetect math mode based on the first token. Math mode calls like <code>= 10 / 2</code> are now simply <code>10 / 2</code>.</li>
<li>Invocations of the style <code>$()</code> have now been replaced by <code>()</code> subexpressions. <code>$(= 2 + 3)</code> is now <code>(2 + 3)</code></li>
<li>String interpolation of the style:</li>
</ul>
<div><pre><code><span><span>`</span>the result is <span>{</span><span>{</span><span>=</span> <span>1</span> + <span>2</span><span>}</span><span>}</span><span>`</span></span>
</code></pre></div><p>Are now replaced with:</p>
<div><pre><code>$<span>"the result is (1 + 2)"</span>
</code></pre></div><ul>
<li><code>seq</code> will now return numbers when possible</li>
<li>The default integer is now signed 64-bit integer and not big integers.</li>
<li>The <code>unit</code> type has now been split into <code>filesize</code> and <code>duration</code> for better utility.</li>
</ul>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>Nushell 0.32 is the first version of Nushell that begins to show what the 1.0 Nushell language will feel like. The easier, and more uniform, expression and subexpression syntax will let us continue to evolve towards a language that's both easier to read and easier to write.</p>
<p>There are some long-standing issues in the engine that are preventing improved completions, and we'd like to address these issues and begin work on smarter completions.</p>
<p>Elferherrera has also been hard at work on a dataframe implementation that we're exploring for inclusion into Nushell. You can try this out by compiling with the <code>dataframe</code> feature. If you check it out, let us know how it goes.</p>
]]></content:encoded>
      <enclosure url="https://user-images.githubusercontent.com/343840/119736601-93ff4b00-be43-11eb-9f17-0d9303e89cd6.png" type="image/png"/>
    </item>
    <item>
      <title>Nushell 0.31</title>
      <link>https://www.nushell.sh/blog/2021-05-11-nushell_0_31.html</link>
      <guid>https://www.nushell.sh/blog/2021-05-11-nushell_0_31.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.31</source>
      <description> Nushell 0.31
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.31 of Nu. This release includes continued polish of the engine and commands.
</description>
      <pubDate>Tue, 11 May 2021 19:51:48 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-31" tabindex="-1"> Nushell 0.31</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.31 of Nu. This release includes continued polish of the engine and commands.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.31 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.31.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>If you'd like to try the experimental paging feature in this release, you can install with <code>cargo install nu --features=table-pager</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<p>This release is largely around polish. We've continued to improve Nushell's engine to work in the more streamlined style, improved the performance of commands like <code>ps</code> and the appearance of commands like <code>binaryview</code>.</p>
<h2 id="new-commands-fdncred" tabindex="-1"> New commands (fdncred)</h2>
<ul>
<li><a href="https://github.com/nushell/nushell/issues/3403" target="_blank" rel="noopener noreferrer"><code>into string</code></a> to convert values to strings</li>
<li><a href="https://github.com/nushell/nushell/issues/3370" target="_blank" rel="noopener noreferrer"><code>into binary</code></a> to convert values to binary</li>
</ul>
<h2 id="improvements" tabindex="-1"> Improvements</h2>
<h3 id="nushell" tabindex="-1"> Nushell</h3>
<ul>
<li>natemara fixed <a href="https://github.com/nushell/nushell/pull/3407" target="_blank" rel="noopener noreferrer">a slowness in the <code>ps</code> command</a></li>
<li>elferherrera, kubouch, stormasm, LhKipp ported commands to the new engine-p style</li>
<li>fdncred improved <a href="https://github.com/nushell/nushell/issues/3370" target="_blank" rel="noopener noreferrer">binaryview</a>, <a href="https://github.com/nushell/nushell/issues/3375" target="_blank" rel="noopener noreferrer">added check for endian-ness, added a bytes and skip</a>, <a href="https://github.com/nushell/nushell/issues/3374" target="_blank" rel="noopener noreferrer">added ability to change &quot;#&quot; color using header_color</a>, <a href="https://github.com/nushell/nushell/issues/3367" target="_blank" rel="noopener noreferrer">tweaked the error handling to show specific errors</a>, <a href="https://github.com/nushell/nushell/issues/3366" target="_blank" rel="noopener noreferrer">updated to a quicker Levenshtein implementation</a>, and <a href="https://github.com/nushell/nushell/issues/3351" target="_blank" rel="noopener noreferrer">allowed start to handle urls</a></li>
<li>kubouch <a href="https://github.com/nushell/nushell/issues/3359" target="_blank" rel="noopener noreferrer">fixed table-pager feature compilation</a></li>
<li>Azgrom created a <a href="https://github.com/nushell/nushell/issues/3388" target="_blank" rel="noopener noreferrer">features cargo installer wrapper</a></li>
<li>jgoday added <a href="https://github.com/nushell/nushell/issues/3387" target="_blank" rel="noopener noreferrer">ignore-case and duplicated options to <code>uniq</code> command </a>, and fixed a <a href="https://github.com/nushell/nushell/issues/3354" target="_blank" rel="noopener noreferrer">reduce --numbered bug</a></li>
<li>ammkrn fixed a panic in the <a href="https://github.com/nushell/nushell/issues/3382" target="_blank" rel="noopener noreferrer">rustyline helper</a></li>
<li>Sciencentistguy fixed an <a href="https://github.com/nushell/nushell/issues/3358" target="_blank" rel="noopener noreferrer">array index out of bounds error in nu_protocol::value::levenshtein_distance()</a></li>
<li>ccde177b5fb9b8c55078417b4c9fee removed <a href="https://github.com/nushell/nushell/issues/3349" target="_blank" rel="noopener noreferrer">ichwh</a></li>
<li>LhKipp fixed an issue <a href="https://github.com/nushell/nushell/issues/3344" target="_blank" rel="noopener noreferrer">in nu-env if <code>cd</code> with shortcuts</a></li>
</ul>
<h3 id="extension" tabindex="-1"> Extension</h3>
<ul>
<li>fdncred fixed <a href="https://github.com/nushell/vscode-nushell-lang/issues/32" target="_blank" rel="noopener noreferrer">a bug in the syntax highlighting</a></li>
</ul>
<h3 id="documentation" tabindex="-1"> Documentation</h3>
<ul>
<li>nalpine fixed <a href="https://github.com/nushell/nushell.github.io/issues/126" target="_blank" rel="noopener noreferrer">dead links</a></li>
<li>ChristopherBiscardi updated <a href="https://github.com/nushell/nushell.github.io/issues/125" target="_blank" rel="noopener noreferrer">starship prompt integration</a></li>
<li>ammkrn updated <a href="https://github.com/nushell/nushell.github.io/issues/123" target="_blank" rel="noopener noreferrer">ls -f -&gt; ls -la</a></li>
</ul>
<h3 id="nu-scripts" tabindex="-1"> Nu Scripts</h3>
<ul>
<li>fdncred created <a href="https://github.com/nushell/nu_scripts/issues/48" target="_blank" rel="noopener noreferrer">table grouping experiment, update twin to support single user per row</a>, <a href="https://github.com/nushell/nu_scripts/issues/46" target="_blank" rel="noopener noreferrer">twin weeknum guess</a>, and a <a href="https://github.com/nushell/nu_scripts/issues/44" target="_blank" rel="noopener noreferrer">prototype of TWiN automation script</a></li>
<li>efx added <a href="https://github.com/nushell/nu_scripts/issues/47" target="_blank" rel="noopener noreferrer">a one liner to parse aws s3 ls output</a></li>
<li>jonathandturner fixed <a href="https://github.com/nushell/nu_scripts/issues/45" target="_blank" rel="noopener noreferrer">TWiN range</a></li>
</ul>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>Coming soon after the 0.31 release, we'll be landing <a href="https://github.com/nushell/nushell/pull/3389" target="_blank" rel="noopener noreferrer">some improvements</a> to Nushell's syntax. These fixes will be breaking changes, but they're for a good reason. The simplification of the syntax will make Nushell both more consistent and more approachable for new users and experienced users alike.</p>
<p>We're also continuing to improve the command implementations. If you'd like to help, you can join in by <a href="https://github.com/nushell/nushell/issues/3390" target="_blank" rel="noopener noreferrer">signing up here</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.30</title>
      <link>https://www.nushell.sh/blog/2021-04-20-nushell_0_30.html</link>
      <guid>https://www.nushell.sh/blog/2021-04-20-nushell_0_30.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.30</source>
      <description> Nushell 0.30
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.30 of Nu. This release adds big improvements to performance and simplicity of the engine.
</description>
      <pubDate>Wed, 21 Apr 2021 04:50:52 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-30" tabindex="-1"> Nushell 0.30</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.30 of Nu. This release adds big improvements to performance and simplicity of the engine.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.30 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.30.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>If you'd like to try the experimental paging feature in this release, you can install with <code>cargo install nu --features=table-pager</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="performance-improvements-jonathandturner" tabindex="-1"> Performance improvements (jonathandturner)</h2>
<p><img src="@source/assets/images/0_30_0_speed.png" alt="image of the 0.30 release being 8-20 times faster than 0.29"></p>
<p><em>Nu, now noticeably faster</em></p>
<p>The 0.30 release is the first to include the engine-p experimental approaches that we mentioned in the last release. These changes streamline the engine, moving it from <a href="https://github.com/nushell/nushell/pull/3270" target="_blank" rel="noopener noreferrer">async streams to iterators</a>, <a href="https://github.com/nushell/nushell/pull/3281" target="_blank" rel="noopener noreferrer">simplifying how commands handle their arguments</a>, and how <a href="https://github.com/nushell/nushell/pull/3304" target="_blank" rel="noopener noreferrer">outputs are passed from one command to the next</a>.</p>
<p>The end result is an engine that is both simpler and much faster. In the above example we run two different benchmarks. The first is a run of <a href="https://github.com/nushell/nu_scripts/blob/main/coloring/gradient.nu" target="_blank" rel="noopener noreferrer">this script</a> in the Nushell script repo. The second is a tight processing loop over many 10 million small records: <code>echo 1..10000000 | prepend 777 | append 555 | where $it &gt; 7 | length</code>.</p>
<p>Though the performance numbers are still early, they're extremely promising.</p>
<h2 id="new-built-in-variable-scope-stevenbarragan-fdncred" tabindex="-1"> New built-in variable <code>$scope</code> (stevenbarragan, fdncred)</h2>
<p>We're experimenting with a new built-in variable called <code>$scope</code>. This gives you access to definitions in scope, including variables.</p>
<h2 id="new-commands" tabindex="-1"> New Commands</h2>
<ul>
<li><a href="https://github.com/nushell/nushell/pull/3239" target="_blank" rel="noopener noreferrer"><code>math sqrt</code></a> (luccasmmg)</li>
<li><a href="https://github.com/nushell/nushell/pull/3253" target="_blank" rel="noopener noreferrer"><code>any?</code> and <code>all?</code></a> (andrasio)</li>
<li><a href="https://github.com/nushell/nushell/pull/3256" target="_blank" rel="noopener noreferrer"><code>path parse</code>, <code>path join</code>, and <code>path split</code></a> (kubouch)</li>
<li><a href="https://github.com/nushell/nushell/pull/3279" target="_blank" rel="noopener noreferrer"><code>into int</code></a> (efx)</li>
<li><a href="https://github.com/nushell/nushell/pull/3327" target="_blank" rel="noopener noreferrer"><code>query json</code></a> (fdncred). This is a new experimental query function as we explore how we'd like to do data querying in nushell.</li>
</ul>
<h2 id="documentation-andrasio" tabindex="-1"> Documentation (andrasio)</h2>
<p>We have a new <a href="https://github.com/nushell/nushell/pull/3326" target="_blank" rel="noopener noreferrer">guide on how to create Nushell commands</a>.</p>
<h2 id="improvements-lhkipp-luccasmmg-waldyrious-ilius-fdncred-andrasio-donnutpanic-ammrkn-jonathandturner-schrieveslaach-daschl-nightscape" tabindex="-1"> Improvements (LhKipp, luccasmmg, waldyrious, ilius, fdncred, andrasio, DonnutPanic, ammrkn, jonathandturner, schrieveslaach, daschl, nightscape)</h2>
<ul>
<li>Lots of internal optimization updates: <a href="https://github.com/nushell/nushell/pull/3289" target="_blank" rel="noopener noreferrer">1</a>, <a href="https://github.com/nushell/nushell/pull/3292" target="_blank" rel="noopener noreferrer">2</a>, <a href="https://github.com/nushell/nushell/pull/3300" target="_blank" rel="noopener noreferrer">3</a>, <a href="https://github.com/nushell/nushell/pull/3301" target="_blank" rel="noopener noreferrer">4</a>, <a href="https://github.com/nushell/nushell/pull/3306" target="_blank" rel="noopener noreferrer">5</a></li>
<li>Now <a href="https://github.com/nushell/nushell/pull/3314" target="_blank" rel="noopener noreferrer">appends to the history instead of replacing it</a></li>
<li>API improvements to <a href="https://github.com/nushell/nushell/pull/3309" target="_blank" rel="noopener noreferrer">allow embedded nushell to have custom commands</a></li>
<li>Internal implementation <a href="https://github.com/nushell/nushell/pull/3310" target="_blank" rel="noopener noreferrer">improvements to <code>which</code></a>, <a href="https://github.com/nushell/nushell/pull/3312" target="_blank" rel="noopener noreferrer">to <code>all</code></a>, <a href="https://github.com/nushell/nushell/pull/3315" target="_blank" rel="noopener noreferrer">to <code>math</code> commands</a>, <a href="https://github.com/nushell/nushell/pull/3320" target="_blank" rel="noopener noreferrer">to <code>to</code> and <code>from</code> commands</a>, <a href="https://github.com/nushell/nushell/pull/3325" target="_blank" rel="noopener noreferrer">to <code>compact</code></a></li>
<li>Updated <a href="https://github.com/nushell/nushell/pull/3322" target="_blank" rel="noopener noreferrer"><code>echo ..</code> to no longer prints integers</a></li>
<li>Removed <a href="https://github.com/nushell/nushell/pull/3311" target="_blank" rel="noopener noreferrer">help flags from the <code>$scope.commands</code> display</a></li>
<li>Removed the <a href="https://github.com/nushell/nushell/pull/3308" target="_blank" rel="noopener noreferrer">dupes in get_commands/get_command_names</a></li>
<li>Fixes to <a href="https://github.com/nushell/nushell/pull/3305" target="_blank" rel="noopener noreferrer">viewing Value as a filepath</a></li>
<li>Move <a href="https://github.com/nushell/nushell/pull/3294" target="_blank" rel="noopener noreferrer">arg deserialization out of <code>str</code></a></li>
<li>Cleaned up <a href="https://github.com/nushell/nushell/pull/3297" target="_blank" rel="noopener noreferrer">error handling</a></li>
<li>Fixes to how <a href="https://github.com/nushell/nushell/pull/3303" target="_blank" rel="noopener noreferrer">rest arguments are handled</a></li>
<li>Fixes to <a href="https://github.com/nushell/nushell/pull/3293" target="_blank" rel="noopener noreferrer"><code>ansi rgb fg</code></a></li>
<li>Updated <a href="https://github.com/nushell/nushell/pull/3291" target="_blank" rel="noopener noreferrer">the default prompt</a></li>
<li>Autoview and table now <a href="https://github.com/nushell/nushell/pull/3287" target="_blank" rel="noopener noreferrer">read from the in-memory config</a></li>
<li>Do not <a href="https://github.com/nushell/nushell/pull/3286" target="_blank" rel="noopener noreferrer">store whitespace entries in the history</a></li>
<li>Simplified <a href="https://github.com/nushell/nushell/pull/3283" target="_blank" rel="noopener noreferrer">internal handling of the runnable context</a></li>
<li>Fixed <a href="https://github.com/nushell/nushell/pull/3280" target="_blank" rel="noopener noreferrer">external output busy-waiting</a></li>
<li>Remove <a href="https://github.com/nushell/nushell/pull/3278" target="_blank" rel="noopener noreferrer"><code>rm</code>'s trash flag if it's not supported</a></li>
<li>Fixed a <a href="https://github.com/nushell/nushell/pull/3271" target="_blank" rel="noopener noreferrer">panic when timestamp is out of range</a></li>
<li>Sysinfo dependency has been <a href="https://github.com/nushell/nushell/pull/3267" target="_blank" rel="noopener noreferrer">updated</a></li>
<li>Config commands <a href="https://github.com/nushell/nushell/pull/3265" target="_blank" rel="noopener noreferrer">are now more unified internally</a></li>
<li>Added <a href="https://github.com/nushell/nushell/pull/3257" target="_blank" rel="noopener noreferrer">TiB and PiB units</a></li>
<li>Improved <a href="https://github.com/nushell/nushell/pull/3249" target="_blank" rel="noopener noreferrer">auto-suggestion for aliases and custom commands</a></li>
<li>More <a href="https://github.com/nushell/nushell/pull/3247" target="_blank" rel="noopener noreferrer">logging and tests</a></li>
<li>Now <a href="https://github.com/nushell/nushell/pull/3243" target="_blank" rel="noopener noreferrer">parses decimal units</a></li>
<li>Use <a href="https://github.com/nushell/nushell/pull/3242" target="_blank" rel="noopener noreferrer">one main function to run scripts</a></li>
<li>Fixed <a href="https://github.com/nushell/nushell/pull/3235" target="_blank" rel="noopener noreferrer">errors when deleting a FIFO</a></li>
<li>Fixed <a href="https://github.com/nushell/nushell/pull/3234" target="_blank" rel="noopener noreferrer">capitalizations of Unicode</a></li>
<li>Fixes to <a href="https://github.com/nushell/nushell/pull/3335" target="_blank" rel="noopener noreferrer">path sync'ing</a>, <a href="https://github.com/nushell/nushell/pull/3336" target="_blank" rel="noopener noreferrer">more path fixes</a>, and <a href="https://github.com/nushell/nushell/pull/3339" target="_blank" rel="noopener noreferrer">improvements to dynamic blocks</a></li>
</ul>
<h2 id="breaking-changes" tabindex="-1"> Breaking changes</h2>
<h3 id="removed-help-shell" tabindex="-1"> Removed help shell</h3>
<p>We have removed the <a href="https://github.com/nushell/nushell/pull/3258" target="_blank" rel="noopener noreferrer">help shell</a> to simplify code.</p>
<h3 id="removed-ambiguous-units" tabindex="-1"> Removed ambiguous units</h3>
<p>We've also removed <a href="https://github.com/nushell/nushell/pull/3262" target="_blank" rel="noopener noreferrer"><code>yr</code> and <code>mon</code> units</a> because their meaning was too confusing.</p>
<h3 id="new-set-of-default-features" tabindex="-1"> New set of default features</h3>
<p>The <a href="https://github.com/nushell/nushell/pull/3288" target="_blank" rel="noopener noreferrer">default feature list is now simpler</a>. This means that doing a <code>cargo install</code> will give you fewer of the plugins than previously. We're still working to refine this list. Please do give feedback if these changes negatively impact you.</p>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>The new engine and performance improvements should open the door for even more improvements in the future. These improvements also make it easier to explore adding more sophisticated completion logic in the future, as that logic could be written in Nushell itself.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.29</title>
      <link>https://www.nushell.sh/blog/2021-03-30-nushell_0_29.html</link>
      <guid>https://www.nushell.sh/blog/2021-03-30-nushell_0_29.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.29</source>
      <description> Nushell 0.29
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.29 of Nu. This release adds more polish for paths, streaming, and more.
</description>
      <pubDate>Tue, 30 Mar 2021 20:43:55 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-29" tabindex="-1"> Nushell 0.29</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.29 of Nu. This release adds more polish for paths, streaming, and more.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.29 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.29.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>If you'd like to try the experimental paging feature in this release, you can install with <code>cargo install nu --features=table-pager</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="new-commands" tabindex="-1"> New commands</h2>
<ul>
<li>notryanb added the <a href="https://github.com/nushell/nushell/pull/3197" target="_blank" rel="noopener noreferrer"><code>hash md5</code> command</a></li>
</ul>
<h2 id="functionality" tabindex="-1"> Functionality</h2>
<ul>
<li>John-Goff <a href="https://github.com/nushell/nushell/pull/3166" target="_blank" rel="noopener noreferrer">renamed the <code>count</code> command to <code>length</code></a></li>
<li>ahkrr bumped <a href="https://github.com/nushell/nushell/pull/3167" target="_blank" rel="noopener noreferrer">rustyline to 8.0.0</a></li>
<li>fdncred extended <a href="https://github.com/nushell/nushell/pull/3195" target="_blank" rel="noopener noreferrer"><code>char</code> to allow for more complex unicode</a></li>
<li>fdncred also added support to <a href="https://github.com/nushell/nushell/pull/3210" target="_blank" rel="noopener noreferrer"><code>cd ~/dir</code></a></li>
<li>gonatz added <a href="https://github.com/nushell/nushell/pull/3201" target="_blank" rel="noopener noreferrer">forward slash autocompletion for Windows</a></li>
<li>stormasm added the <a href="https://github.com/nushell/nushell/pull/3203" target="_blank" rel="noopener noreferrer"><code>$scope</code> variable to see into the current scope</a>. The currently only supports seeing the aliases in scope.</li>
<li>DonnotPanic added <a href="https://github.com/nushell/nushell/pull/3207" target="_blank" rel="noopener noreferrer">timezone support for time conversions</a></li>
</ul>
<h2 id="internal" tabindex="-1"> Internal</h2>
<ul>
<li>jonathandturner fixed an issue with <a href="https://github.com/nushell/nushell/pull/3153" target="_blank" rel="noopener noreferrer">input stream buffering for text</a></li>
<li>fdncred updated the <a href="https://github.com/nushell/nushell/pull/3154" target="_blank" rel="noopener noreferrer"><code>fetch</code> command for better portability</a></li>
<li>andrasio improved <a href="https://github.com/nushell/nushell/pull/3179" target="_blank" rel="noopener noreferrer">the test playground</a></li>
<li>andrasio also improved <a href="https://github.com/nushell/nushell/pull/3217" target="_blank" rel="noopener noreferrer">test coverage for context and more</a></li>
<li>nibon7 fixed <a href="https://github.com/nushell/nushell/pull/3184" target="_blank" rel="noopener noreferrer">running tests with <code>--release</code></a></li>
<li>ahkrr improved <a href="https://github.com/nushell/nushell/pull/3189" target="_blank" rel="noopener noreferrer">prompt reliability</a></li>
</ul>
<h2 id="documentation" tabindex="-1"> Documentation</h2>
<ul>
<li>suzanje fixed some broken <a href="https://github.com/nushell/nushell/pull/3198" target="_blank" rel="noopener noreferrer">contributor book links</a></li>
<li>mvolkmann fixed a <a href="https://github.com/nushell/nushell/pull/3216" target="_blank" rel="noopener noreferrer">typo in the help text</a></li>
</ul>
<h2 id="breaking-changes" tabindex="-1"> Breaking changes</h2>
<ul>
<li>The <a href="https://github.com/nushell/nushell/pull/3166" target="_blank" rel="noopener noreferrer"><code>count</code> command is now <code>length</code></a> for better discoverability.</li>
</ul>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>There are a few different on-going projects to help Nushell. New this week is <a href="https://github.com/jonathandturner/enginep/tree/gradient_deep_dive_wip" target="_blank" rel="noopener noreferrer">engine-p</a>, an experimental engine that explores what an iterator+parallel approach would be like in contrast to Nu's current async stream approach. Early results are promising here, as the engine appears to perform better while also using a simpler set of patterns, which should help new contributors.</p>
<p>We've also posted our <a href="https://github.com/nushell/rfcs/pull/6" target="_blank" rel="noopener noreferrer">proposal for shipping 1.0</a>. This lays out the proposed path for Nushell to reach 1.0 and beyond, including the features Nushell will ship with at 1.0. If you'd like to give us feedback, we'd love to have it. You can add comments directly on the proposal and we'll gather the feedback and use it in the next round of revisions.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.28</title>
      <link>https://www.nushell.sh/blog/2021-03-09-nushell_0_28.html</link>
      <guid>https://www.nushell.sh/blog/2021-03-09-nushell_0_28.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.28</source>
      <description> Nushell 0.28
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.28 of Nu. In this release we've added new commands for working with tables, paths, and lots of general feature improvements.
</description>
      <pubDate>Tue, 09 Mar 2021 21:30:47 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-28" tabindex="-1"> Nushell 0.28</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.28 of Nu. In this release we've added new commands for working with tables, paths, and lots of general feature improvements.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.28 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.28.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>If you'd like to try the experimental paging feature in this release, you can install with <code>cargo install nu --features=table-pager</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="new-commands" tabindex="-1"> New commands</h2>
<h3 id="rotate-andrasio" tabindex="-1"> Rotate (andrasio)</h3>
<p>With the new <code>rotate</code> command, we have an easier way to turn rows to columns and columns to rows.</p>
<div><pre><code>> echo [[col1, col2, col3]; [cell1, cell2, cell3] [cell4, cell5, cell6]] | rotate
───┬─────────┬─────────┬─────────
 # │ Column0 │ Column1 │ Column2
───┼─────────┼─────────┼─────────
 0 │ cell4   │ cell1   │ col1
 1 │ cell5   │ cell2   │ col2
 2 │ cell6   │ cell3   │ col3
───┴─────────┴─────────┴─────────
</code></pre></div><p>You can also rotate counter-clockwise:</p>
<div><pre><code>> echo [[col1, col2, col3]; [cell1, cell2, cell3] [cell4, cell5, cell6]] | rotate counter-clockwise
───┬─────────┬─────────┬─────────
 # │ Column0 │ Column1 │ Column2
───┼─────────┼─────────┼─────────
 0 │ col3    │ cell3   │ cell6
 1 │ col2    │ cell2   │ cell5
 2 │ col1    │ cell1   │ cell4
───┴─────────┴─────────┴─────────
</code></pre></div><h3 id="column-rolling-andrasio" tabindex="-1"> Column rolling (andrasio)</h3>
<p>You are now able to move columns around in the same way you may do a bitwise-rotate.</p>
<div><pre><code>> echo '00000100'
| split chars
| each { str to-int }
| rotate counter-clockwise _
| reject _
| rename bit1 bit2 bit3 bit4 bit5 bit6 bit7 bit8
| roll column 3

───┬──────┬──────┬──────┬──────┬──────┬──────┬──────┬──────
 # │ bit4 │ bit5 │ bit6 │ bit7 │ bit8 │ bit1 │ bit2 │ bit3
───┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────
 0 │    0 │    0 │    1 │    0 │    0 │    0 │    0 │    0
───┴──────┴──────┴──────┴──────┴──────┴──────┴──────┴──────
</code></pre></div><h3 id="dropping-columns-andrasio" tabindex="-1"> Dropping columns (andrasio)</h3>
<p>The new <code>drop column</code> subcommand also gives you the ability to remove the last column from a table.</p>
<div><pre><code>> echo [[lib, extension]; [nu-core, rs] [rake, rb]] | drop column
─────────
   lib
─────────
 nu-core
 rake
─────────
</code></pre></div><h3 id="ansi-strip-fdncred" tabindex="-1"> ANSI strip (fdncred)</h3>
<p>With the new <a href="https://github.com/nushell/nushell/pull/3095" target="_blank" rel="noopener noreferrer"><code>ansi strip</code> command</a>, you can remove ansi sequences from a string of text.</p>
<h3 id="path-joining-kubouch" tabindex="-1"> Path joining (kubouch)</h3>
<p>We now have a <code>path join</code> command which allows you to join part of a path to an existing path following the path conventions for your platform.</p>
<p>For example, on Windows:</p>
<div><pre><code>> echo 'C:\Users\viking' | path join spam.txt
</code></pre></div><p>Or Unix-based systems:</p>
<div><pre><code>> echo '/home/viking' | path join spam.txt
</code></pre></div><h2 id="functionality" tabindex="-1"> Functionality</h2>
<h3 id="experimental-built-in-table-paging-rezural" tabindex="-1"> (Experimental) Built-in table paging (rezural)</h3>
<p>If you build Nushell with the optional <code>--features=table-pager</code> you'll see some new capabilities we're working on that will let you <a href="https://github.com/nushell/nushell/pull/3128" target="_blank" rel="noopener noreferrer">view a table with a built-in pager</a>.</p>
<p>In the future, we'll likely move this to its own command so that you can enable paging in much the same way you would use <code>less</code> in other shells.</p>
<p>Let us know how this works for you.</p>
<h3 id="timing-your-pipelines-fdncred" tabindex="-1"> Timing your pipelines (fdncred)</h3>
<p>You can now see the time spent in the last set of commands you sent to Nushell by checking the new <code>$nu.env.CMD_DURATION</code> environment variable.</p>
<p>This will let you, for example, add timings to your prompts for all your fancy prompt needs.</p>
<h3 id="improved-matches-ilius-kubouch" tabindex="-1"> Improved matches (ilius, kubouch)</h3>
<p>The <code>match</code> command has a <a href="https://github.com/nushell/nushell/pull/3111" target="_blank" rel="noopener noreferrer">few new flags</a> to give you more control over how you'd like to match text.</p>
<p>You're now also able to <a href="https://github.com/nushell/nushell/pull/3114" target="_blank" rel="noopener noreferrer">invert the match</a>.</p>
<h3 id="fetch-now-uses-the-latest-surf-and-rustls-fdncred" tabindex="-1"> Fetch now uses the latest surf and rustls (fdncred)</h3>
<p>We're experimenting with moving away from openssl for some commands. In this release, we've moved <a href="https://github.com/nushell/nushell/pull/3120" target="_blank" rel="noopener noreferrer"><code>fetch</code> to use the latest surf</a>, which gives us the ability to use rustls instead of openssl. Please try this out and let us know how it works for you.</p>
<h3 id="cleaner-help-output-kubouch" tabindex="-1"> Cleaner help output (kubouch)</h3>
<p>We've cleaned up the help, so that there's now a difference between <a href="https://github.com/nushell/nushell/pull/3124" target="_blank" rel="noopener noreferrer">the synopsis for a command and its full help text</a>. This makes <code>help commands</code> output a table that's much easier to read.</p>
<h3 id="json-order-is-now-preserved-again-andrasio" tabindex="-1"> JSON order is now preserved, again (andrasio)</h3>
<p>We previously supported preserving the order of fields of JSON when serialized and deserialized, but as we changed and updated dependencies we lost this ability.</p>
<p>In this release, it's been re-added so that <a href="https://github.com/nushell/nushell/pull/3126" target="_blank" rel="noopener noreferrer">fields will preserve order</a> once again.</p>
<h3 id="exit-codes-tiffany352" tabindex="-1"> Exit codes (tiffany352)</h3>
<p>The <code>exit</code> command can now <a href="https://github.com/nushell/nushell/pull/3132" target="_blank" rel="noopener noreferrer">optionally take an exit code</a>, allowing you to quit a nushell with an exit code that can be detect outside of the shell.</p>
<h3 id="vscode-extension-is-now-published-fdncred" tabindex="-1"> VSCode extension is now published (fdncred)</h3>
<p>VSCode users can now use the VSCode extension for Nushell <a href="https://marketplace.visualstudio.com/items?itemName=TheNuProjectContributors.vscode-nushell-lang" target="_blank" rel="noopener noreferrer">right from the VSCode marketplace</a>!</p>
<h2 id="internal" tabindex="-1"> Internal</h2>
<ul>
<li>Improved <a href="https://github.com/nushell/nushell/pull/3078" target="_blank" rel="noopener noreferrer">tests for nu-env</a> (andrasio)</li>
<li>We now remove the <a href="https://github.com/nushell/nushell/pull/3084" target="_blank" rel="noopener noreferrer">current directory (<code>.</code>) from paths</a> where possible (iCodeSometime)</li>
<li>We've begun a multi-step process of simplifying how tables are rendered. The first step is to <a href="https://github.com/nushell/nushell/pull/3088" target="_blank" rel="noopener noreferrer">convert drawing table to return strings</a> (rezural).</li>
<li>We've <a href="https://github.com/nushell/nushell/pull/3089" target="_blank" rel="noopener noreferrer">vendored an ansi term crate</a> to make it easier to improve. This helped make <a href="https://github.com/nushell/nushell/pull/3100" target="_blank" rel="noopener noreferrer">'Light' colors</a> easier to reach. (fdncred)</li>
<li>We've removed some <a href="https://github.com/nushell/nushell/pull/3091" target="_blank" rel="noopener noreferrer">unnecessary dependencies</a> (stormasm)</li>
<li>Some general <a href="https://github.com/nushell/nushell/pull/3093" target="_blank" rel="noopener noreferrer">improvements to parser logic</a> (ilius)</li>
<li>Some crashes in <a href="https://github.com/nushell/nushell/pull/3099" target="_blank" rel="noopener noreferrer"><code>flatten</code> and docs were fixed</a> (stormasm)</li>
<li>We're now using the <a href="https://github.com/nushell/nushell/pull/3112" target="_blank" rel="noopener noreferrer">host for output</a> rather than <code>std::err</code> for better portability. (LhKipp)</li>
<li>Improved ergnomics <a href="https://github.com/nushell/nushell/pull/3133" target="_blank" rel="noopener noreferrer">when working with $nothing</a> (fdncred)</li>
<li>Fixed some <a href="https://github.com/nushell/nushell/pull/3140" target="_blank" rel="noopener noreferrer">locking logic when working with output</a> (ahkrr)</li>
<li>Bel and backspace are <a href="https://github.com/nushell/nushell/pull/3144" target="_blank" rel="noopener noreferrer">now part of <code>char</code></a> (fdncred)</li>
<li><a href="https://github.com/nushell/nushell/pull/3146" target="_blank" rel="noopener noreferrer">Trash functionality has been fixed</a> (tw4452852)</li>
<li>Today's crates.io release was also <a href="https://github.com/nushell/nu_scripts/blob/main/nu_release.nu" target="_blank" rel="noopener noreferrer">fully automated, thanks to Nushell</a> (jonathandturner)</li>
</ul>
<h2 id="documentation" tabindex="-1"> Documentation</h2>
<ul>
<li>Instructions for building and <a href="https://github.com/nushell/nushell.github.io/pull/109" target="_blank" rel="noopener noreferrer">running the website locally</a> (jakevossen5)</li>
<li>Updates to the <a href="https://github.com/nushell/nushell.github.io/pull/108" target="_blank" rel="noopener noreferrer">docker instructions</a> (jakevossen5)</li>
<li>Improvements to the <a href="https://github.com/nushell/nushell.github.io/pull/107" target="_blank" rel="noopener noreferrer">environment documentation</a> (stormasm)</li>
<li>Fixed typo in the <a href="https://github.com/nushell/nushell.github.io/pull/106" target="_blank" rel="noopener noreferrer">textview docs</a> (davidmalcolm)</li>
<li>Corrected <a href="https://github.com/nushell/nushell.github.io/pull/104" target="_blank" rel="noopener noreferrer">Nushell version in excerpt</a> (iCodeSometime)</li>
<li>Fixed a typo in the <a href="https://github.com/nushell/nushell.github.io/pull/103" target="_blank" rel="noopener noreferrer">PowerShell comparison</a> (JTurtl3)</li>
</ul>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>We're continuing our 1.0 planning and hope to publish a proposal soon for your feedback. There are also some on-going experiments, including a new <a href="https://github.com/jonathandturner/reedline" target="_blank" rel="noopener noreferrer">line editor</a> that are offering good insights into better ways of working with the terminal.</p>
<p>And, of course, we hear the feedback about improving completions. We're very much interested in beginning experiments here that will lead to a far better experience as we approach 1.0.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.27</title>
      <link>https://www.nushell.sh/blog/2021-02-16-nushell_0_27.html</link>
      <guid>https://www.nushell.sh/blog/2021-02-16-nushell_0_27.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.27</source>
      <description> Nushell 0.27
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.27 of Nu. This release fixes some long-standing issues with Nushell.
</description>
      <pubDate>Tue, 16 Feb 2021 17:03:57 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-27" tabindex="-1"> Nushell 0.27</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.27 of Nu. This release fixes some long-standing issues with Nushell.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.27 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.27.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="book-updates-fdncred-jonathandturner" tabindex="-1"> Book updates (fdncred, jonathandturner)</h2>
<p>The Nushell book received some much-needed updates. You'll notice new chapters and updated chapters to bring it more up-to-date with recent Nushell.</p>
<ul>
<li><a href="https://www.nushell.sh/book/configuration.html" target="_blank" rel="noopener noreferrer">Thoroughly updated configuration section</a></li>
<li><a href="https://www.nushell.sh/book/types_of_data.html" target="_blank" rel="noopener noreferrer">Updated section on data types</a></li>
<li><a href="https://www.nushell.sh/book/custom_commands.html" target="_blank" rel="noopener noreferrer">A new section on creating your own commands</a></li>
<li><a href="https://www.nushell.sh/book/aliases.html" target="_blank" rel="noopener noreferrer">An updated section on aliases</a></li>
<li><a href="https://www.nushell.sh/book/variables_and_subexpressions.html" target="_blank" rel="noopener noreferrer">A new section on working with variables and expressions</a></li>
<li><a href="https://www.nushell.sh/book/scripts.html" target="_blank" rel="noopener noreferrer">The start of a new section on writing your own Nushell scripts</a></li>
</ul>
<h1 id="improvements" tabindex="-1"> Improvements</h1>
<h2 id="new-commands-fdncred" tabindex="-1"> New commands (fdncred)</h2>
<ul>
<li>A new <code>term size</code> commands <a href="https://github.com/nushell/nushell/pull/3038" target="_blank" rel="noopener noreferrer">lets you get the current size of the terminal</a></li>
<li>New <a href="https://github.com/nushell/nushell/pull/2976" target="_blank" rel="noopener noreferrer"><code>pow</code> operator</a></li>
<li>New <a href="https://github.com/nushell/nushell/pull/2975" target="_blank" rel="noopener noreferrer">modulus(<code>%</code>) operator</a></li>
</ul>
<h2 id="functionality-jonathandturner-watsonthink-ilius-andrasio-qwanve-fdncred-ammkrn" tabindex="-1"> Functionality (jonathandturner, WatsonThink, ilius, andrasio, Qwanve, fdncred, ammkrn)</h2>
<ul>
<li>Tables now <a href="https://github.com/nushell/nushell/pull/3061" target="_blank" rel="noopener noreferrer">truncate instead of crashing when too large</a></li>
<li><code>source</code> command now can <a href="https://github.com/nushell/nushell/pull/3059" target="_blank" rel="noopener noreferrer">use tilde in the path</a></li>
<li><code>let-env</code> can now shadow <a href="https://github.com/nushell/nushell/pull/3057" target="_blank" rel="noopener noreferrer">environment variables</a> in addition to adding new ones</li>
<li>Prompts can now call <a href="https://github.com/nushell/nushell/pull/3056" target="_blank" rel="noopener noreferrer">external commands on initial startup</a></li>
<li>You can now configure the <a href="https://github.com/nushell/nushell/pull/3045" target="_blank" rel="noopener noreferrer">file size standard to use</a></li>
<li>Strings can now be passed in where <a href="https://github.com/nushell/nushell/pull/3048" target="_blank" rel="noopener noreferrer">column-paths were expected</a> and <a href="https://github.com/nushell/nushell/pull/3016" target="_blank" rel="noopener noreferrer">here</a></li>
<li>More <a href="https://github.com/nushell/nushell/pull/3035" target="_blank" rel="noopener noreferrer">file size types have been added</a></li>
<li><code>sort-by</code> can now <a href="https://github.com/nushell/nushell/pull/3025" target="_blank" rel="noopener noreferrer">reverse sort</a></li>
<li><code>which</code> can now take <a href="https://github.com/nushell/nushell/pull/3024" target="_blank" rel="noopener noreferrer">multiple applications</a></li>
<li><code>ps -l</code> now has <a href="https://github.com/nushell/nushell/pull/3015" target="_blank" rel="noopener noreferrer">a cleaner output when the parent is missing</a></li>
<li><code>select</code> can no longer <a href="https://github.com/nushell/nushell/pull/3012" target="_blank" rel="noopener noreferrer">select the same column twice</a></li>
<li><code>to-md --per-element</code> now gives you <a href="https://github.com/nushell/nushell/pull/2997" target="_blank" rel="noopener noreferrer">more fine-grained control over the markdown output</a></li>
<li>A new <a href="https://github.com/nushell/nushell/pull/2995" target="_blank" rel="noopener noreferrer"><code>$nothing</code> built-in variable to help check for the existence of a value</a></li>
<li><code>str from</code> can convert <a href="https://github.com/nushell/nushell/pull/2977" target="_blank" rel="noopener noreferrer">more things to strings</a></li>
<li>Booleans are now shown as <a href="https://github.com/nushell/nushell/pull/3043" target="_blank" rel="noopener noreferrer">true/false instead of Yes/No</a></li>
</ul>
<h2 id="internal-stormasm-ilius-fdncred-lhkipp-rreverser-jonathandturner" tabindex="-1"> Internal (stormasm, ilius, fdncred, LhKipp, RReverser, jonathandturner)</h2>
<ul>
<li>Some <a href="https://github.com/nushell/nushell/pull/3053" target="_blank" rel="noopener noreferrer">comment parsing improvements</a></li>
<li>The <code>block</code> function is now <a href="https://github.com/nushell/nushell/pull/3047" target="_blank" rel="noopener noreferrer"><code>parse_block</code></a></li>
<li>More <a href="https://github.com/nushell/nushell/pull/3000" target="_blank" rel="noopener noreferrer">Value helpers were added</a></li>
<li><a href="https://github.com/nushell/nushell/pull/2986" target="_blank" rel="noopener noreferrer">Parser cleanup for handling <code>def</code></a></li>
<li>The <a href="https://github.com/nushell/nushell/pull/2983" target="_blank" rel="noopener noreferrer">WASI build should now be working again</a></li>
<li>File size is <a href="https://github.com/nushell/nushell/pull/2984" target="_blank" rel="noopener noreferrer">now a big int</a></li>
</ul>
<h2 id="documentation-watzon-ahkrr-lhkipp-andy-python-programmer-diogomafra" tabindex="-1"> Documentation (watzon, ahkrr, LhKipp, Andy-Python-Programmer, diogomafra)</h2>
<ul>
<li>Sample config has <a href="https://github.com/nushell/nushell/pull/3060" target="_blank" rel="noopener noreferrer">gotten an update</a> and <a href="https://github.com/nushell/nushell/pull/3031" target="_blank" rel="noopener noreferrer">here</a></li>
<li>Some <a href="https://github.com/nushell/nushell/pull/3052" target="_blank" rel="noopener noreferrer">README links got updated</a></li>
<li>More <a href="https://github.com/nushell/nushell/pull/3013" target="_blank" rel="noopener noreferrer">README updates</a> and <a href="https://github.com/nushell/nushell/pull/2996" target="_blank" rel="noopener noreferrer">here</a></li>
<li>README now shows <a href="https://github.com/nushell/nushell/pull/2993" target="_blank" rel="noopener noreferrer">contributor icons</a></li>
</ul>
<h1 id="breaking-changes" tabindex="-1"> Breaking changes</h1>
<ul>
<li>Booleans are now shown as <a href="https://github.com/nushell/nushell/pull/3043" target="_blank" rel="noopener noreferrer">true/false instead of Yes/No</a></li>
</ul>
<h1 id="looking-ahead" tabindex="-1"> Looking ahead</h1>
<p>We're hard at work at putting together the proposed features for Nushell 1.0, which will help guide the work to get there. While there's still much work to do to achieve a 1.0 release, this proposal will let the community help refine and correct the direction. We're looking forward to kicking this off in the coming weeks.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nushell 0.26</title>
      <link>https://www.nushell.sh/blog/2021-01-26-nushell_0_26.html</link>
      <guid>https://www.nushell.sh/blog/2021-01-26-nushell_0_26.html</guid>
      <source url="https://www.nushell.sh/rss.xml">Nushell 0.26</source>
      <description> Nushell 0.26
Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.
Today, we're releasing 0.26 of Nu. It's a polish release with lots of improvements.
</description>
      <pubDate>Wed, 27 Jan 2021 05:40:16 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nushell-0-26" tabindex="-1"> Nushell 0.26</h1>
<p>Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.</p>
<p>Today, we're releasing 0.26 of Nu. It's a polish release with lots of improvements.</p>

<h1 id="where-to-get-it" tabindex="-1"> Where to get it</h1>
<p>Nu 0.26 is available as <a href="https://github.com/nushell/nushell/releases/tag/0.26.0" target="_blank" rel="noopener noreferrer">pre-built binaries</a> or from <a href="https://crates.io/crates/nu" target="_blank" rel="noopener noreferrer">crates.io</a>. If you have Rust installed you can install it using <code>cargo install nu</code>.</p>
<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p>
<p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p>
<h1 id="what-s-new" tabindex="-1"> What's New</h1>
<h2 id="rest-support-in-custom-commands-lhkipp-jonathandturner" tabindex="-1"> Rest support in custom commands (LhKipp, jonathandturner)</h2>
<p>You can now refer to a rest argument in your custom command:</p>
<div><pre><code>def my-cmd[...rest:int] {
    echo $rest | math sum
}
</code></pre></div><p>Elements of the rest are referred to with positions, like <code>$rest.1</code> for the 2nd position.</p>
<h2 id="short-flags-in-custom-commands-lhkipp" tabindex="-1"> Short flags in custom commands (LhKipp)</h2>
<p>You can now also added an optional shorthand flag to longhand flags:</p>
<div><pre><code>def foo [--bar(-b): int] {
    echo $bar
}

foo -b 10
foo --bar 10
</code></pre></div><h2 id="improved-build-times-jonathandturner-stormasm" tabindex="-1"> Improved build times (jonathandturner, stormasm)</h2>
<p>When building from scratch, you may now notice that Nushell builds slightly faster. This comes from refactoring large crates into smaller crates and replacing some of our support crates with similar crates that compile faster.</p>
<h2 id="improvements" tabindex="-1"> Improvements</h2>
<p>I hope you like improvements. We got a <em>lot</em> of them this release.</p>
<ul>
<li>fdcnred added support for using <a href="https://github.com/nushell/nushell/pull/2973" target="_blank" rel="noopener noreferrer">multi-byte chars as padding</a>, improved <a href="https://github.com/nushell/nushell/pull/2955" target="_blank" rel="noopener noreferrer">ansi and char support</a>, improved the output of <a href="https://github.com/nushell/nushell/pull/2959" target="_blank" rel="noopener noreferrer"><code>sys</code></a>, optimized some <a href="https://github.com/nushell/nushell/pull/2937" target="_blank" rel="noopener noreferrer">regex usage</a>, removed <a href="https://github.com/nushell/nushell/pull/2924" target="_blank" rel="noopener noreferrer"><code>set</code> from Windows built-ins</a>, added support for <a href="https://github.com/nushell/nushell/pull/2906" target="_blank" rel="noopener noreferrer">comparing a string and a filepath</a></li>
<li>JosephTLyons removed <a href="https://github.com/nushell/nushell/pull/2970" target="_blank" rel="noopener noreferrer">unnecessary clones</a> and <a href="https://github.com/nushell/nushell/pull/2969" target="_blank" rel="noopener noreferrer">fixed some test macros</a></li>
<li>andrasio added <a href="https://github.com/nushell/nushell/pull/2965" target="_blank" rel="noopener noreferrer">column path support to many <code>str</code> commands</a></li>
<li>jonathandturner added <a href="https://github.com/nushell/nushell/pull/2964" target="_blank" rel="noopener noreferrer">error checking for bad rows in column paths</a>, added <a href="https://github.com/nushell/nushell/pull/2952" target="_blank" rel="noopener noreferrer">proper flushing of stdout</a>, split <a href="https://github.com/nushell/nushell/pull/2898" target="_blank" rel="noopener noreferrer">nu-cli and nu-engine</a>, treat <a href="https://github.com/nushell/nushell/pull/2890" target="_blank" rel="noopener noreferrer">the startup commands a single script</a> which improves startup times, fixed <a href="https://github.com/nushell/nushell/pull/2893" target="_blank" rel="noopener noreferrer">reading/writing of bigint/bigdecimal</a></li>
<li>baoyachi updated <a href="https://github.com/nushell/nushell/pull/2963" target="_blank" rel="noopener noreferrer">shadow-rs support</a>, removed some of the <a href="https://github.com/nushell/nushell/pull/2935" target="_blank" rel="noopener noreferrer">git support that was no longer needed</a></li>
<li>kubouch added the <a href="https://github.com/nushell/nushell/pull/2953" target="_blank" rel="noopener noreferrer">--skip flag to <code>nth</code></a></li>
<li>ahkrr fixed <a href="https://github.com/nushell/nushell/pull/2951" target="_blank" rel="noopener noreferrer">variable scopes for <code>def</code> parameters</a></li>
<li>brightly-salty <a href="https://github.com/nushell/nushell/pull/2949" target="_blank" rel="noopener noreferrer">replaces the dirs/directories supporting crates</a></li>
<li>jankeronmes fixed <a href="https://github.com/nushell/nushell/pull/2948" target="_blank" rel="noopener noreferrer">Gitpod tests</a></li>
<li>LhKipp fixed a <a href="https://github.com/nushell/nushell/pull/2945" target="_blank" rel="noopener noreferrer">parser bug that prevented invocations and ranges from being parsed correctly</a>, added <a href="https://github.com/nushell/nushell/pull/2939" target="_blank" rel="noopener noreferrer"><code>def</code> documentation</a>, updated <a href="https://github.com/nushell/nushell/pull/2925" target="_blank" rel="noopener noreferrer"><code>alias</code> docs</a></li>
<li>DivineGod moved <a href="https://github.com/nushell/nushell/pull/2927" target="_blank" rel="noopener noreferrer">keybinding_path to nu-data</a></li>
<li>Gymea fixed the <a href="https://github.com/nushell/nushell/pull/2924" target="_blank" rel="noopener noreferrer">dirs dependency in nu-engine</a>, improved the <a href="https://github.com/nushell/nushell/pull/2915" target="_blank" rel="noopener noreferrer"><code>help</code> logic when the command does not have a description</a>, fixed <a href="https://github.com/nushell/nushell/pull/2894" target="_blank" rel="noopener noreferrer"><code>which</code> output for aliases</a></li>
<li>gillespiecd added the support for <a href="https://github.com/nushell/nushell/pull/2913" target="_blank" rel="noopener noreferrer">reverse ranges</a></li>
<li>stormasm refactored <a href="https://github.com/nushell/nushell/pull/2910" target="_blank" rel="noopener noreferrer">nu-cli and split off commands into nu-command</a></li>
<li>TrevorAC99 fixed a <a href="https://github.com/nushell/nushell/pull/2880" target="_blank" rel="noopener noreferrer">rust-embed build breakage</a></li>
</ul>
<h2 id="breaking-changes" tabindex="-1"> Breaking changes</h2>
<ul>
<li><code>ps</code> and <code>sys</code> are now served using a <a href="https://github.com/nushell/nushell/pull/2954" target="_blank" rel="noopener noreferrer">different supporting crate</a>. The functionality difference between the old crate and the new crate may mean a lack of fields that existed before, or different values than before (as it may be calculated differently).</li>
<li>We removed <a href="https://github.com/nushell/nushell/pull/2940" target="_blank" rel="noopener noreferrer"><code>str set</code></a>. This command was one of the first of its style and has since been replaced by more general commands like <code>update</code>.</li>
<li>Internal architecture: the Primitive case for <a href="https://github.com/nushell/nushell/pull/2887" target="_blank" rel="noopener noreferrer">lines has been removed</a>. Instead, use strings.</li>
<li>Internal architecture: the Path and Pattern primitives are now called <a href="https://github.com/nushell/nushell/pull/2889" target="_blank" rel="noopener noreferrer">FilePath and GlobPattern</a> respectively.</li>
</ul>
<h1 id="looking-forward" tabindex="-1"> Looking forward</h1>
<p>We've been humbled by the feedback we got on the 0.25 release and appreciate the support. Looking forward, we'll be continuing to polish the features that landed in 0.25 as we prepare for using these features in larger scripts and in custom completion logic.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>