import{_ as n,M as r,p as s,q as i,Q as a,t as e,N as t,a1 as l}from"./framework-344bb0e4.js";const d={},h=a("h1",{id:"nushell-0-11-0",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#nushell-0-11-0","aria-hidden":"true"},"#"),e(" Nushell 0.11.0")],-1),c=a("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),u=a("p",null,"We're excited to release the 0.11.0 release of Nu. This release continues to push us forward with new commands, improved engine internals, bugfixes, and more.",-1),m=a("h1",{id:"where-to-get-it",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),p={href:"https://github.com/nushell/nushell/releases/tag/0.11.0",target:"_blank",rel:"noopener noreferrer"},f={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},g=a("code",null,"cargo install nu",-1),w=l(`<p>If you want more goodies, you can install <code>cargo install nu --features=stable</code>.</p><p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="what-s-new" tabindex="-1"><a class="header-anchor" href="#what-s-new" aria-hidden="true">#</a> What&#39;s new</h1><h2 id="compound-shorthand-flags-amanita-muscaria" tabindex="-1"><a class="header-anchor" href="#compound-shorthand-flags-amanita-muscaria" aria-hidden="true">#</a> Compound shorthand flags (Amanita-muscaria)</h2><p>Over the last few releases, we&#39;ve seen the ability for flags to have shorthand version. You no longer needed to use <code>--full</code> if the flag supported the shorter <code>-f</code> version.</p><p>In this release, we&#39;ve taken it one step further and allowed you to combine multiple shorthand flags into one group. For example, <code>ls --full --short-names</code> can now be written as <code>ls -fs</code></p><h2 id="improvements-and-cleanup-for-ls-bocom-quebin31-lincis-equal-l2" tabindex="-1"><a class="header-anchor" href="#improvements-and-cleanup-for-ls-bocom-quebin31-lincis-equal-l2" aria-hidden="true">#</a> Improvements and cleanup for <code>ls</code> (Bocom, quebin31, lincis, equal-l2)</h2><p>A lot of improvements went into <code>ls</code> for this release. The updated <code>ls</code> command is now more forgiving of coming across directories the user can&#39;t access and will simply show what it can and continue, it can work with named pipes on systems with them, it shows a more reasonable display for zero-length files, and the internals of <code>ls</code> have been cleaned a bit to make way for future improvements.</p><h2 id="external-command-output-no-longer-blocks-thegedge" tabindex="-1"><a class="header-anchor" href="#external-command-output-no-longer-blocks-thegedge" aria-hidden="true">#</a> External command output no longer blocks (thegedge)</h2><p>Continuing our series of improvements to working with external commands, we have a few updates in this release. The first of these updates is an improvement to how content streams out of externals. With 0.11.0, this content will no longer block, which allows content to flow more easily between external and internal commands. As a result, some corner cases that came up with a series of commands in a pipeline not working because one blocks no longer is an issue.</p><h2 id="allow-externals-to-output-texts-or-binary-jonathandturner-thegedge" tabindex="-1"><a class="header-anchor" href="#allow-externals-to-output-texts-or-binary-jonathandturner-thegedge" aria-hidden="true">#</a> Allow externals to output texts or binary (jonathandturner, thegedge)</h2><p>The second update to externals now allows externals to freely output either text or strings, and for this content to be read in a block at a time into Nu. This allows externals to stream any content they wish, and for this stream to continue for as long as needed.</p><h2 id="new-shuffle-command-hirschenberger" tabindex="-1"><a class="header-anchor" href="#new-shuffle-command-hirschenberger" aria-hidden="true">#</a> New <code>shuffle</code> command (hirschenberger)</h2><p>With 0.11.0, we introduce a new <code>shuffle</code> command that will let you shuffle the rows of a table. This allows you to choose to not always process data the same way, or to search through data more stochastically.</p><div class="language-text" data-ext="text"><pre class="language-text"><code>❯ help commands | shuffle
─────┬──────────────┬───────────────────────────────────────────────────────────────────────────────────────────────
 #   │ name         │ description
─────┼──────────────┼───────────────────────────────────────────────────────────────────────────────────────────────
   0 │ textview     │ Autoview of text data.
   1 │ pwd          │ Output the current working directory.
   2 │ sort-by      │ Sort by the given columns.
   3 │ tree         │ View the contents of the pipeline as a tree.
   4 │ du           │ Find disk usage sizes of specified items
   5 │ table        │ View the contents of the pipeline as a table.
</code></pre></div><h2 id="new-column-rename-command-andrasio" tabindex="-1"><a class="header-anchor" href="#new-column-rename-command-andrasio" aria-hidden="true">#</a> New column <code>rename</code> command (andrasio)</h2><p>You can also now use the new <code>rename</code> command to rename a column to a new name.</p><div class="language-text" data-ext="text"><pre class="language-text"><code>❯ help commands | rename action description
─────┬──────────────┬───────────────────────────────────────────────────────────────────────────────────────────────
 #   │ action       │ description
─────┼──────────────┼───────────────────────────────────────────────────────────────────────────────────────────────
   0 │ append       │ Append the given row to the table
   1 │ autoview     │ View the contents of the pipeline as a table or list.
   2 │ average      │ Compute the average of a column of numerical values.
   3 │ binaryview   │ Autoview of binary data.
</code></pre></div><h2 id="merge-the-env-command-into-the-nu-variable-jonathandturner" tabindex="-1"><a class="header-anchor" href="#merge-the-env-command-into-the-nu-variable-jonathandturner" aria-hidden="true">#</a> Merge the <code>env</code> command into the <code>$nu</code> variable (jonathandturner)</h2><p>The <code>$nu</code> variable has grown to include values that were previously part of <code>env</code>, effectively merging the two into the <code>$nu</code> variable. This allows you to easily find out where the history file is stored, where config is stored, and where a good temp directory are all in one place:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>❯ echo $nu.home-dir $nu.temp-dir $nu.config-path $nu.history-path
───┬──────────────────────────────────────────────────────────────────────
 # │ &lt;value&gt;
───┼──────────────────────────────────────────────────────────────────────
 0 │ C:\\Users\\joturner
 1 │ C:\\Users\\joturner\\AppData\\Local\\Temp\\
 2 │ C:\\Users\\joturner\\AppData\\Roaming\\nu shell developers\\nu\\config.toml
 3 │ C:\\Users\\joturner\\AppData\\Local\\nu shell developers\\nu\\history.txt
───┴──────────────────────────────────────────────────────────────────────
</code></pre></div><h2 id="the-format-command-can-now-use-column-paths-andrasio" tabindex="-1"><a class="header-anchor" href="#the-format-command-can-now-use-column-paths-andrasio" aria-hidden="true">#</a> The <code>format</code> command can now use column paths (andrasio)</h2><p>The <code>format</code> command is a handy way of putting column data into a string for displaying, but it previously had the restriction that you couldn&#39;t use it to print out information that was deeper in the table. With 0.11.0, we&#39;ve removed that restriction.</p><div class="language-text" data-ext="text"><pre class="language-text"><code>❯ open Cargo.toml | format &quot;The edition is {package.edition}&quot;
The edition is 2018
</code></pre></div><h2 id="allow-help-to-be-printed-with-h-in-more-cases-rabisg0" tabindex="-1"><a class="header-anchor" href="#allow-help-to-be-printed-with-h-in-more-cases-rabisg0" aria-hidden="true">#</a> Allow help to be printed with <code>-h</code> in more cases (rabisg0)</h2><p>You should now be able to use <code>-h</code> to reach the help of a command in more cases than was previously allowed, making it a universal way to get to the help text.</p><h2 id="improved-documentation-coolshaurya-amanita-muscaria-notryanb" tabindex="-1"><a class="header-anchor" href="#improved-documentation-coolshaurya-amanita-muscaria-notryanb" aria-hidden="true">#</a> Improved documentation (coolshaurya, Amanita-muscaria, notryanb)</h2><p>Documentation for <code>du</code>, <code>uniq</code>, <code>debug</code>, and plugin docs have all been improved in this release.</p><h1 id="looking-ahead" tabindex="-1"><a class="header-anchor" href="#looking-ahead" aria-hidden="true">#</a> Looking ahead</h1>`,29),b={href:"https://github.com/nushell/nushell",target:"_blank",rel:"noopener noreferrer"},v={href:"https://discord.gg/NtAbbGn",target:"_blank",rel:"noopener noreferrer"};function x(y,_){const o=r("ExternalLinkIcon");return s(),i("div",null,[h,c,u,m,a("p",null,[e("Nu 0.11.0 is available as "),a("a",p,[e("pre-built binaries"),t(o)]),e(" or from "),a("a",f,[e("crates.io"),t(o)]),e(". If you have Rust installed you can install it using "),g,e(".")]),w,a("p",null,[e("We're excited to continue to polish how Nu works to make it more reliable and more efficient. Of course, we're also working on adding new much-requested features like aliases in upcoming releases. If you'd like to help with aliases or with Nu in general -- even if you want to help with a part of the project outside of just coding -- we'd love to have you. Come visit us on "),a("a",b,[e("github"),t(o)]),e(" or the "),a("a",v,[e("discord"),t(o)]),e(".")])])}const N=n(d,[["render",x],["__file","2020-03-10-nushell_0_11_0.html.vue"]]);export{N as default};
