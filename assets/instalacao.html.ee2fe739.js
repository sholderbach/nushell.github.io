import{_ as t,z as r,A as i,X as a,C as e,T as n,a6 as o,Q as l}from"./framework.3d018c9f.js";const c={},p=a("h1",{id:"instalando-nu",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#instalando-nu","aria-hidden":"true"},"#"),e(" Instalando Nu")],-1),d={href:"https://crates.io",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/nushell/nushell/releases",target:"_blank",rel:"noopener noreferrer"},h=a("h2",{id:"binarios",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#binarios","aria-hidden":"true"},"#"),e(" Binários")],-1),m={href:"https://github.com/nushell/nushell/releases",target:"_blank",rel:"noopener noreferrer"},g={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},b=a("code",null,"brew install nushell",-1),f=a("h2",{id:"preparando",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#preparando","aria-hidden":"true"},"#"),e(" Preparando")],-1),v=a("p",null,"Antes de instalar o Nu, precisamos nos certificar de que nosso sistema tem os requisitos necessários. Atualmente, isso significa ter certeza de que temos tanto o conjunto de ferramentas do Rust como as dependências locais instaladas.",-1),k=a("h3",{id:"instalando-o-rust",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#instalando-o-rust","aria-hidden":"true"},"#"),e(" Instalando o Rust")],-1),_={href:"https://rustup.rs/",target:"_blank",rel:"noopener noreferrer"},x=o(`<p>O Nu atualmente requer a versão <strong>nightly</strong> do Rust. Quando você abrir o &quot;rustup&quot; pela primeira vez, ele vai perguntar qual versão do Rust você quer instalar:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>Current installation options:

   default <span class="token function">host</span> triple: x86_64-unknown-linux-gnu
     default toolchain: stable
  modify <span class="token environment constant">PATH</span> variable: <span class="token function">yes</span>

<span class="token number">1</span><span class="token punctuation">)</span> Proceed with installation <span class="token punctuation">(</span>default<span class="token punctuation">)</span>
<span class="token number">2</span><span class="token punctuation">)</span> Customize installation
<span class="token number">3</span><span class="token punctuation">)</span> Cancel installation
</code></pre></div><p>Selecione a opção #2 para customizar a instalação.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>Default <span class="token function">host</span> triple?
</code></pre></div><p>Aperte enter aqui para selecionar o default.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>Default toolchain? <span class="token punctuation">(</span>stable/beta/nightly/none<span class="token punctuation">)</span>
</code></pre></div><p>Certifique-se de digitar &quot;nightly&quot; aqui e pressionar enter. Isso vai levar à configuração seguinte:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>Modify <span class="token environment constant">PATH</span> variable? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>
</code></pre></div><p>Você pode opcionalmente atualizar o seu <em>path</em>. Normalmente é uma boa ideia, pois torna os passos seguintes mais fáceis.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>Current installation options:

   default <span class="token function">host</span> triple: x86_64-unknown-linux-gnu
     default toolchain: nightly
  modify <span class="token environment constant">PATH</span> variable: <span class="token function">yes</span>

<span class="token number">1</span><span class="token punctuation">)</span> Proceed with installation <span class="token punctuation">(</span>default<span class="token punctuation">)</span>
<span class="token number">2</span><span class="token punctuation">)</span> Customize installation
<span class="token number">3</span><span class="token punctuation">)</span> Cancel installation
</code></pre></div><p>Você pode ver que o toolchain agora mudou para a versão nightly. Se isso parece um pouco arriscado, não se preocupe. O compilador do Rust passa por uma bateria completa de testes. O compilador nightly é praticamente tão confiável quanto a versão estável.</p><p>Quando estiver pronto, pressione 1 e enter. Depois desse ponto, podemos seguir as instruções que o &quot;rustup&quot; nos der e teremos um compilador Rust funcionando no nosso sistema.</p><p>Se você preferir não instalar o Rust via &quot;rustup&quot;, você pode também instalar por outros métodos (por exemplo, a partir de um pacote em uma distribuição Linux). Apenas se certifique de instalar uma versão nightly recente.</p><h2 id="dependencias" tabindex="-1"><a class="header-anchor" href="#dependencias" aria-hidden="true">#</a> Dependências</h2><h3 id="debian-ubuntu" tabindex="-1"><a class="header-anchor" href="#debian-ubuntu" aria-hidden="true">#</a> Debian/Ubuntu</h3><p>Você vai precisar instalar os pacotes &quot;pkg-config&quot; e &quot;libssl-dev&quot;:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> pkg-config libssl-dev
</code></pre></div><p>Usuários Linux que quiserem usar as funcionalidades opcionais <code>rawkey</code> ou <code>clipboard</code> precisarão instalar os pacotes &quot;libx11-dev&quot; and &quot;libxcb-composite0-dev&quot;:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> libxcb-composite0-dev libx11-dev
</code></pre></div><h3 id="macos" tabindex="-1"><a class="header-anchor" href="#macos" aria-hidden="true">#</a> macOS</h3>`,20),q={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},N=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[e("brew "),a("span",{class:"token function"},"install"),e(` openssl cmake
`)])])],-1),z={id:"instalando-a-partir-do-crates-io",tabindex:"-1"},w=a("a",{class:"header-anchor",href:"#instalando-a-partir-do-crates-io","aria-hidden":"true"},"#",-1),y={href:"https://crates.io",target:"_blank",rel:"noopener noreferrer"},A=o(`<p>Quando tivermos todas as dependências de que o Nu precisa, podemos instalá-lo usando o comando <code>cargo</code>, que vem junto com o compilador Rust.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">cargo</span> <span class="token function">install</span> nu
</code></pre></div><p>Pronto! A ferramenta cargo fará o download do Nu e das dependências do fonte, o build e a instalação no caminho bin do cargo, de forma que possamos rodá-lo.</p><p>Se quiser instalar todas as funcionalidades, inclusive algumas opcionais divertidas, você pode usar:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">cargo</span> <span class="token function">install</span> nu <span class="token parameter variable">--features</span><span class="token operator">=</span>stable
</code></pre></div><p>Para esse comando funcionar, certifique-se de ter todas as dependências (mostradas acima) instaladas no seu sistema.</p><p>Uma vez instalado, podemos rodar o Nu usando o comando <code>nu</code>:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>$ nu
/home/jonathan/Source<span class="token operator">&gt;</span>
</code></pre></div><h2 id="fazendo-o-build-a-partir-dos-fontes" tabindex="-1"><a class="header-anchor" href="#fazendo-o-build-a-partir-dos-fontes" aria-hidden="true">#</a> Fazendo o Build a partir dos fontes</h2><p>Também podemos fazer o build do código fonte diretamente do GitHub. Isso nos dá acesso imediato às últimas funcionalidades e correções do Nu.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">git</span> clone https://github.com/nushell/nushell.git
</code></pre></div><p>O Git vai clonar o repositório principal do nushell e daí podemos fazer o build e rodar o Nu:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">cd</span> nushell
nushell<span class="token operator">&gt;</span> <span class="token function">cargo</span> build <span class="token parameter variable">--workspace</span> <span class="token parameter variable">--features</span><span class="token operator">=</span>stable <span class="token operator">&amp;&amp;</span> <span class="token function">cargo</span> run <span class="token parameter variable">--features</span><span class="token operator">=</span>stable
</code></pre></div><p>Você também pode fazer o build e rodar o Nu em modo release:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>nushell<span class="token operator">&gt;</span> <span class="token function">cargo</span> build <span class="token parameter variable">--release</span> <span class="token parameter variable">--workspace</span> <span class="token parameter variable">--features</span><span class="token operator">=</span>stable <span class="token operator">&amp;&amp;</span> <span class="token function">cargo</span> run <span class="token parameter variable">--release</span> <span class="token parameter variable">--features</span><span class="token operator">=</span>stable
</code></pre></div><p>Pessoas mais acostumadas com Rust podem se perguntar por que fazemos tanto o &quot;build&quot; como o &quot;run&quot; se o &quot;run&quot; já faz o build por padrão. Isso serve para contornar uma falha da nova opção <code>default-run</code> no Cargo e assegurar que será feito o build de todos os plugins, embora possa não ser necessário no futuro.</p><h2 id="configurando-como-login-shell" tabindex="-1"><a class="header-anchor" href="#configurando-como-login-shell" aria-hidden="true">#</a> Configurando como login shell</h2><p><strong>!!! Nushell ainda está em desenvovlimento e pode não estar estável para uso diário. !!!</strong></p>`,18),R={href:"https://linux.die.net/man/1/chsh",target:"_blank",rel:"noopener noreferrer"},V=a("code",null,"chsh",-1),C=o(`<p>Algumas distribuições Linux possuem uma lista de shells válidos em <code>/etc/shells</code> e não permitirão modificar o shell até que o Nu esteja nessa lista branca. Você pode ver um erro similar ao mostrado abaixo se não tiver atualizado seu arquivo <code>shells</code>.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>chsh: /home/username/.cargo/bin/nu is an invalid shell
</code></pre></div><p>Você pode adicionar o Nu à lista de shell permitidos acrescentando o binário do Nu ao arquivo <code>shells</code>. O caminho a ser adicionado pode ser encontrado com o comando <code>which nu</code> e geralmente é <code>$HOME/.cargo/bin/nu</code>.</p>`,3);function P(S,I){const s=l("ExternalLinkIcon");return r(),i("div",null,[p,a("p",null,[e("Atualmente, as melhores maneiras de instalar o Nu são a partir do "),a("a",d,[e("crates.io"),n(s)]),e(", fazer o download dos binários da nossa "),a("a",u,[e("página de releases"),n(s)]),e(", fazer o build a partir dos fontes ou baixar um container pronto com o Docker.")]),h,a("p",null,[e("Você pode baixar o Nu da "),a("a",m,[e("página de releases"),n(s)]),e(". Alternativamente, se você usa o "),a("a",g,[e("Homebrew"),n(s)]),e(" para macOS, pode instalar o binário executando o comando "),b,e(".")]),f,v,k,a("p",null,[e("Se ainda não tivermos o Rust instalado no sistema, a melhor maneira de instalar é via "),a("a",_,[e("rustup"),n(s)]),e(". Rustup é uma maneira de gerenciar instalações, inclusive de versões diferentes de Rust.")]),x,a("p",null,[e("Ao usar o "),a("a",q,[e("Homebrew"),n(s)]),e(', você precisará instalar o "openssl" e o "cmake" usando:')]),N,a("h2",z,[w,e(" Instalando a partir do "),a("a",y,[e("crates.io"),n(s)])]),A,a("p",null,[e("Você pode definir o seu login shell usando o comando "),a("a",R,[V,n(s)]),e(".")]),C])}const H=t(c,[["render",P],["__file","instalacao.html.vue"]]);export{H as default};
