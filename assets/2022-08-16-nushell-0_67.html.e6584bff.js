import{_ as r,r as l,o as h,c as i,f as a,a as t,b as n,d as e,e as s}from"./app.8034769a.js";const d="/assets/0_67_header.acbc82c8.png",_="/assets/0_67_vs_code.58ffe022.png",c="/assets/0_67_error_message.3dab090c.png",u={},p=t("h1",{id:"nushell-0-67",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell-0-67","aria-hidden":"true"},"#"),e(" Nushell 0.67")],-1),g=t("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),f=t("p",null,"Today, we're releasing version 0.67 of Nu. This is release includes a new variable naming convention, improvements to module imports and file sourcing, and more.",-1),b=t("h1",{id:"where-to-get-it",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),m=e("Nu 0.67 is available as "),k={href:"https://github.com/nushell/nushell/releases/tag/0.67.0",target:"_blank",rel:"noopener noreferrer"},w=e("pre-built binaries"),v=e(" or from "),y={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},x=e("crates.io"),N=e(". If you have Rust installed you can install it using "),A=t("code",null,"cargo install nu",-1),q=e("."),T=t("p",null,[e("If you want all the built-in goodies, you can install "),t("code",null,"cargo install nu --features=extra"),e(".")],-1),S=t("p",null,[e("As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use "),t("code",null,"cargo install nu_plugin_<plugin name>"),e(".")],-1),F=t("h1",{id:"themes-of-this-release",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#themes-of-this-release","aria-hidden":"true"},"#"),e(" Themes of this release")],-1),W={id:"we-have-a-new-welcome-banner-fdncred",tabindex:"-1"},I=t("a",{class:"header-anchor",href:"#we-have-a-new-welcome-banner-fdncred","aria-hidden":"true"},"#",-1),R=e(" We have a new welcome banner ("),C={href:"https://github.com/nushell/nushell/pull/6163",target:"_blank",rel:"noopener noreferrer"},E=e("fdncred"),z=e(")"),V=t("p",null,[t("img",{src:d,alt:"New Nushell banner"})],-1),P=t("p",null,[e("You can disable the banner using the "),t("code",null,"config nu"),e(" command to modify the config.nu file, just set "),t("code",null,"show_banner"),e(" to false:")],-1),j=t("div",{class:"language-text ext-text"},[t("pre",{class:"language-text"},[t("code",null,`let-env config {
    show_banner: false
    ...
}
`)])],-1),B={id:"new-variable-naming-convention-jt",tabindex:"-1"},U=t("a",{class:"header-anchor",href:"#new-variable-naming-convention-jt","aria-hidden":"true"},"#",-1),L=e(" New variable naming convention ("),M={href:"https://github.com/nushell/nushell/pull/6125",target:"_blank",rel:"noopener noreferrer"},O=e("jt"),D=e(")"),Q=s("<p><strong>WARNING! Breaking change!</strong></p><p>In this release, we cleaned up some of the syntax parsing. The major implication of it is that variable names can no longer contain <code>-</code> characters in it. Make sure to rename your variables from <code>kebab-case</code> to <code>snake_case</code>. This is true also for variables created from command flags. For example, a <code>--foo-bar</code> flag in a command signature will be referenced by a <code>$foo_bar</code> variable.</p>",2),Y={id:"relative-paths-in-scripts-are-file-relative-kubouch",tabindex:"-1"},$=t("a",{class:"header-anchor",href:"#relative-paths-in-scripts-are-file-relative-kubouch","aria-hidden":"true"},"#",-1),H=e(" Relative paths in scripts are file-relative ("),G={href:"https://github.com/nushell/nushell/pull/6150",target:"_blank",rel:"noopener noreferrer"},X=e("kubouch"),K=e(")"),J=t("p",null,[e("When you use "),t("code",null,"source"),e(", "),t("code",null,"use"),e(", or "),t("code",null,"overlay add"),e(" with a relative path in a script or a module file, the path is assumed to be relative to the file, not the current working directory.")],-1),Z=t("p",null,"Example:",-1),ee=t("div",{class:"language-text ext-text"},[t("pre",{class:"language-text"},[t("code",null,`# script.nu

use foo.nu *  # foo.nu is assumed to be relative to script.nu
`)])],-1),te={id:"writing-sqlite-files-fdncred",tabindex:"-1"},oe=t("a",{class:"header-anchor",href:"#writing-sqlite-files-fdncred","aria-hidden":"true"},"#",-1),ne=e(" Writing SQLite files ("),se={href:"https://github.com/nushell/nushell/pull/6266",target:"_blank",rel:"noopener noreferrer"},re=e("fdncred"),le=e(")"),he=t("p",null,"We added a fun way to create SQLite databases:",-1),ie=t("div",{class:"language-text ext-text"},[t("pre",{class:"language-text"},[t("code",null,`# create a database with a single table named \`main\`
ls | into sqlite my_ls.db

# same, but name the table \`foo\`
ls | into sqlite my_ls.db -t foo
`)])],-1),ae=t("p",null,[e("Previously Nushell was limited to reading SQLite database files. Now we allow you to take tables or lists and create database files like "),t("code",null,"ls | into sqlite my_ls.db"),e(". Currently this functionality works with regular table output from commands, table literals like "),t("code",null,"[[col1 col2]; [a b] [c d]]"),e(" and lists like "),t("code",null,"[one 10mib 20sec 2 2.5]"),e(".")],-1),de={id:"shell-integration-fdncred-and-tyriar",tabindex:"-1"},_e=t("a",{class:"header-anchor",href:"#shell-integration-fdncred-and-tyriar","aria-hidden":"true"},"#",-1),ce=e(" Shell integration ("),ue={href:"https://github.com/nushell/nushell/pull/6087",target:"_blank",rel:"noopener noreferrer"},pe=e("fdncred and Tyriar"),ge=e(")"),fe=e("@fdncred worked with @Tyriar from the Visual Studio Code team on shell integration. Now Nushell will display round blue/red/gray decorations indicating the start of commands in the "),be={href:"https://code.visualstudio.com/docs/terminal/shell-integration",target:"_blank",rel:"noopener noreferrer"},me=e("VS Code terminal"),ke=e(":"),we=t("p",null,[t("img",{src:_,alt:"VS Code decorations"})],-1),ve={id:"error-messages-rgwood",tabindex:"-1"},ye=t("a",{class:"header-anchor",href:"#error-messages-rgwood","aria-hidden":"true"},"#",-1),xe=e(" Error Messages ("),Ne={href:"https://github.com/nushell/nushell/pull/6256",target:"_blank",rel:"noopener noreferrer"},Ae=e("rgwood"),qe=e(")"),Te=t("p",null,[t("img",{src:c,alt:"new command not found error message"})],-1),Se=e("The error message when an external command is not found has been improved. Nu now displays fancy "),Fe={href:"https://github.com/zkat/miette",target:"_blank",rel:"noopener noreferrer"},We=t("code",null,"miette",-1),Ie=e(" errors on all platforms including Windows, and it offers helpful suggestions for typos and mistaken command names."),Re={id:"windows-cmd-exe-changes-rgwood",tabindex:"-1"},Ce=t("a",{class:"header-anchor",href:"#windows-cmd-exe-changes-rgwood","aria-hidden":"true"},"#",-1),Ee=e(" Windows "),ze=t("code",null,"cmd.exe",-1),Ve=e(" changes ("),Pe={href:"https://github.com/nushell/nushell/pulls?q=is%3Apr+is%3Aclosed+author%3Argwood+cmd",target:"_blank",rel:"noopener noreferrer"},je=e("rgwood"),Be=e(")"),Ue=e('Potentially breaking change: Nu no longer "shells out" to '),Le=t("code",null,"cmd.exe",-1),Me=e(" for any command that can't be found - only "),Oe={href:"https://github.com/rgwood/nushell/blob/00bace9e82d3f3e3e337c510ce6cef0818ade7aa/crates/nu-command/src/system/run_external.rs#L134",target:"_blank",rel:"noopener noreferrer"},De=e("a few known "),Qe=t("code",null,"cmd.exe",-1),Ye=e(" internal commands"),$e=e(". This change improves error handling and error messages, but let us know if it causes you any trouble."),He=t("h2",{id:"bits-and-bytes-hustcer-and-windsoilder",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#bits-and-bytes-hustcer-and-windsoilder","aria-hidden":"true"},"#"),e(" Bits and Bytes (hustcer and WindSoilder)")],-1),Ge=t("p",null,[e("Nushell now has a full array of "),t("code",null,"bits"),e(" and "),t("code",null,"bytes"),e(" commands for working with binary data. @hustcer and @WindSoilder implemented the following:")],-1),Xe={href:"https://github.com/nushell/nushell/pull/6224",target:"_blank",rel:"noopener noreferrer"},Ke=e("bits ror and bits rol"),Je={href:"https://github.com/nushell/nushell/pull/6202",target:"_blank",rel:"noopener noreferrer"},Ze=e("bits shl and bits shr"),et={href:"https://github.com/nushell/nushell/pull/6190",target:"_blank",rel:"noopener noreferrer"},tt=e("bits or and bits xor"),ot={href:"https://github.com/nushell/nushell/pull/6188",target:"_blank",rel:"noopener noreferrer"},nt=e("bits root command and bits and"),st={href:"https://github.com/nushell/nushell/pull/6143",target:"_blank",rel:"noopener noreferrer"},rt=e("bits not"),lt={id:"hiding-environment-variables-kubouch",tabindex:"-1"},ht=t("a",{class:"header-anchor",href:"#hiding-environment-variables-kubouch","aria-hidden":"true"},"#",-1),it=e(" Hiding Environment Variables ("),at={href:"https://github.com/nushell/nushell/pull/6313",target:"_blank",rel:"noopener noreferrer"},dt=e("kubouch"),_t=e(")"),ct=s(`<p>A new <code>hide-env</code> command is added that can hide environmnet variables in the current scope. <code>hide</code> still retains this functionality, but in the future, we expect <code>hide</code> to be able to hide only parser definitions (commands and aliases). It is therefore recommended to change your <code>hide</code> calls to <code>hide-env</code> when dealing with environment variables.</p><p>Unlike <code>hide</code>, <code>hide-env</code> has a slightly different signature: It accepts multiple arguments and the arguments can be constructed dynamically:</p><div class="language-text ext-text"><pre class="language-text"><code>&gt; load-env {
    ENV_FOO: &#39;foo&#39;
    ENV_BAR: &#39;bar&#39;
}

&gt; let prefix = &#39;ENV_&#39;

&gt; hide-env ($prefix + &#39;FOO&#39;) ($prefix + &#39;BAR&#39;)
</code></pre></div>`,3),ut={id:"prefixed-overlays-kubouch",tabindex:"-1"},pt=t("a",{class:"header-anchor",href:"#prefixed-overlays-kubouch","aria-hidden":"true"},"#",-1),gt=e(" Prefixed Overlays ("),ft={href:"https://github.com/nushell/nushell/pull/6301",target:"_blank",rel:"noopener noreferrer"},bt=e("kubouch"),mt=e(")"),kt=t("p",null,[e("The "),t("code",null,"overlay add spam"),e(" command would take all commands and aliases from the module and put them directly into the current namespace. Sometimes, however, you might want them behind a prefix. That's what "),t("code",null,"--prefix"),e(" is for. Here is an example:")],-1),wt=t("div",{class:"language-text ext-text"},[t("pre",{class:"language-text"},[t("code",null,`> module spam {
    export def foo [] { "foo" }
}

> overlay add --prefix spam

> spam foo
foo
`)])],-1),vt={id:"customize-added-overlay-name-kubouch",tabindex:"-1"},yt=t("a",{class:"header-anchor",href:"#customize-added-overlay-name-kubouch","aria-hidden":"true"},"#",-1),xt=e(" Customize Added Overlay Name ("),Nt={href:"https://github.com/nushell/nushell/pull/6314",target:"_blank",rel:"noopener noreferrer"},At=e("kubouch"),qt=e(")"),Tt=s(`<p>You can now change the name of the added overlay using the new <code>as</code> keyword:</p><div class="language-text ext-text"><pre class="language-text"><code>&gt; module spam { export def foo [] { &quot;foo&quot; } }

&gt; overlay add spam as eggs

&gt; overlay list | last
eggs

&gt; foo
foo

&gt; overlay remove eggs
</code></pre></div><p>This can be useful if you have a generic script name, such as virtualenv&#39;s <code>activate.nu</code> but you want some more descriptive name for your overlay.</p><p>It is also compatible with the <code>--prefix</code> flag introduced above.</p><h1 id="next-steps" tabindex="-1"><a class="header-anchor" href="#next-steps" aria-hidden="true">#</a> Next Steps</h1><p>Time for a new engine!</p>`,6),St=e("We've been looking through the fixes we'd need for some of the issues we're seeing and decided Nushell's core needs a thorough refactor. On "),Ft={href:"https://kubouch.notion.site/4db276462ba24704919edb4cc4b86be7?v=10506505557f4f7b9a65155128c04250",target:"_blank",rel:"noopener noreferrer"},Wt=e("this Notion page"),It=e(" we started gathering ideas and design notes about features that we think should make it to the update. You can click the cards and they should expand into more detailed notes."),Rt=e("Many (most?) ideas are not polished yet and we need to work on the full design before we start the implementation. Therefore, we would like you to invite you to participate in the discussion. If you have questions, comments and ideas, please channel them to our "),Ct=t("code",null,"#design-discussion",-1),Et=e(" channel on "),zt={href:"https://discord.com/invite/NtAbbGn",target:"_blank",rel:"noopener noreferrer"},Vt=e("our Discord"),Pt=e(`. We especially welcome thorough design writeups. You can even "adopt" a topic and specialize in it, if you wish. And of course, later, we'll need help implementing everything.`),jt=t("p",null,"By the end of this, we'll be heading towards 0.80 which should have all, or most of, the features we want for 1.0 and the work from 0.80 to 1.0 is expected to be mostly polish, bugfixes, IDE integrations, stabilizing the language, etc.",-1),Bt=t("p",null,"Oh, and if you're scared this will turn into another engine-q, this time our goal is to try to make the updates incrementally instead of building a new Nushell on the side and then replacing everything.",-1),Ut=t("h1",{id:"full-changelog",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#full-changelog","aria-hidden":"true"},"#"),e(" Full changelog")],-1),Lt=t("h2",{id:"nushell",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell","aria-hidden":"true"},"#"),e(" Nushell")],-1),Mt=e("jt created "),Ot={href:"https://github.com/nushell/nushell/pull/6336",target:"_blank",rel:"noopener noreferrer"},Dt=e("bump to 0.67"),Qt=e(", and "),Yt={href:"https://github.com/nushell/nushell/pull/6268",target:"_blank",rel:"noopener noreferrer"},$t=e("Fix intermittent test crash"),Ht=e(", and "),Gt={href:"https://github.com/nushell/nushell/pull/6267",target:"_blank",rel:"noopener noreferrer"},Xt=e("bump dev version ahead of language changes"),Kt=e(", and "),Jt={href:"https://github.com/nushell/nushell/pull/6175",target:"_blank",rel:"noopener noreferrer"},Zt=e("Move "),eo=t("code",null,"ls",-1),to=e(" back to last-known-good state"),oo=e(", and "),no={href:"https://github.com/nushell/nushell/pull/6169",target:"_blank",rel:"noopener noreferrer"},so=e("Revert cp and mv back to last-known-good state"),ro=e("skelly37 created "),lo={href:"https://github.com/nushell/nushell/pull/6329",target:"_blank",rel:"noopener noreferrer"},ho=e("Bug issue template"),io=e("sholderbach created "),ao={href:"https://github.com/nushell/nushell/pull/6327",target:"_blank",rel:"noopener noreferrer"},_o=e("Update to reedline 0.10.0"),co=e(", and "),uo={href:"https://github.com/nushell/nushell/pull/6326",target:"_blank",rel:"noopener noreferrer"},po=e("Update reedline to improved undo-system"),go=e(", and "),fo={href:"https://github.com/nushell/nushell/pull/6299",target:"_blank",rel:"noopener noreferrer"},bo=e("Clippy fix for Rust 1.63"),mo=e(", and "),ko={href:"https://github.com/nushell/nushell/pull/6215",target:"_blank",rel:"noopener noreferrer"},wo=e("Reduce dev-deps by narrowing "),vo=t("code",null,"rstest",-1),yo=e(" features"),xo=e(", and "),No={href:"https://github.com/nushell/nushell/pull/6211",target:"_blank",rel:"noopener noreferrer"},Ao=e("Make "),qo=t("code",null,"open",-1),To=e(" test independent of locale"),So=e(", and "),Fo={href:"https://github.com/nushell/nushell/pull/6210",target:"_blank",rel:"noopener noreferrer"},Wo=e("Patch "),Io=t("code",null,"lscolors",-1),Ro=e(" to not blink"),Co=e(", and "),Eo={href:"https://github.com/nushell/nushell/pull/6172",target:"_blank",rel:"noopener noreferrer"},zo=e("Update crossterm to version 0.24"),Vo=e("elferherrera created "),Po={href:"https://github.com/nushell/nushell/pull/6321",target:"_blank",rel:"noopener noreferrer"},jo=e("lazy dataframe reader"),Bo=e(", and "),Uo={href:"https://github.com/nushell/nushell/pull/6303",target:"_blank",rel:"noopener noreferrer"},Lo=e("Polars upgrade 0.23"),Mo=e(", and "),Oo={href:"https://github.com/nushell/nushell/pull/6217",target:"_blank",rel:"noopener noreferrer"},Do=e("sqlite query without collect"),Qo=e(", and "),Yo={href:"https://github.com/nushell/nushell/pull/6205",target:"_blank",rel:"noopener noreferrer"},$o=e("use "),Ho=t("code",null,"from table",-1),Go=e(" to remove into-db command"),Xo=e(", and "),Ko={href:"https://github.com/nushell/nushell/pull/6161",target:"_blank",rel:"noopener noreferrer"},Jo=e("maintain quotes for arguments"),Zo=e("amtep created "),en={href:"https://github.com/nushell/nushell/pull/6320",target:"_blank",rel:"noopener noreferrer"},tn=e("Add repository info to all workspace crates"),on=e("rgwood created "),nn={href:"https://github.com/nushell/nushell/pull/6317",target:"_blank",rel:"noopener noreferrer"},sn=e("Bump chrono dependency to fix panic"),rn=e(", and "),ln={href:"https://github.com/nushell/nushell/pull/6311",target:"_blank",rel:"noopener noreferrer"},hn=e("run_external: only suggest alternatives when file not found"),an=e(", and "),dn={href:"https://github.com/nushell/nushell/pull/6308",target:"_blank",rel:"noopener noreferrer"},_n=e("Clarify external command error"),cn=e(", and "),un={href:"https://github.com/nushell/nushell/pull/6281",target:"_blank",rel:"noopener noreferrer"},pn=e("Fix unused import warning on Linux+Mac"),gn=e(", and "),fn={href:"https://github.com/nushell/nushell/pull/6279",target:"_blank",rel:"noopener noreferrer"},bn=e("Temporary: ignore Windows tests that fail on a local machine"),mn=e(", and "),kn={href:"https://github.com/nushell/nushell/pull/6278",target:"_blank",rel:"noopener noreferrer"},wn=e("Support running batch files without typing their extension"),vn=e(", and "),yn={href:"https://github.com/nushell/nushell/pull/6260",target:"_blank",rel:"noopener noreferrer"},xn=e("Clean up deprecated commands"),Nn=e(", and "),An={href:"https://github.com/nushell/nushell/pull/6256",target:"_blank",rel:"noopener noreferrer"},qn=e("Suggest alternative when command not found"),Tn=e(", and "),Sn={href:"https://github.com/nushell/nushell/pull/6253",target:"_blank",rel:"noopener noreferrer"},Fn=e("Windows: only shell out to cmd for specific commands"),Wn=e(", and "),In={href:"https://github.com/nushell/nushell/pull/6204",target:"_blank",rel:"noopener noreferrer"},Rn=e("Faster SQLite reads"),Cn=e(", and "),En={href:"https://github.com/nushell/nushell/pull/6200",target:"_blank",rel:"noopener noreferrer"},zn=e("Change "),Vn=t("code",null,"query",-1),Pn=e(" command to "),jn=t("code",null,"query db",-1),Bn=e(", and "),Un={href:"https://github.com/nushell/nushell/pull/6194",target:"_blank",rel:"noopener noreferrer"},Ln=e("Add $OLDPWD example for cd"),Mn=e("kubouch created "),On={href:"https://github.com/nushell/nushell/pull/6314",target:"_blank",rel:"noopener noreferrer"},Dn=e("Add 'as' keyword to 'overlay add'"),Qn=e(", and "),Yn={href:"https://github.com/nushell/nushell/pull/6313",target:"_blank",rel:"noopener noreferrer"},$n=e("Add "),Hn=t("code",null,"hide-env",-1),Gn=e(" to hide environment variables"),Xn=e(", and "),Kn={href:"https://github.com/nushell/nushell/pull/6309",target:"_blank",rel:"noopener noreferrer"},Jn=e("Fix environment merging in hooks"),Zn=e(", and "),es={href:"https://github.com/nushell/nushell/pull/6301",target:"_blank",rel:"noopener noreferrer"},ts=e("Allow overlays to import prefixed definitions"),os=e(", and "),ns={href:"https://github.com/nushell/nushell/pull/6185",target:"_blank",rel:"noopener noreferrer"},ss=e("Fix file lookup in parser keywords; Refactor nu_repl"),rs=e(", and "),ls={href:"https://github.com/nushell/nushell/pull/6168",target:"_blank",rel:"noopener noreferrer"},hs=e("Quickly patch wrong 'export' command name"),is=e(", and "),as={href:"https://github.com/nushell/nushell/pull/6162",target:"_blank",rel:"noopener noreferrer"},ds=e("Allow modules to "),_s=t("code",null,"use",-1),cs=e(" other modules"),us=e("andrasio created "),ps={href:"https://github.com/nushell/nushell/pull/6312",target:"_blank",rel:"noopener noreferrer"},gs=e("cmd(df/first): returns the first row by default."),fs=e("WindSoilder created "),bs={href:"https://github.com/nushell/nushell/pull/6306",target:"_blank",rel:"noopener noreferrer"},ms=e("make "),ks=t("code",null,"date format",-1),ws=e(" supports locale"),vs=e(", and "),ys={href:"https://github.com/nushell/nushell/pull/6304",target:"_blank",rel:"noopener noreferrer"},xs=e("not resolve symlink"),Ns=e(", and "),As={href:"https://github.com/nushell/nushell/pull/6261",target:"_blank",rel:"noopener noreferrer"},qs=e("when spawned process during register plugin, pass env to child process"),Ts=e(", and "),Ss={href:"https://github.com/nushell/nushell/pull/6255",target:"_blank",rel:"noopener noreferrer"},Fs=e("add -n for path expand, so it doesn't follow symlink"),Ws=e(", and "),Is={href:"https://github.com/nushell/nushell/pull/6242",target:"_blank",rel:"noopener noreferrer"},Rs=e("fix python plugin example"),Cs=e(", and "),Es={href:"https://github.com/nushell/nushell/pull/6206",target:"_blank",rel:"noopener noreferrer"},zs=e("In unix like system, set foreground process while running external command"),Vs=e(", and "),Ps={href:"https://github.com/nushell/nushell/pull/6176",target:"_blank",rel:"noopener noreferrer"},js=e("Make default env works better with bash style PATH"),Bs=e(", and "),Us={href:"https://github.com/nushell/nushell/pull/6143",target:"_blank",rel:"noopener noreferrer"},Ls=e("Add bits not command"),Ms=e("fdncred created "),Os={href:"https://github.com/nushell/nushell/pull/6305",target:"_blank",rel:"noopener noreferrer"},Ds=e("make ci use rust-toolchain.toml"),Qs=e(", and "),Ys={href:"https://github.com/nushell/nushell/pull/6298",target:"_blank",rel:"noopener noreferrer"},$s=e("add rust toolchain file to pin rust version"),Hs=e(", and "),Gs={href:"https://github.com/nushell/nushell/pull/6296",target:"_blank",rel:"noopener noreferrer"},Xs=e("update build scripts"),Ks=e(", and "),Js={href:"https://github.com/nushell/nushell/pull/6292",target:"_blank",rel:"noopener noreferrer"},Zs=e(`Revert "Allow using the system's copy of zstd for Polars"`),er=e(", and "),tr={href:"https://github.com/nushell/nushell/pull/6291",target:"_blank",rel:"noopener noreferrer"},or=e("update a few nushell dependencies"),nr=e(", and "),sr={href:"https://github.com/nushell/nushell/pull/6290",target:"_blank",rel:"noopener noreferrer"},rr=e("remove sharkdp's lscolors repo again"),lr=e(", and "),hr={href:"https://github.com/nushell/nushell/pull/6288",target:"_blank",rel:"noopener noreferrer"},ir=e("add search terms to ignore command"),ar=e(", and "),dr={href:"https://github.com/nushell/nushell/pull/6272",target:"_blank",rel:"noopener noreferrer"},_r=e("bump lscolors to v12.0"),cr=e(", and "),ur={href:"https://github.com/nushell/nushell/pull/6271",target:"_blank",rel:"noopener noreferrer"},pr=e("escape single quotes and remove ansi escape sequences"),gr=e(", and "),fr={href:"https://github.com/nushell/nushell/pull/6266",target:"_blank",rel:"noopener noreferrer"},br=e("new command "),mr=t("code",null,"into sqlite",-1),kr=e(" allows you to take lists and create a sqlite database"),wr=e(", and "),vr={href:"https://github.com/nushell/nushell/pull/6259",target:"_blank",rel:"noopener noreferrer"},yr=e("add more verbose error messages to mv"),xr=e(", and "),Nr={href:"https://github.com/nushell/nushell/pull/6230",target:"_blank",rel:"noopener noreferrer"},Ar=e("point to the latest main branch for lscolors"),qr=e(", and "),Tr={href:"https://github.com/nushell/nushell/pull/6228",target:"_blank",rel:"noopener noreferrer"},Sr=e("remove the nana filename string, add some exclusions to gitignore"),Fr=e(", and "),Wr={href:"https://github.com/nushell/nushell/pull/6227",target:"_blank",rel:"noopener noreferrer"},Ir=e("replace the regex crate with the fancy-regex crate"),Rr=e(", and "),Cr={href:"https://github.com/nushell/nushell/pull/6199",target:"_blank",rel:"noopener noreferrer"},Er=e("allow uppercase chars to be captured during suppressed input"),zr=e(", and "),Vr={href:"https://github.com/nushell/nushell/pull/6163",target:"_blank",rel:"noopener noreferrer"},Pr=e("add a new welcome banner to nushell"),jr=e(", and "),Br={href:"https://github.com/nushell/nushell/pull/6153",target:"_blank",rel:"noopener noreferrer"},Ur=e("move application reset mode ansi sequence after cmdline execute"),Lr=e("nibon7 created "),Mr={href:"https://github.com/nushell/nushell/pull/6293",target:"_blank",rel:"noopener noreferrer"},Or=e("Add custom log target to debugging tips"),Dr=e(", and "),Qr={href:"https://github.com/nushell/nushell/pull/6289",target:"_blank",rel:"noopener noreferrer"},Yr=e("Fix panic when building without git"),$r=e(", and "),Hr={href:"https://github.com/nushell/nushell/pull/6285",target:"_blank",rel:"noopener noreferrer"},Gr=e("Fix color settings for logger"),Xr=e(", and "),Kr={href:"https://github.com/nushell/nushell/pull/6284",target:"_blank",rel:"noopener noreferrer"},Jr=e("Return error when moving a source directory to a target directory whi\u2026"),Zr=e(", and "),el={href:"https://github.com/nushell/nushell/pull/6274",target:"_blank",rel:"noopener noreferrer"},tl=e("Replace pretty_env_logger with simplelog"),ol=e(", and "),nl={href:"https://github.com/nushell/nushell/pull/6262",target:"_blank",rel:"noopener noreferrer"},sl=e("Refactor shell listing related code"),rl=e(", and "),ll={href:"https://github.com/nushell/nushell/pull/6258",target:"_blank",rel:"noopener noreferrer"},hl=e("Refactor shell switching related code"),il=e(", and "),al={href:"https://github.com/nushell/nushell/pull/6249",target:"_blank",rel:"noopener noreferrer"},dl=e("Make "),_l=t("code",null,"g -",-1),cl=e(" switch to the last used shell "),ul=e(", and "),pl={href:"https://github.com/nushell/nushell/pull/6236",target:"_blank",rel:"noopener noreferrer"},gl=e("export "),fl=t("code",null,"get_shells",-1),bl=e(" and "),ml=t("code",null,"get_current_shell",-1),kl=e(", and "),wl={href:"https://github.com/nushell/nushell/pull/6234",target:"_blank",rel:"noopener noreferrer"},vl=e("Fix color parsing"),yl=e(", and "),xl={href:"https://github.com/nushell/nushell/pull/6193",target:"_blank",rel:"noopener noreferrer"},Nl=e("Return error early if seconds part of timestamp is invalid"),Al=e(", and "),ql={href:"https://github.com/nushell/nushell/pull/6181",target:"_blank",rel:"noopener noreferrer"},Tl=e("Fix touch panics when using invalid timestamp"),Sl=e(", and "),Fl={href:"https://github.com/nushell/nushell/pull/6173",target:"_blank",rel:"noopener noreferrer"},Wl=e("Fix path_contains_hidden_folder"),Il=e(", and "),Rl={href:"https://github.com/nushell/nushell/pull/6171",target:"_blank",rel:"noopener noreferrer"},Cl=e("Prevent mv panic again"),El=e(", and "),zl={href:"https://github.com/nushell/nushell/pull/6158",target:"_blank",rel:"noopener noreferrer"},Vl=e("Prevent mv panic"),Pl=e("merelymyself created "),jl={href:"https://github.com/nushell/nushell/pull/6246",target:"_blank",rel:"noopener noreferrer"},Bl=e("fix examples and let "),Ul=t("code",null,"into decimal",-1),Ll=e(" convert bools too"),Ml=e(", and "),Ol={href:"https://github.com/nushell/nushell/pull/6220",target:"_blank",rel:"noopener noreferrer"},Dl=e("make "),Ql=t("code",null,"cd",-1),Yl=e(", "),$l=t("code",null,"cp",-1),Hl=e(", "),Gl=t("code",null,"ls",-1),Xl=e(", "),Kl=t("code",null,"mv",-1),Jl=e(", "),Zl=t("code",null,"open",-1),eh=e(" and "),th=t("code",null,"rm",-1),oh=e(" automatically strip ansi codes"),nh=e(", and "),sh={href:"https://github.com/nushell/nushell/pull/6189",target:"_blank",rel:"noopener noreferrer"},rh=e("allow "),lh=t("code",null,"-h",-1),hh=e(" flags for "),ih=t("code",null,"export",-1),ah=e(" subcommands"),dh=e(", and "),_h={href:"https://github.com/nushell/nushell/pull/6149",target:"_blank",rel:"noopener noreferrer"},ch=e("adds a "),uh=t("code",null,"config reset",-1),ph=e(" command"),gh=e("Kangaxx-0 created "),fh={href:"https://github.com/nushell/nushell/pull/6241",target:"_blank",rel:"noopener noreferrer"},bh=e("Fix issue 6223"),mh=e(", and "),kh={href:"https://github.com/nushell/nushell/pull/6187",target:"_blank",rel:"noopener noreferrer"},wh=e("Tweak how nu identifies custom command"),vh=e("hustcer created "),yh={href:"https://github.com/nushell/nushell/pull/6235",target:"_blank",rel:"noopener noreferrer"},xh=e("upgrade chrono to v0.4.20"),Nh=e(", and "),Ah={href:"https://github.com/nushell/nushell/pull/6226",target:"_blank",rel:"noopener noreferrer"},qh=e("Some code refactor for shells related commands"),Th=e(", and "),Sh={href:"https://github.com/nushell/nushell/pull/6224",target:"_blank",rel:"noopener noreferrer"},Fh=e("add "),Wh=t("code",null,"bits ror",-1),Ih=e(" and "),Rh=t("code",null,"bits rol",-1),Ch=e(" commands"),Eh=e(", and "),zh={href:"https://github.com/nushell/nushell/pull/6202",target:"_blank",rel:"noopener noreferrer"},Vh=e("Add "),Ph=t("code",null,"bits shl",-1),jh=e(" and "),Bh=t("code",null,"bits shr",-1),Uh=e(" command"),Lh=e(", and "),Mh={href:"https://github.com/nushell/nushell/pull/6190",target:"_blank",rel:"noopener noreferrer"},Oh=e("Add "),Dh=t("code",null,"bits or",-1),Qh=e(" and "),Yh=t("code",null,"bits xor",-1),$h=e(" command"),Hh=e(", and "),Gh={href:"https://github.com/nushell/nushell/pull/6188",target:"_blank",rel:"noopener noreferrer"},Xh=e("Add bits root command and "),Kh=t("code",null,"bits and",-1),Jh=e(" command"),Zh=e(", and "),ei={href:"https://github.com/nushell/nushell/pull/6183",target:"_blank",rel:"noopener noreferrer"},ti=e("bump to 0.66.3 dev version"),oi=e("winterqt created "),ni={href:"https://github.com/nushell/nushell/pull/6232",target:"_blank",rel:"noopener noreferrer"},si=e("Allow using the system's copy of zstd for Polars"),ri=e("x3rAx created "),li={href:"https://github.com/nushell/nushell/pull/6085",target:"_blank",rel:"noopener noreferrer"},hi=e("Add decimals to int when using "),ii=t("code",null,"into string --decimals",-1),ai=t("h2",{id:"extension",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#extension","aria-hidden":"true"},"#"),e(" Extension")],-1),di=e("fdncred created "),_i={href:"https://github.com/nushell/vscode-nushell-lang/pull/58",target:"_blank",rel:"noopener noreferrer"},ci=e("one last tweak before release"),ui=e(", and "),pi={href:"https://github.com/nushell/vscode-nushell-lang/pull/57",target:"_blank",rel:"noopener noreferrer"},gi=e("prepare for new release"),fi=e(", and "),bi={href:"https://github.com/nushell/vscode-nushell-lang/pull/56",target:"_blank",rel:"noopener noreferrer"},mi=e("update gitignore"),ki=e("Yethal created "),wi={href:"https://github.com/nushell/vscode-nushell-lang/pull/54",target:"_blank",rel:"noopener noreferrer"},vi=e("Updated patterns and added generation script"),yi=t("h2",{id:"documentation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),e(" Documentation")],-1),xi=e("amtoine created "),Ni={href:"https://github.com/nushell/nushell.github.io/pull/562",target:"_blank",rel:"noopener noreferrer"},Ai=e("FIX: there is a minor typo in the modules page"),qi=e(", and "),Ti={href:"https://github.com/nushell/nushell.github.io/pull/552",target:"_blank",rel:"noopener noreferrer"},Si=e("FIX: update the links to the default config files"),Fi=e("johnae created "),Wi={href:"https://github.com/nushell/nushell.github.io/pull/561",target:"_blank",rel:"noopener noreferrer"},Ii=e("Update direnv.md"),Ri=e(", and "),Ci={href:"https://github.com/nushell/nushell.github.io/pull/555",target:"_blank",rel:"noopener noreferrer"},Ei=e("Update config.js/cookbook with direnv example"),zi=e(", and "),Vi={href:"https://github.com/nushell/nushell.github.io/pull/554",target:"_blank",rel:"noopener noreferrer"},Pi=e("Create direnv.md"),ji=e("azzamsa created "),Bi={href:"https://github.com/nushell/nushell.github.io/pull/560",target:"_blank",rel:"noopener noreferrer"},Ui=e("docs: fix grammar error"),Li=e(", and "),Mi={href:"https://github.com/nushell/nushell.github.io/pull/559",target:"_blank",rel:"noopener noreferrer"},Oi=e("docs: contributing workflow is outdated"),Di=e(", and "),Qi={href:"https://github.com/nushell/nushell.github.io/pull/558",target:"_blank",rel:"noopener noreferrer"},Yi=e("fix: all clickable items should have the same color"),$i=e("kubouch created "),Hi={href:"https://github.com/nushell/nushell.github.io/pull/557",target:"_blank",rel:"noopener noreferrer"},Gi=e("Document hide-env and overlay additions"),Xi=e("willemneal created "),Ki={href:"https://github.com/nushell/nushell.github.io/pull/553",target:"_blank",rel:"noopener noreferrer"},Ji=e("chore: small edit"),Zi=e("jeremiahpslewis created "),ea={href:"https://github.com/nushell/nushell.github.io/pull/550",target:"_blank",rel:"noopener noreferrer"},ta=e("Update links to config template"),oa=e("rgwood created "),na={href:"https://github.com/nushell/nushell.github.io/pull/549",target:"_blank",rel:"noopener noreferrer"},sa=e("Document SQLite data loading"),ra=e(", and "),la={href:"https://github.com/nushell/nushell.github.io/pull/546",target:"_blank",rel:"noopener noreferrer"},ha=e("Explain how to launch Nu after installing"),ia=e("petrisch created "),aa={href:"https://github.com/nushell/nushell.github.io/pull/548",target:"_blank",rel:"noopener noreferrer"},da=e("DE Translation for Coloring and Theming "),_a=e("fdncred created "),ca={href:"https://github.com/nushell/nushell.github.io/pull/547",target:"_blank",rel:"noopener noreferrer"},ua=e("update gitignore"),pa=t("h2",{id:"nu-scripts",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nu-scripts","aria-hidden":"true"},"#"),e(" Nu_Scripts")],-1),ga=e("johnae created "),fa={href:"https://github.com/nushell/nu_scripts/pull/276",target:"_blank",rel:"noopener noreferrer"},ba=e("Update direnv example to run in pre_prompt rather than env_change"),ma=e(", and "),ka={href:"https://github.com/nushell/nu_scripts/pull/272",target:"_blank",rel:"noopener noreferrer"},wa=e("Add direnv config example."),va=e("fantasyzhjk created "),ya={href:"https://github.com/nushell/nu_scripts/pull/274",target:"_blank",rel:"noopener noreferrer"},xa=e("add rbenv script"),Na=e("fdncred created "),Aa={href:"https://github.com/nushell/nu_scripts/pull/271",target:"_blank",rel:"noopener noreferrer"},qa=e("update some scripts from dash to underscore, add 20k_club script"),Ta=e(", and "),Sa={href:"https://github.com/nushell/nu_scripts/pull/270",target:"_blank",rel:"noopener noreferrer"},Fa=e("update gitignore"),Wa=e(", and "),Ia={href:"https://github.com/nushell/nu_scripts/pull/269",target:"_blank",rel:"noopener noreferrer"},Ra=e("winget: switch kebab case parameters to snake case"),Ca=e("WindSoilder created "),Ea={href:"https://github.com/nushell/nu_scripts/pull/268",target:"_blank",rel:"noopener noreferrer"},za=e("Migrate some scripts to fit new variable and arguments naming style"),Va=e("skelly37 created "),Pa={href:"https://github.com/nushell/nu_scripts/pull/267",target:"_blank",rel:"noopener noreferrer"},ja=e("Unspanned error"),Ba=t("h2",{id:"reedline",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#reedline","aria-hidden":"true"},"#"),e(" reedline")],-1),Ua=e("sholderbach created "),La={href:"https://github.com/nushell/reedline/pull/463",target:"_blank",rel:"noopener noreferrer"},Ma=e("Prepare 0.10.0 release"),Oa=e(", and "),Da={href:"https://github.com/nushell/reedline/pull/462",target:"_blank",rel:"noopener noreferrer"},Qa=e("Clippy fix for tests"),Ya=e(", and "),$a={href:"https://github.com/nushell/reedline/pull/458",target:"_blank",rel:"noopener noreferrer"},Ha=e("Reduce dev-deps by narrowing "),Ga=t("code",null,"rstest",-1),Xa=e(" features"),Ka=e(", and "),Ja={href:"https://github.com/nushell/reedline/pull/457",target:"_blank",rel:"noopener noreferrer"},Za=e("Export the crossterm key types"),ed=e(", and "),td={href:"https://github.com/nushell/reedline/pull/447",target:"_blank",rel:"noopener noreferrer"},od=e("Update crossterm to 0.24"),nd=e("morzel85 created "),sd={href:"https://github.com/nushell/reedline/pull/461",target:"_blank",rel:"noopener noreferrer"},rd=e("Ctrl+h edit binding moved from emacs to common"),ld=e("bnprks created "),hd={href:"https://github.com/nushell/reedline/pull/460",target:"_blank",rel:"noopener noreferrer"},id=e("Improve undo functionality"),ad=e(", and "),dd={href:"https://github.com/nushell/reedline/pull/459",target:"_blank",rel:"noopener noreferrer"},_d=e("Vi mode add support for d0, d^, c0, and c^"),cd=e("fdncred created "),ud={href:"https://github.com/nushell/reedline/pull/455",target:"_blank",rel:"noopener noreferrer"},pd=e("update gitignore");function gd(fd,bd){const o=l("ExternalLinkIcon");return h(),i("div",null,[p,g,f,a(" more "),b,t("p",null,[m,t("a",k,[w,n(o)]),v,t("a",y,[x,n(o)]),N,A,q]),T,S,F,t("h2",W,[I,R,t("a",C,[E,n(o)]),z]),V,P,j,t("h2",B,[U,L,t("a",M,[O,n(o)]),D]),Q,t("h2",Y,[$,H,t("a",G,[X,n(o)]),K]),J,Z,ee,t("h2",te,[oe,ne,t("a",se,[re,n(o)]),le]),he,ie,ae,t("h2",de,[_e,ce,t("a",ue,[pe,n(o)]),ge]),t("p",null,[fe,t("a",be,[me,n(o)]),ke]),we,t("h2",ve,[ye,xe,t("a",Ne,[Ae,n(o)]),qe]),Te,t("p",null,[Se,t("a",Fe,[We,n(o)]),Ie]),t("h2",Re,[Ce,Ee,ze,Ve,t("a",Pe,[je,n(o)]),Be]),t("p",null,[Ue,Le,Me,t("a",Oe,[De,Qe,Ye,n(o)]),$e]),He,Ge,t("ul",null,[t("li",null,[t("a",Xe,[Ke,n(o)])]),t("li",null,[t("a",Je,[Ze,n(o)])]),t("li",null,[t("a",et,[tt,n(o)])]),t("li",null,[t("a",ot,[nt,n(o)])]),t("li",null,[t("a",st,[rt,n(o)])])]),t("h2",lt,[ht,it,t("a",at,[dt,n(o)]),_t]),ct,t("h2",ut,[pt,gt,t("a",ft,[bt,n(o)]),mt]),kt,wt,t("h2",vt,[yt,xt,t("a",Nt,[At,n(o)]),qt]),Tt,t("p",null,[St,t("a",Ft,[Wt,n(o)]),It]),t("p",null,[Rt,Ct,Et,t("a",zt,[Vt,n(o)]),Pt]),jt,Bt,Ut,Lt,t("ul",null,[t("li",null,[Mt,t("a",Ot,[Dt,n(o)]),Qt,t("a",Yt,[$t,n(o)]),Ht,t("a",Gt,[Xt,n(o)]),Kt,t("a",Jt,[Zt,eo,to,n(o)]),oo,t("a",no,[so,n(o)])]),t("li",null,[ro,t("a",lo,[ho,n(o)])]),t("li",null,[io,t("a",ao,[_o,n(o)]),co,t("a",uo,[po,n(o)]),go,t("a",fo,[bo,n(o)]),mo,t("a",ko,[wo,vo,yo,n(o)]),xo,t("a",No,[Ao,qo,To,n(o)]),So,t("a",Fo,[Wo,Io,Ro,n(o)]),Co,t("a",Eo,[zo,n(o)])]),t("li",null,[Vo,t("a",Po,[jo,n(o)]),Bo,t("a",Uo,[Lo,n(o)]),Mo,t("a",Oo,[Do,n(o)]),Qo,t("a",Yo,[$o,Ho,Go,n(o)]),Xo,t("a",Ko,[Jo,n(o)])]),t("li",null,[Zo,t("a",en,[tn,n(o)])]),t("li",null,[on,t("a",nn,[sn,n(o)]),rn,t("a",ln,[hn,n(o)]),an,t("a",dn,[_n,n(o)]),cn,t("a",un,[pn,n(o)]),gn,t("a",fn,[bn,n(o)]),mn,t("a",kn,[wn,n(o)]),vn,t("a",yn,[xn,n(o)]),Nn,t("a",An,[qn,n(o)]),Tn,t("a",Sn,[Fn,n(o)]),Wn,t("a",In,[Rn,n(o)]),Cn,t("a",En,[zn,Vn,Pn,jn,n(o)]),Bn,t("a",Un,[Ln,n(o)])]),t("li",null,[Mn,t("a",On,[Dn,n(o)]),Qn,t("a",Yn,[$n,Hn,Gn,n(o)]),Xn,t("a",Kn,[Jn,n(o)]),Zn,t("a",es,[ts,n(o)]),os,t("a",ns,[ss,n(o)]),rs,t("a",ls,[hs,n(o)]),is,t("a",as,[ds,_s,cs,n(o)])]),t("li",null,[us,t("a",ps,[gs,n(o)])]),t("li",null,[fs,t("a",bs,[ms,ks,ws,n(o)]),vs,t("a",ys,[xs,n(o)]),Ns,t("a",As,[qs,n(o)]),Ts,t("a",Ss,[Fs,n(o)]),Ws,t("a",Is,[Rs,n(o)]),Cs,t("a",Es,[zs,n(o)]),Vs,t("a",Ps,[js,n(o)]),Bs,t("a",Us,[Ls,n(o)])]),t("li",null,[Ms,t("a",Os,[Ds,n(o)]),Qs,t("a",Ys,[$s,n(o)]),Hs,t("a",Gs,[Xs,n(o)]),Ks,t("a",Js,[Zs,n(o)]),er,t("a",tr,[or,n(o)]),nr,t("a",sr,[rr,n(o)]),lr,t("a",hr,[ir,n(o)]),ar,t("a",dr,[_r,n(o)]),cr,t("a",ur,[pr,n(o)]),gr,t("a",fr,[br,mr,kr,n(o)]),wr,t("a",vr,[yr,n(o)]),xr,t("a",Nr,[Ar,n(o)]),qr,t("a",Tr,[Sr,n(o)]),Fr,t("a",Wr,[Ir,n(o)]),Rr,t("a",Cr,[Er,n(o)]),zr,t("a",Vr,[Pr,n(o)]),jr,t("a",Br,[Ur,n(o)])]),t("li",null,[Lr,t("a",Mr,[Or,n(o)]),Dr,t("a",Qr,[Yr,n(o)]),$r,t("a",Hr,[Gr,n(o)]),Xr,t("a",Kr,[Jr,n(o)]),Zr,t("a",el,[tl,n(o)]),ol,t("a",nl,[sl,n(o)]),rl,t("a",ll,[hl,n(o)]),il,t("a",al,[dl,_l,cl,n(o)]),ul,t("a",pl,[gl,fl,bl,ml,n(o)]),kl,t("a",wl,[vl,n(o)]),yl,t("a",xl,[Nl,n(o)]),Al,t("a",ql,[Tl,n(o)]),Sl,t("a",Fl,[Wl,n(o)]),Il,t("a",Rl,[Cl,n(o)]),El,t("a",zl,[Vl,n(o)])]),t("li",null,[Pl,t("a",jl,[Bl,Ul,Ll,n(o)]),Ml,t("a",Ol,[Dl,Ql,Yl,$l,Hl,Gl,Xl,Kl,Jl,Zl,eh,th,oh,n(o)]),nh,t("a",sh,[rh,lh,hh,ih,ah,n(o)]),dh,t("a",_h,[ch,uh,ph,n(o)])]),t("li",null,[gh,t("a",fh,[bh,n(o)]),mh,t("a",kh,[wh,n(o)])]),t("li",null,[vh,t("a",yh,[xh,n(o)]),Nh,t("a",Ah,[qh,n(o)]),Th,t("a",Sh,[Fh,Wh,Ih,Rh,Ch,n(o)]),Eh,t("a",zh,[Vh,Ph,jh,Bh,Uh,n(o)]),Lh,t("a",Mh,[Oh,Dh,Qh,Yh,$h,n(o)]),Hh,t("a",Gh,[Xh,Kh,Jh,n(o)]),Zh,t("a",ei,[ti,n(o)])]),t("li",null,[oi,t("a",ni,[si,n(o)])]),t("li",null,[ri,t("a",li,[hi,ii,n(o)])])]),ai,t("ul",null,[t("li",null,[di,t("a",_i,[ci,n(o)]),ui,t("a",pi,[gi,n(o)]),fi,t("a",bi,[mi,n(o)])]),t("li",null,[ki,t("a",wi,[vi,n(o)])])]),yi,t("ul",null,[t("li",null,[xi,t("a",Ni,[Ai,n(o)]),qi,t("a",Ti,[Si,n(o)])]),t("li",null,[Fi,t("a",Wi,[Ii,n(o)]),Ri,t("a",Ci,[Ei,n(o)]),zi,t("a",Vi,[Pi,n(o)])]),t("li",null,[ji,t("a",Bi,[Ui,n(o)]),Li,t("a",Mi,[Oi,n(o)]),Di,t("a",Qi,[Yi,n(o)])]),t("li",null,[$i,t("a",Hi,[Gi,n(o)])]),t("li",null,[Xi,t("a",Ki,[Ji,n(o)])]),t("li",null,[Zi,t("a",ea,[ta,n(o)])]),t("li",null,[oa,t("a",na,[sa,n(o)]),ra,t("a",la,[ha,n(o)])]),t("li",null,[ia,t("a",aa,[da,n(o)])]),t("li",null,[_a,t("a",ca,[ua,n(o)])])]),pa,t("ul",null,[t("li",null,[ga,t("a",fa,[ba,n(o)]),ma,t("a",ka,[wa,n(o)])]),t("li",null,[va,t("a",ya,[xa,n(o)])]),t("li",null,[Na,t("a",Aa,[qa,n(o)]),Ta,t("a",Sa,[Fa,n(o)]),Wa,t("a",Ia,[Ra,n(o)])]),t("li",null,[Ca,t("a",Ea,[za,n(o)])]),t("li",null,[Va,t("a",Pa,[ja,n(o)])])]),Ba,t("ul",null,[t("li",null,[Ua,t("a",La,[Ma,n(o)]),Oa,t("a",Da,[Qa,n(o)]),Ya,t("a",$a,[Ha,Ga,Xa,n(o)]),Ka,t("a",Ja,[Za,n(o)]),ed,t("a",td,[od,n(o)])]),t("li",null,[nd,t("a",sd,[rd,n(o)])]),t("li",null,[ld,t("a",hd,[id,n(o)]),ad,t("a",dd,[_d,n(o)])]),t("li",null,[cd,t("a",ud,[pd,n(o)])])])])}const kd=r(u,[["render",gd],["__file","2022-08-16-nushell-0_67.html.vue"]]);export{kd as default};
