import{_ as o,M as i,p as a,q as l,Q as e,t as n,N as r,a1 as s}from"./framework-344bb0e4.js";const d={},h=e("h1",{id:"konfiguration-von-drittanbieter-prompts",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#konfiguration-von-drittanbieter-prompts","aria-hidden":"true"},"#"),n(" Konfiguration von Drittanbieter-Prompts")],-1),c=e("h2",{id:"nerdfonts",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nerdfonts","aria-hidden":"true"},"#"),n(" nerdfonts")],-1),p=e("p",null,"nerdfonts sind nicht zwangsweise notwendig, machen aber die Darstellung viel besser. Sie enthalten unter anderem Symbole für Betriebssysteme oder den Git-Status und graphische Formen für einen ansprechenden Prompt.",-1),u={href:"https://www.nerdfonts.com",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/ryanoasis/nerd-fonts",target:"_blank",rel:"noopener noreferrer"},f=e("h2",{id:"oh-my-posh",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#oh-my-posh","aria-hidden":"true"},"#"),n(" oh-my-posh")],-1),m={href:"https://ohmyposh.dev/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/JanDeDobbeleer/oh-my-posh",target:"_blank",rel:"noopener noreferrer"},b={href:"https://ohmyposh.dev/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://ohmyposh.dev/docs/linux#installation",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/ryanoasis/nerd-fonts",target:"_blank",rel:"noopener noreferrer"},v=e("code",null,"PROMPT_COMMAND",-1),P=e("code",null,"~/.config/nushell/config.nu",-1),D=e("code",null,"M365Princess.omp.json",-1),y={href:"https://ohmyposh.dev/docs/themes",target:"_blank",rel:"noopener noreferrer"},M=s(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> let-env PROMPT_COMMAND <span class="token operator">=</span> <span class="token punctuation">{</span> oh-my-posh <span class="token parameter variable">--config</span> ~/.poshthemes/M365Princess.omp.json <span class="token punctuation">}</span>
</code></pre></div><h2 id="starship" tabindex="-1"><a class="header-anchor" href="#starship" aria-hidden="true">#</a> Starship</h2>`,2),S={href:"https://starship.rs/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/starship/starship",target:"_blank",rel:"noopener noreferrer"},R=s('<ol><li>Den obigen Links folgen und starship installieren.</li><li>nerdfonts entsprechend persönlicher Präferenzen installieren.</li><li>Die <code>STARSHIP_SHELL</code> Umgebungsvariable auf <code>nu</code> setzen, indem der folgende Befehl ausgeführt wird: <code>let-env STARSHIP_SHELL = &quot;nu&quot;</code></li><li>Wenn die standardmäßige Uhr mit Zeit und Datum auf der rechten Seite dargestellt werden soll, sollte der folgende Befehl ausgeführt werden: <code>hide PROMPT_COMMAND_RIGHT</code></li><li>Wenn der standardmäßige Indikator verwendet werden soll, kann der folgende Befehl ausgeführt werden: <code>let-env PROMPT_INDICATOR = &quot; &quot;</code></li><li>starship kann als Prompt auf der linken Seite mit dem folgenden Befehl festgelegt werden: <code>let-env PROMPT_COMMAND = { starship prompt --cmd-duration $env.CMD_DURATION_MS $&#39;--status=($env.LAST_EXIT_CODE)&#39; | str trim }</code>. Ein Hinweis: Unter Umständen muss <code>str trim</code> in der Nushell-Prompt nicht verwendet werden, wenn starship&#39;s standardmäßig aktive Einstellung für neue Zeilen in der <code>starship.toml</code> mittels <code>add_newline = false</code> deaktiviert wurde. Es gibt Berichte, dass dies teilweise nicht gut im Zusammenspiel mit Nushell-Prompts funktioniert. Wir arbeiten noch daran!</li><li>Da Nushell Prompts auf der rechten Seite unterstützt, kann auch mit starship&#39;s Möglichkeit einer solchen Prompt experimentiert werden. Die rechte Prompt in Nushell zu setzen funktioniert identisch, wie das Setzen der Linken. Es muss lediglich <code>PROMPT_COMMAND_RIGHT</code> gesetzt werden.</li></ol><h2 id="purs" tabindex="-1"><a class="header-anchor" href="#purs" aria-hidden="true">#</a> Purs</h2>',2),x={href:"https://github.com/xcambar/purs",target:"_blank",rel:"noopener noreferrer"};function T(O,I){const t=i("ExternalLinkIcon");return a(),l("div",null,[h,c,p,e("p",null,[e("a",u,[n("Webseite"),r(t)])]),e("p",null,[e("a",_,[n("Repository"),r(t)])]),f,e("p",null,[e("a",m,[n("Webseite"),r(t)])]),e("p",null,[e("a",g,[n("Repository"),r(t)])]),e("p",null,[n("Wenn "),e("a",b,[n("oh-my-posh"),r(t)]),n(" verwendet werden soll, kann dies in wenigen Schritten für Nushell erreicht werden. Die Integration in Nushell funktioniert sehr gut. Die folgenden Schritte werden dazu benötigt:")]),e("ol",null,[e("li",null,[n("oh-my-posh installieren und die Farbschemata herunterladen entsprechend dieser "),e("a",k,[n("Anleitung"),r(t)])]),e("li",null,[n("Herunterladen und installieren einer "),e("a",w,[n("nerd font"),r(t)]),n(".")]),e("li",null,[n("Die Umgebungsvariable "),v,n(" durch hinzufügen der folgenden Zeile in "),P,n(" setzen. Den Style "),D,n(" kann man entsprechend der "),e("a",y,[n("Demo"),r(t)]),n(" beliebig ändern .")])]),M,e("p",null,[e("a",S,[n("Website"),r(t)])]),e("p",null,[e("a",N,[n("Repository"),r(t)])]),R,e("p",null,[e("a",x,[n("Repository"),r(t)])])])}const A=o(d,[["render",T],["__file","3rdpartyprompts.html.vue"]]);export{A as default};
