import{_ as s,o as n,c as o,a as e,t as a,d as r,e as i}from"./app.8034769a.js";const d={},c={id:"frontmatter-title",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),l=r(),p={style:{"white-space":"pre-wrap"}},u=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; into db </code></p><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><div class="language-text ext-text"><pre class="language-text"><code>This function is used as type hint for parser, specially if the query is not started with &#39;from table&#39;
</code></pre></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Converts an open file into a db object</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> db.sqlite <span class="token operator">|</span> into db
</code></pre></div>`,7);function _(t,f){return n(),o("div",null,[e("h1",c,[h,l,e("code",null,a(t.$frontmatter.title),1)]),e("div",p,a(t.$frontmatter.usage),1),u])}const b=s(d,[["render",_],["__file","into_db.html.vue"]]);export{b as default};
