import{_ as t,M as o,p as n,q as c,Q as e,t as s,N as l,U as d,a1 as r}from"./framework-344bb0e4.js";const _={},i=e("h1",{id:"转移到系统",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#转移到系统","aria-hidden":"true"},"#"),s(" 转移到系统")],-1),p=e("code",null,"ls",-1),u=e("code",null,"date",-1),h=e("code",null,"^",-1),g=e("code",null,"/bin/ls",-1),m=e("code",null,"ls",-1),f=r(`<p>Nu 的内部命令：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span>
</code></pre></div><p>转移到外部命令：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> ^ls
</code></pre></div>`,4);function N(x,k){const a=o("RouterLink");return n(),c("div",null,[i,e("p",null,[s('Nu 提供了一套你可以在不同操作系统中使用的命令（也成为"内部"命令），而且具备这种一致性是很有帮助的。但有时，你需要运行一个与 Nu 内部命令同名的外部命令。例如，要运行外部的'),p,s("或"),u,s("命令，你可以使用脱字符 (^) 命令。用 "),h,s(" 前缀 可以转移调用用户 PATH 中的命令（例如："),g,s("，而不是 Nu 内部的 "),l(a,{to:"/commands/docs/ls.html"},{default:d(()=>[m]),_:1}),s(" 命令）。")]),f])}const b=t(_,[["render",N],["__file","escaping.html.vue"]]);export{b as default};
