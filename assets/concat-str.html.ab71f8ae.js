import{_ as e,z as o,A as p,X as n,C as s,D as t,a6 as c}from"./framework.3d018c9f.js";const r={},i={id:"frontmatter-title-for-expression",tabindex:"-1"},l=n("a",{class:"header-anchor",href:"#frontmatter-title-for-expression","aria-hidden":"true"},"#",-1),u={class:"command-title"},d=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; concat-str </code></p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Creates a concat string expression</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">let</span> <span class="token function">df</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>a b c<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>one two <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>three four <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> into <span class="token function">df</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$df</span> <span class="token operator">|</span> with-column <span class="token punctuation">((</span>concat-str <span class="token string">&quot;-&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>col a<span class="token punctuation">)</span> <span class="token punctuation">(</span>col b<span class="token punctuation">)</span> <span class="token punctuation">((</span>col c<span class="token punctuation">)</span> * <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">|</span> as concat<span class="token punctuation">)</span>
</code></pre></div>`,5);function k(a,h){return o(),p("div",null,[n("h1",i,[l,s(),n("code",null,t(a.$frontmatter.title),1),s(" for expression")]),n("div",u,t(a.$frontmatter.expression),1),d])}const m=e(r,[["render",k],["__file","concat-str.html.vue"]]);export{m as default};
