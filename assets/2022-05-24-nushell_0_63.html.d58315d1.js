import{_ as l,z as a,A as s,W as h,X as t,C as e,T as r,a6 as o,Q as i}from"./framework.3d018c9f.js";const u={},d=t("h1",{id:"nushell-0-63",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell-0-63","aria-hidden":"true"},"#"),e(" Nushell 0.63")],-1),c=t("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),p=t("p",null,"Today, we're releasing version 0.63 of Nu. This release is the first to include the 'overlays' feature, hooks, lazy dataframes, and more.",-1),_=t("h1",{id:"where-to-get-it",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),f={href:"https://github.com/nushell/nushell/releases/tag/0.63.0",target:"_blank",rel:"noopener noreferrer"},g={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},m=t("code",null,"cargo install nu",-1),b=o(`<p>If you want all the built-in goodies, you can install <code>cargo install nu --features=extra</code>.</p><p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="themes-of-this-release" tabindex="-1"><a class="header-anchor" href="#themes-of-this-release" aria-hidden="true">#</a> Themes of this release</h1><h2 id="overlays-kubouch" tabindex="-1"><a class="header-anchor" href="#overlays-kubouch" aria-hidden="true">#</a> Overlays (kubouch)</h2><p>We&#39;ve added a new concept into this release that merges a few of our previous design ideas together: overlays. You can think of overlays like layers in a paint program. They work together to give you a set of commands, environment variables, and more that you can turn on and off as needed.</p><p>For example, we can create an overlay to work in:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>(zero) &gt; module code { export env BAZ { &quot;baz&quot; } }
(zero) &gt; overlay add code
(code) &gt; $env.BAZ
baz
(code) &gt; let-env BAGR = &quot;bagr&quot;
(code) &gt; $env.BAGR
bagr
(code) &gt; overlay remove code
(zero) &gt; # environment back to what we started with
</code></pre></div><p>Just like layers in a paint program, changes you make (like the update to the environment above) are part of the layer. You can use <code>--keep-custom</code> to keep the changes you have made even after you hide the overlay. Using <code>add</code> and <code>remove</code> are effectively like <code>show</code> and <code>hide</code>, allowing you to quickly switch into a new context, do some work, and switch out with little effort.</p><h2 id="hooks-jt" tabindex="-1"><a class="header-anchor" href="#hooks-jt" aria-hidden="true">#</a> Hooks (jt)</h2><p>Starting with 0.63, you can now set up hooks that will run code under certain conditions. These hooks run after your code has finished evaluating.</p><p>Let&#39;s look first at how to set up the hooks, and then see what the hooks output. To set up a hook, you pick the kind of hook and then configure a block of code to run when that hook fires:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>hooks: {
    pre_prompt: [{
        print &quot;pre_prompt hook&quot;
    }]
    pre_execution: [{
        print &quot;pre_execution hook&quot;
    }]
    env_change: {
        PWD: [{|before, after|
            print $&quot;PWD environment variable changed from ($before) to ($after)&quot;
        }]
    }
}
</code></pre></div><p>Using this example, we can watch the hooks fire:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>/home/jt/Source/nushell〉cd ..
pre_execution hook
pre_prompt hook
PWD environment variable changed from /home/jt/Source/nushell to /home/jt/Source
/home/jt/Source〉
</code></pre></div><p>Used together with the &quot;overlays&quot; feature above, we hope to open up the possibility for a lot of powerful interactions with the shell while still keeping the workflow that makes Nushell special.</p><h2 id="lazy-dataframe-support-elferherrera" tabindex="-1"><a class="header-anchor" href="#lazy-dataframe-support-elferherrera" aria-hidden="true">#</a> Lazy dataframe support (elferherrera)</h2><p>We are starting to support a new way to query dataframes by using lazyframes. This new concept will allow users to build logical plans for the data operations which will result in a reduction of the dataframe processing time.</p><p>Lazy dataframes are accessed through the same <code>dfr</code> command and give you a way to build up a pipeline to execute in a more optimal way than the previous eager dataframes. For example, you can perform your aggregations and group-bys lazily, and then work on the results instead of paying for the processing time of having two separate steps.</p><h1 id="new-commands" tabindex="-1"><a class="header-anchor" href="#new-commands" aria-hidden="true">#</a> New commands</h1><ul><li>(Returned from the engine rewrite) <code>histogram</code> for checking distributions right inside nushell (WindSoilder)</li><li><code>config nu</code> and <code>config env</code> to easily edit your nushell configuration files with your editor of choice (Kangaxx-0/vFrankZhang)</li><li><code>str title-case</code> (krober)<div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; &#39;this is a test case&#39; | str title-case
This Is A Test Case
</code></pre></div></li><li>Many new <code>db</code> subcommands (elferherrera)</li></ul><h1 id="quality-of-life-improvements" tabindex="-1"><a class="header-anchor" href="#quality-of-life-improvements" aria-hidden="true">#</a> Quality-of-life Improvements</h1>`,21),k={href:"https://github.com/nushell/nushell/issues/5093",target:"_blank",rel:"noopener noreferrer"},y=o(`<li><p><code>print -n</code> option to print output without an additional new-line (fdncred)</p></li><li><p><code>flatten</code> now has a more consistent behavior for nested records and tables. (WindSoilder) This now more closely matches the pre-0.60 flatten, and should help create more predictable output.</p></li><li><p>We now support octal binary literals <code>0o[777]</code> similar to the hexadecimal <code>0x[FF]</code> and binary <code>0b[11111111]</code> literals (toffaletti)</p></li><li><p><code>cd</code> accepts abreviation of paths to quickly jump to nested directories based on unique prefixes (fdncred)</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; $env.PWD
~/some/path
&gt; cd d/s/9
&gt; $env.PWD
~/some/path/deep/space/9
</code></pre></div></li><li><p>Various improvements make the completions feel more polished (herlon214, PurityLake)</p></li><li><p>If <code>$config.buffer_editor</code> is not set rely on the <code>$env.EDITOR</code> and <code>$env.VISUAL</code> environment variables to find a text editor to edit longer pipelines or your <code>config ...</code> (Kangaxx-0/vFrankZhang, sholderbach)</p></li><li><p>When invoking <code>nu</code> to run a script you can now pass the <code>--config</code> flag to load your <code>config.nu</code> and have the definitions available when running the script (WindSoilder)</p></li><li><p>Similarly you can change the table appearance with the <code>--table-mode</code> flag when invoking <code>nu</code> (fdncred)</p></li>`,8),v=o('<p><strong>Note:</strong> this is a shortened list. For the full list, see the &quot;Changelog&quot; section below</p><h1 id="breaking-changes" tabindex="-1"><a class="header-anchor" href="#breaking-changes" aria-hidden="true">#</a> Breaking changes</h1><h2 id="changed-default-keybindings" tabindex="-1"><a class="header-anchor" href="#changed-default-keybindings" aria-hidden="true">#</a> Changed default keybindings:</h2><table><thead><tr><th>Old binding</th><th>New binding</th><th>Action</th><th>Reason for the change</th></tr></thead><tbody><tr><td><code>Ctrl-x</code></td><td><code>Ctrl-r</code></td><td>Visual history search menu</td><td>We replaced the simple history search (previously bound to <code>Ctrl-r</code>, <code>cmd: SearchHistory</code>) with the menu that supports previewing several entries at once for quick navigation</td></tr><tr><td><code>Ctrl-q</code></td><td><code>F1</code></td><td>Interactive help menu</td><td><code>F1</code> is generally the convention for help information, with this menu you can search for commands browse through their documentation and pick examples to include/run</td></tr></tbody></table><h1 id="looking-ahead" tabindex="-1"><a class="header-anchor" href="#looking-ahead" aria-hidden="true">#</a> Looking ahead</h1><p>Here are a few of the things we&#39;re working on:</p><p>SQLite based history. This will maintain a larger number of entries that can searched using date, usage or text.</p><p>Input/output types. These will allow commands to be specialized based on the input they&#39;re given as we well as allow the typechecker to check that commands can connect on the pipeline together.</p><p>And more - we&#39;re still looking ahead to IDE support, better database support, and more.</p><h1 id="changelog" tabindex="-1"><a class="header-anchor" href="#changelog" aria-hidden="true">#</a> Changelog</h1><h2 id="nushell" tabindex="-1"><a class="header-anchor" href="#nushell" aria-hidden="true">#</a> Nushell</h2>',11),w={href:"https://github.com/nushell/nushell/pull/5629",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/nushell/nushell/pull/5478",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/nushell/nushell/pull/5375",target:"_blank",rel:"noopener noreferrer"},z={href:"https://github.com/nushell/nushell/pull/5627",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/nushell/nushell/pull/5600",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/nushell/nushell/pull/5561",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/nushell/nushell/pull/5560",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/nushell/nushell/pull/5549",target:"_blank",rel:"noopener noreferrer"},F={href:"https://github.com/nushell/nushell/pull/5480",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/nushell/nushell/pull/5479",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/nushell/nushell/pull/5473",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/nushell/nushell/pull/5620",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/nushell/nushell/pull/5616",target:"_blank",rel:"noopener noreferrer"},L={href:"https://github.com/nushell/nushell/pull/5614",target:"_blank",rel:"noopener noreferrer"},U=t("code",null,"config.buffer_editor",-1),W=t("code",null,"EDITOR",-1),R={href:"https://github.com/nushell/nushell/pull/5599",target:"_blank",rel:"noopener noreferrer"},E=t("code",null,"error make",-1),M={href:"https://github.com/nushell/nushell/pull/5598",target:"_blank",rel:"noopener noreferrer"},P={href:"https://github.com/nushell/nushell/pull/5588",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/nushell/nushell/pull/5587",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/nushell/nushell/pull/5510",target:"_blank",rel:"noopener noreferrer"},V=t("code",null,"F1",-1),O={href:"https://github.com/nushell/nushell/pull/5619",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/nushell/nushell/pull/5618",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/nushell/nushell/pull/5611",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://github.com/nushell/nushell/pull/5606",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/nushell/nushell/pull/5590",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/nushell/nushell/pull/5584",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://github.com/nushell/nushell/pull/5583",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/nushell/nushell/pull/5577",target:"_blank",rel:"noopener noreferrer"},X={href:"https://github.com/nushell/nushell/pull/5576",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://github.com/nushell/nushell/pull/5570",target:"_blank",rel:"noopener noreferrer"},te={href:"https://github.com/nushell/nushell/pull/5553",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://github.com/nushell/nushell/pull/5541",target:"_blank",rel:"noopener noreferrer"},re={href:"https://github.com/nushell/nushell/pull/5536",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://github.com/nushell/nushell/pull/5534",target:"_blank",rel:"noopener noreferrer"},le={href:"https://github.com/nushell/nushell/pull/5518",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://github.com/nushell/nushell/pull/5502",target:"_blank",rel:"noopener noreferrer"},se={href:"https://github.com/nushell/nushell/pull/5498",target:"_blank",rel:"noopener noreferrer"},he={href:"https://github.com/nushell/nushell/pull/5464",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://github.com/nushell/nushell/pull/5461",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://github.com/nushell/nushell/pull/5454",target:"_blank",rel:"noopener noreferrer"},de={href:"https://github.com/nushell/nushell/pull/5453",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://github.com/nushell/nushell/pull/5610",target:"_blank",rel:"noopener noreferrer"},pe=t("code",null,"version",-1),_e={href:"https://github.com/nushell/nushell/pull/5594",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://github.com/nushell/nushell/pull/5511",target:"_blank",rel:"noopener noreferrer"},ge=t("code",null,"tutor list",-1),me=t("code",null,"engine-q",-1),be={href:"https://github.com/nushell/nushell/pull/5501",target:"_blank",rel:"noopener noreferrer"},ke=t("code",null,"mv",-1),ye=t("code",null,"rm",-1),ve={href:"https://github.com/nushell/nushell/pull/5500",target:"_blank",rel:"noopener noreferrer"},we={href:"https://github.com/nushell/nushell/pull/5494",target:"_blank",rel:"noopener noreferrer"},xe=t("code",null,"ls",-1),Ae={href:"https://github.com/nushell/nushell/pull/5485",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://github.com/nushell/nushell/pull/5483",target:"_blank",rel:"noopener noreferrer"},qe=t("code",null,"to csv",-1),Te=t("code",null,"to tsv",-1),Ce={href:"https://github.com/nushell/nushell/pull/5467",target:"_blank",rel:"noopener noreferrer"},Ne=t("code",null,"from csv",-1),Fe=t("code",null,"from tsv",-1),De={href:"https://github.com/nushell/nushell/pull/5609",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://github.com/nushell/nushell/pull/5601",target:"_blank",rel:"noopener noreferrer"},Se=t("code",null,"commands::ls::fails_with_ls_to_dir_without_permission",-1),je={href:"https://github.com/nushell/nushell/pull/5579",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://github.com/nushell/nushell/pull/5493",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://github.com/nushell/nushell/pull/5447",target:"_blank",rel:"noopener noreferrer"},We={href:"https://github.com/nushell/nushell/pull/5446",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://github.com/nushell/nushell/pull/5607",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://github.com/nushell/nushell/pull/5512",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://github.com/nushell/nushell/pull/5482",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://github.com/nushell/nushell/pull/5604",target:"_blank",rel:"noopener noreferrer"},$e={href:"https://github.com/nushell/nushell/pull/5603",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://github.com/nushell/nushell/pull/5557",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://github.com/nushell/nushell/pull/5602",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://github.com/nushell/nushell/pull/5581",target:"_blank",rel:"noopener noreferrer"},He={href:"https://github.com/nushell/nushell/pull/5575",target:"_blank",rel:"noopener noreferrer"},Ke=t("code",null,"--numbered",-1),Ze=t("code",null,"reduce",-1),Je={href:"https://github.com/nushell/nushell/pull/5573",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://github.com/nushell/nushell/pull/5572",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://github.com/nushell/nushell/pull/5569",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://github.com/nushell/nushell/pull/5567",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://github.com/nushell/nushell/pull/5566",target:"_blank",rel:"noopener noreferrer"},et={href:"https://github.com/nushell/nushell/pull/5555",target:"_blank",rel:"noopener noreferrer"},tt={href:"https://github.com/nushell/nushell/pull/5520",target:"_blank",rel:"noopener noreferrer"},nt={href:"https://github.com/nushell/nushell/pull/5513",target:"_blank",rel:"noopener noreferrer"},rt=t("code",null,"--table_mode",-1),ot=t("code",null,"-m",-1),lt={href:"https://github.com/nushell/nushell/pull/5503",target:"_blank",rel:"noopener noreferrer"},at={href:"https://github.com/nushell/nushell/pull/5491",target:"_blank",rel:"noopener noreferrer"},st={href:"https://github.com/nushell/nushell/pull/5458",target:"_blank",rel:"noopener noreferrer"},ht={href:"https://github.com/nushell/nushell/pull/5452",target:"_blank",rel:"noopener noreferrer"},it={href:"https://github.com/nushell/nushell/pull/5450",target:"_blank",rel:"noopener noreferrer"},ut={href:"https://github.com/nushell/nushell/pull/5568",target:"_blank",rel:"noopener noreferrer"},dt={href:"https://github.com/nushell/nushell/pull/5563",target:"_blank",rel:"noopener noreferrer"},ct={href:"https://github.com/nushell/nushell/pull/5562",target:"_blank",rel:"noopener noreferrer"},pt={href:"https://github.com/nushell/nushell/pull/5556",target:"_blank",rel:"noopener noreferrer"},_t={href:"https://github.com/nushell/nushell/pull/5550",target:"_blank",rel:"noopener noreferrer"},ft={href:"https://github.com/nushell/nushell/pull/5548",target:"_blank",rel:"noopener noreferrer"},gt={href:"https://github.com/nushell/nushell/pull/5527",target:"_blank",rel:"noopener noreferrer"},mt={href:"https://github.com/nushell/nushell/pull/5507",target:"_blank",rel:"noopener noreferrer"},bt={href:"https://github.com/nushell/nushell/pull/5489",target:"_blank",rel:"noopener noreferrer"},kt={href:"https://github.com/nushell/nushell/pull/5488",target:"_blank",rel:"noopener noreferrer"},yt={href:"https://github.com/nushell/nushell/pull/5487",target:"_blank",rel:"noopener noreferrer"},vt={href:"https://github.com/nushell/nushell/pull/5484",target:"_blank",rel:"noopener noreferrer"},wt=t("code",null,"into datetime",-1),xt={href:"https://github.com/nushell/nushell/pull/5463",target:"_blank",rel:"noopener noreferrer"},At={href:"https://github.com/nushell/nushell/pull/5564",target:"_blank",rel:"noopener noreferrer"},zt={href:"https://github.com/nushell/nushell/pull/5554",target:"_blank",rel:"noopener noreferrer"},qt={href:"https://github.com/nushell/nushell/pull/5546",target:"_blank",rel:"noopener noreferrer"},Tt={href:"https://github.com/nushell/nushell/pull/5477",target:"_blank",rel:"noopener noreferrer"},Ct={href:"https://github.com/nushell/nushell/pull/5466",target:"_blank",rel:"noopener noreferrer"},Nt={href:"https://github.com/nushell/nushell/pull/5543",target:"_blank",rel:"noopener noreferrer"},Ft={href:"https://github.com/nushell/nushell/pull/5537",target:"_blank",rel:"noopener noreferrer"},Dt={href:"https://github.com/nushell/nushell/pull/5524",target:"_blank",rel:"noopener noreferrer"},It={href:"https://github.com/nushell/nushell/pull/5506",target:"_blank",rel:"noopener noreferrer"},St={href:"https://github.com/nushell/nushell/pull/5504",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://github.com/nushell/nushell/pull/5468",target:"_blank",rel:"noopener noreferrer"},Lt={href:"https://github.com/nushell/nushell/pull/5460",target:"_blank",rel:"noopener noreferrer"},Ut={href:"https://github.com/nushell/nushell/pull/5459",target:"_blank",rel:"noopener noreferrer"},Wt={href:"https://github.com/nushell/nushell/pull/5523",target:"_blank",rel:"noopener noreferrer"},Rt={href:"https://github.com/nushell/nushell/pull/5514",target:"_blank",rel:"noopener noreferrer"},Et={href:"https://github.com/nushell/nushell/pull/5496",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://github.com/nushell/nushell/pull/5490",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://github.com/nushell/nushell/pull/5462",target:"_blank",rel:"noopener noreferrer"},$t={href:"https://github.com/nushell/nushell/pull/5440",target:"_blank",rel:"noopener noreferrer"},Bt={href:"https://github.com/nushell/nushell/pull/5434",target:"_blank",rel:"noopener noreferrer"},Vt=t("code",null,"split row",-1),Ot=t("h2",{id:"documentation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),e(" Documentation")],-1),Ht={href:"https://github.com/nushell/nushell.github.io/pull/446",target:"_blank",rel:"noopener noreferrer"},Kt=t("code",null,"open",-1),Zt={href:"https://github.com/nushell/nushell.github.io/pull/445",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://github.com/nushell/nushell.github.io/pull/434",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://github.com/nushell/nushell.github.io/pull/444",target:"_blank",rel:"noopener noreferrer"},Yt=t("code",null,"pwd",-1),Gt=t("code",null,"coming_from_bash.md",-1),Xt={href:"https://github.com/nushell/nushell.github.io/pull/443",target:"_blank",rel:"noopener noreferrer"},en={href:"https://github.com/nushell/nushell.github.io/pull/442",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://github.com/nushell/nushell.github.io/pull/438",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://github.com/nushell/nushell.github.io/pull/441",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://github.com/nushell/nushell.github.io/pull/440",target:"_blank",rel:"noopener noreferrer"},on={href:"https://github.com/nushell/nushell.github.io/pull/439",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://github.com/nushell/nushell.github.io/pull/437",target:"_blank",rel:"noopener noreferrer"},an={href:"https://github.com/nushell/nushell.github.io/pull/436",target:"_blank",rel:"noopener noreferrer"},sn=t("code",null,"/ja/README.md",-1),hn={href:"https://github.com/nushell/nushell.github.io/pull/435",target:"_blank",rel:"noopener noreferrer"},un=t("h2",{id:"nu-scripts",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nu-scripts","aria-hidden":"true"},"#"),e(" Nu_Scripts")],-1),dn={href:"https://github.com/nushell/nu_scripts/pull/229",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://github.com/nushell/nu_scripts/pull/228",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://github.com/nushell/nu_scripts/pull/227",target:"_blank",rel:"noopener noreferrer"},_n={href:"https://github.com/nushell/nu_scripts/pull/226",target:"_blank",rel:"noopener noreferrer"},fn={href:"https://github.com/nushell/nu_scripts/pull/224",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://github.com/nushell/nu_scripts/pull/220",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://github.com/nushell/nu_scripts/pull/215",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://github.com/nushell/nu_scripts/pull/225",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://github.com/nushell/nu_scripts/pull/222",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://github.com/nushell/nu_scripts/pull/223",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://github.com/nushell/nu_scripts/pull/217",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://github.com/nushell/nu_scripts/pull/216",target:"_blank",rel:"noopener noreferrer"},xn=t("h2",{id:"reedline",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#reedline","aria-hidden":"true"},"#"),e(" reedline")],-1),An={href:"https://github.com/nushell/reedline/pull/430",target:"_blank",rel:"noopener noreferrer"},zn={href:"https://github.com/nushell/reedline/pull/427",target:"_blank",rel:"noopener noreferrer"},qn={href:"https://github.com/nushell/reedline/pull/424",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://github.com/nushell/reedline/pull/429",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://github.com/nushell/reedline/pull/428",target:"_blank",rel:"noopener noreferrer"},Nn={href:"https://github.com/nushell/reedline/pull/425",target:"_blank",rel:"noopener noreferrer"},Fn={href:"https://github.com/nushell/reedline/pull/402",target:"_blank",rel:"noopener noreferrer"};function Dn(In,Sn){const n=i("ExternalLinkIcon");return a(),s("div",null,[d,c,p,h(" more "),_,t("p",null,[e("Nu 0.63 is available as "),t("a",f,[e("pre-built binaries"),r(n)]),e(" or from "),t("a",g,[e("crates.io"),r(n)]),e(". If you have Rust installed you can install it using "),m,e(".")]),b,t("ul",null,[t("li",null,[t("p",null,[e("More commands contain additional search terms to find them if you don't remember their exact name. (victormanueltn, LawlietLi) This is a great way to help out by contributing! More information can be found "),t("a",k,[e("here"),r(n)]),e(".")])]),y]),v,t("ul",null,[t("li",null,[e("kubouch created "),t("a",w,[e("Overlay keep"),r(n)]),e(", and "),t("a",x,[e("Add Nushell REPL simulator; Fix bug in overlay add"),r(n)]),e(", and created "),t("a",A,[e("Overlays"),r(n)])]),t("li",null,[e("jt created "),t("a",z,[e("Bump to 0.63"),r(n)]),e(", and "),t("a",q,[e("Add environment change hook"),r(n)]),e(", and "),t("a",T,[e('Revert "Try to do less work during capture discovery"'),r(n)]),e(", and "),t("a",C,[e("Try to do less work during capture discovery"),r(n)]),e(", and "),t("a",N,[e("Try removing debuginfo for ci builds"),r(n)]),e(", and "),t("a",F,[e("Allow hooks to be lists of blocks"),r(n)]),e(", and "),t("a",D,[e("Add hooks to cli/repl"),r(n)]),e(", and "),t("a",I,[e("Bump to the 0.62.1 dev version"),r(n)])]),t("li",null,[e("sholderbach created "),t("a",S,[e("Pin reedline v0.6.0 for the nushell v0.63.0 release"),r(n)]),e(", and "),t("a",j,[e("Add meta command for the config subcommands"),r(n)]),e(", and "),t("a",L,[e("Fallback for "),U,e(" from "),W,r(n)]),e(", and "),t("a",R,[e("Refer to the span of "),E,e(" if not given"),r(n)]),e(", and "),t("a",M,[e("Use bleeding edge reedline, with fix for #5593"),r(n)]),e(", and "),t("a",P,[e("Change miette theme based on ANSI config"),r(n)]),e(", and "),t("a",$,[e("Use effectively unlimited history size if not set"),r(n)]),e(", and "),t("a",B,[e("Move help menu to canonical "),V,e(" binding"),r(n)])]),t("li",null,[e("WindSoilder created "),t("a",O,[e("fix date format"),r(n)]),e(", and "),t("a",H,[e("load config when requried"),r(n)]),e(", and "),t("a",K,[e("Make flatten works better and predictable"),r(n)]),e(", and "),t("a",Z,[e("adjust flatten default behavior"),r(n)]),e(", and "),t("a",J,[e("Don't report error when cwd is not exists."),r(n)]),e(", and "),t("a",Q,[e("Fix flatten behavior"),r(n)]),e(", and "),t("a",Y,[e("add quantile column in histogram "),r(n)]),e(", and "),t("a",G,[e("fix select tests"),r(n)]),e(", and "),t("a",X,[e("fix move test"),r(n)]),e(", and "),t("a",ee,[e("Make format support nested column and use variable"),r(n)]),e(", and "),t("a",te,[e("use reverse iter on value search"),r(n)]),e(", and "),t("a",ne,[e("Fix Value::Record compare logic, and pass uniq tests."),r(n)]),e(", and "),t("a",re,[e("fix zip test"),r(n)]),e(", and "),t("a",oe,[e("add rename"),r(n)]),e(", and "),t("a",le,[e("Implement histogram command"),r(n)]),e(", and "),t("a",ae,[e("keep metadata while format filesize"),r(n)]),e(", and "),t("a",se,[e("add format filesize"),r(n)]),e(", and "),t("a",he,[e("complete some commands tests"),r(n)]),e(", and "),t("a",ie,[e("Document out positional argument type in help message"),r(n)]),e(", and created "),t("a",ue,[e("make cd recornize symblic link"),r(n)]),e(", and "),t("a",de,[e("implement seq char command to generate single character sequence"),r(n)])]),t("li",null,[e("hustcer created "),t("a",ce,[e("fix typo for "),pe,e(" command"),r(n)]),e(", and "),t("a",_e,[e("Fix #5578, assume pipe file be zero-sized"),r(n)]),e(", and "),t("a",fe,[e("feat: add "),ge,e(" support, remove tutor "),me,e(", fix: #4950"),r(n)]),e(", and "),t("a",be,[e("Fix #3899, make "),ke,e(" and "),ye,e(" to be quiet by default"),r(n)]),e(", and "),t("a",ve,[e("opt: improve ls by call get_file_type only one time"),r(n)]),e(", and "),t("a",we,[e("Improve #4975 of filtering "),xe,e(" output by size issue"),r(n)]),e(", and "),t("a",Ae,[e("Fix #5469, making $nothing or null convert to filesize of 0B"),r(n)]),e(", and "),t("a",ze,[e("Fix "),qe,e(" and "),Te,e(" for simple list, close: #4780"),r(n)]),e(", and "),t("a",Ce,[e("feat: add disable field type inferencing for "),Ne,e(" and "),Fe,e(", fix: #3485 and #4217"),r(n)])]),t("li",null,[e("merelymyself created "),t("a",De,[e("Allow for test_iteration_errors to work when run as root"),r(n)]),e(", and "),t("a",Ie,[e("Allows the test "),Se,e(" to work when run as root"),r(n)]),e(", and "),t("a",je,[e("Allowing for flags with '=' in them to register as flags."),r(n)]),e(", and "),t("a",Le,[e("Adds fix for when multiple flags are in one line."),r(n)]),e(", and created "),t("a",Ue,[e("Fixing the flag issue"),r(n)]),e(", and "),t("a",We,[e("Adds flags and optional arguments to view-source"),r(n)])]),t("li",null,[e("Kangaxx-0 created "),t("a",Re,[e("Add config command"),r(n)]),e(", and "),t("a",Ee,[e("Add verbose"),r(n)]),e(", and "),t("a",Me,[e("Add feedback to cp"),r(n)])]),t("li",null,[e("toffaletti created "),t("a",Pe,[e("Add octal binary literals"),r(n)])]),t("li",null,[e("victormanueltn created "),t("a",$e,[e("Add search term to str substring command."),r(n)]),e(", and "),t("a",Be,[e("Add search terms to build-string command."),r(n)])]),t("li",null,[e("LawlietLi created "),t("a",Ve,[e("feat: add search terms to network"),r(n)])]),t("li",null,[e("IanManske created "),t("a",Oe,[e("Fix help menu panic."),r(n)])]),t("li",null,[e("jaeheonji created "),t("a",He,[e("feat: apply the "),Ke,e(" option to acc in "),Ze,e(" command."),r(n)])]),t("li",null,[e("krober created "),t("a",Je,[e("Add str title-case"),r(n)]),e(", and "),t("a",Qe,[e("Str casings reorganization & description updates"),r(n)])]),t("li",null,[e("fdncred created "),t("a",Ye,[e("move items to showcase"),r(n)]),e(", and "),t("a",Ge,[e("refactor all write_alls to ensure flushing"),r(n)]),e(", and "),t("a",Xe,[e("make print flush"),r(n)]),e(", and "),t("a",et,[e("table refactor for readability"),r(n)]),e(", and "),t("a",tt,[e("add the ability to change table mode when running script"),r(n)]),e(", and "),t("a",nt,[e("add "),rt,e(),ot,e(" parameter"),r(n)]),e(", and "),t("a",lt,[e("refactor for legibility"),r(n)]),e(", and "),t("a",at,[e("adjust where prompt markers go"),r(n)]),e(", and "),t("a",st,[e("add -n flag to print to print without a newline"),r(n)]),e(", and "),t("a",ht,[e("enable cd to work with directory abbreviations"),r(n)]),e(", and "),t("a",it,[e("fix bug in shell_integration"),r(n)])]),t("li",null,[e("rgwood created "),t("a",ut,[e('Revert "Enable backtraces by default (#5562)"'),r(n)]),e(", and "),t("a",dt,[e("Upgrade trash dependency"),r(n)]),e(", and "),t("a",ct,[e("Enable backtraces by default"),r(n)]),e(", and "),t("a",pt,[e("Remove doctests CI action"),r(n)]),e(", and "),t("a",_t,[e("CI: bust caches"),r(n)]),e(", and "),t("a",ft,[e("Look up git commit hash ourselves, drop libgit2 dependency"),r(n)]),e(", and "),t("a",gt,[e("More CI work"),r(n)]),e(", and "),t("a",mt,[e("Change history menu keybinding from ctrl+x to ctrl+r"),r(n)]),e(", and "),t("a",bt,[e("Enable converting dates to ints"),r(n)]),e(", and "),t("a",kt,[e("Parse timestamps as UTC by default"),r(n)]),e(", and "),t("a",yt,[e("Display range values better"),r(n)]),e(", and "),t("a",vt,[e("Handle int input in "),wt,r(n)]),e(", and "),t("a",xt,[e("Enable string interpolation for environment shorthand"),r(n)])]),t("li",null,[e("efugier created "),t("a",At,[e("feat(errors): more explicit module_or_overlay_not_found_error help me…"),r(n)])]),t("li",null,[e("ocitrev created "),t("a",zt,[e("Sync resources version"),r(n)])]),t("li",null,[e("elferherrera created "),t("a",qt,[e("Lazy dataframes"),r(n)]),e(", and "),t("a",Tt,[e("join and from derived tables"),r(n)]),e(", and "),t("a",Ct,[e("Database commands"),r(n)])]),t("li",null,[e("herlon214 created "),t("a",Nt,[e("nu-cli/completions: add custom completion test"),r(n)]),e(", and "),t("a",Ft,[e("nu-glob: add fs::symlink_metadata to detect broken symlinks"),r(n)]),e(", and "),t("a",Dt,[e("nu-command/filesystem: fix rm .sock file"),r(n)]),e(", and "),t("a",It,[e("nu-cli/completions: verify case for matching dir, .nu, file and command"),r(n)]),e(", and "),t("a",St,[e("nu-cli/completions: add variable completions test + refactor tests"),r(n)]),e(", and "),t("a",jt,[e("nu-cli/completions: add tests for flag completions"),r(n)]),e(", and "),t("a",Lt,[e("nu-cli/completions: add tests for dotnu completions"),r(n)]),e(", and "),t("a",Ut,[e("nu-cli/completions: send original line to custom completer"),r(n)])]),t("li",null,[e("njbull4 created "),t("a",Wt,[e("cp, mv, and rm commands need to support -i flag"),r(n)])]),t("li",null,[e("CozyPenguin created "),t("a",Rt,[e("bump umask crate to 2.0.0"),r(n)])]),t("li",null,[e("jmoore34 created "),t("a",Et,[e("Update comment in default_config.nu [skip ci]"),r(n)])]),t("li",null,[e("pejato created "),t("a",Mt,[e('Make $nothing | into string == ""'),r(n)])]),t("li",null,[e("onthebridgetonowhere created "),t("a",Pt,[e("Fix cp bug"),r(n)])]),t("li",null,[e("PurityLake created "),t("a",$t,[e("Made a change to completion resolution order"),r(n)])]),t("li",null,[e("gipsyh created "),t("a",Bt,[e("Add split number flag in "),Vt,r(n)])])]),Ot,t("ul",null,[t("li",null,[e("sholderbach created "),t("a",Ht,[e("Remove outdated reference to "),Kt,e(" pager"),r(n)]),e(", and "),t("a",Zt,[e("Document the octal binary literals"),r(n)]),e(", and "),t("a",Jt,[e("Mention default values for command parameters."),r(n)])]),t("li",null,[e("unional created "),t("a",Qt,[e("docs: add "),Yt,e(" to "),Gt,r(n)])]),t("li",null,[e("hustcer created "),t("a",Xt,[e("Update zh-CN home page and keep the Chinese and English docs in sync"),r(n)]),e(", and "),t("a",en,[e("Update some zh-CN translations from commit: 008c89fc26"),r(n)]),e(", and "),t("a",tn,[e("Update some zh-CN translatons from commit: 6f61fadb69"),r(n)])]),t("li",null,[e("rgwood created "),t("a",nn,[e("Update front page"),r(n)])]),t("li",null,[e("mdmundo created "),t("a",rn,[e("Update windows_terminal_default_shell.sh"),r(n)])]),t("li",null,[e("kubouch created "),t("a",on,[e("Add env.nu to env conversions section"),r(n)]),e(", and "),t("a",ln,[e("Document config as environment variable"),r(n)])]),t("li",null,[e("TaKO8Ki created "),t("a",an,[e("Translate "),sn,e(" to Japanese"),r(n)])]),t("li",null,[e("flying-sheep created "),t("a",hn,[e("Document $in"),r(n)])])]),un,t("ul",null,[t("li",null,[e("thibran created "),t("a",dn,[e("Misc tools"),r(n)])]),t("li",null,[e("Suyashtnt created "),t("a",cn,[e("feat(custom-completions): add yarn completion"),r(n)])]),t("li",null,[e("jntrnr created "),t("a",pn,[e("update nu weekly script"),r(n)])]),t("li",null,[e("fdncred created "),t("a",_n,[e("add html colors"),r(n)]),e(", and "),t("a",fn,[e("add progress bar examples + some benchmarks"),r(n)]),e(", and "),t("a",gn,[e("help with pr"),r(n)]),e(", and "),t("a",mn,[e("remove title because it breaks kitty"),r(n)])]),t("li",null,[e("Yethal created "),t("a",bn,[e("Update remoting.nu"),r(n)]),e(", and "),t("a",kn,[e("Added remoting.nu"),r(n)])]),t("li",null,[e("Jacobious52 created "),t("a",yn,[e("Auto generation completion help parser"),r(n)])]),t("li",null,[e("kurokirasama created "),t("a",vn,[e("added maths, defs and weather scripts"),r(n)])]),t("li",null,[e("drbrain created "),t("a",wn,[e("Allow relative entries in CDPATH"),r(n)])])]),xn,t("ul",null,[t("li",null,[e("sholderbach created "),t("a",An,[e("Prepare the v0.6.0 release"),r(n)]),e(", and "),t("a",zn,[e("Do not allocate eagerly for full history capacity"),r(n)]),e(", and "),t("a",qn,[e("Start developer documentation"),r(n)])]),t("li",null,[e("petrisch created "),t("a",Tn,[e("Typo"),r(n)])]),t("li",null,[e("ahkrr created "),t("a",Cn,[e("fix: list_menu not accounting for index + indicator"),r(n)])]),t("li",null,[e("sadmac7000 created "),t("a",Nn,[e("Fix vi-mode word motions"),r(n)])]),t("li",null,[e("DhruvDh created "),t("a",Fn,[e("Use a default terminal size if reported terminal size is 0, 0"),r(n)])])])])}const Ln=l(u,[["render",Dn],["__file","2022-05-24-nushell_0_63.html.vue"]]);export{Ln as default};
