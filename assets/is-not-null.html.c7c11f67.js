import{_ as o,z as r,A as l,X as a,C as e,D as n,a6 as t}from"./framework.3d018c9f.js";const p={},i={id:"frontmatter-title-for-dataframe",tabindex:"-1"},c=a("a",{class:"header-anchor",href:"#frontmatter-title-for-dataframe","aria-hidden":"true"},"#",-1),d={class:"command-title"},u=t(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; is-not-null </code></p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Create mask where values are not null</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">let</span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span> <span class="token number">0</span> <span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">|</span> into <span class="token function">df</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin class-name">let</span> res <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$s</span> / <span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$res</span> <span class="token operator">|</span> is-not-null
</code></pre></div>`,5),h={id:"frontmatter-title-for-expression",tabindex:"-1"},m=a("a",{class:"header-anchor",href:"#frontmatter-title-for-expression","aria-hidden":"true"},"#",-1),f={class:"command-title"},k=t(`<h2 id="signature-1" tabindex="-1"><a class="header-anchor" href="#signature-1" aria-hidden="true">#</a> Signature</h2><p><code>&gt; is-not-null </code></p><h2 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1" aria-hidden="true">#</a> Examples</h2><p>Creates a is not null expression from a column</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> col a <span class="token operator">|</span> is-not-null
</code></pre></div>`,5);function _(s,b){return r(),l("div",null,[a("h1",i,[c,e(),a("code",null,n(s.$frontmatter.title),1),e(" for dataframe")]),a("div",d,n(s.$frontmatter.dataframe),1),u,a("h1",h,[m,e(),a("code",null,n(s.$frontmatter.title),1),e(" for expression")]),a("div",f,n(s.$frontmatter.expression),1),k])}const x=o(p,[["render",_],["__file","is-not-null.html.vue"]]);export{x as default};
