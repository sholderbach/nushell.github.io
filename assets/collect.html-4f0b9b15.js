import{_ as n,p as o,q as r,Q as e,t,v as s,a1 as c}from"./framework-344bb0e4.js";const l={},i={id:"frontmatter-title-for-filters",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#frontmatter-title-for-filters","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; collect (closure) --keep-env</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>closure</code>: the closure to run once the stream is collected</li><li><code>--keep-env</code> <code>(-)</code>: let the block affect environment variables</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Use the second value in the stream</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">|</span> collect <span class="token punctuation">{</span> <span class="token operator">|</span>x<span class="token operator">|</span> <span class="token variable">$x</span>.1 <span class="token punctuation">}</span>
</code></pre></div>`,7);function u(a,f){return o(),r("div",null,[e("h1",i,[p,t(),e("code",null,s(a.$frontmatter.title),1),t(" for filters")]),e("div",d,s(a.$frontmatter.filters),1),h])}const _=n(l,[["render",u],["__file","collect.html.vue"]]);export{_ as default};
