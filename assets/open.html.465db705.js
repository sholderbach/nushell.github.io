import{_ as t,z as o,A as r,X as e,C as s,D as n,a6 as i}from"./framework.3d018c9f.js";const l={},p={id:"frontmatter-title-for-filesystem",tabindex:"-1"},c=e("a",{class:"header-anchor",href:"#frontmatter-title-for-filesystem","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; open (filename) --raw</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>filename</code>: the filename to use</li><li><code>--raw</code>: open file as raw binary</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Open a file, with structure (based on file extension or SQLite database header)</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> myfile.json
</code></pre></div><p>Open a file, as raw bytes</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> myfile.json <span class="token parameter variable">--raw</span>
</code></pre></div><p>Open a file, using the input to get filename</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;myfile.txt&#39;</span> <span class="token operator">|</span> <span class="token function">open</span>
</code></pre></div><p>Open a file, and decode it by the specified encoding</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> myfile.txt <span class="token parameter variable">--raw</span> <span class="token operator">|</span> decode utf-8
</code></pre></div>`,13);function f(a,u){return o(),r("div",null,[e("h1",p,[c,s(),e("code",null,n(a.$frontmatter.title),1),s(" for filesystem")]),e("div",d,n(a.$frontmatter.filesystem),1),h])}const g=t(l,[["render",f],["__file","open.html.vue"]]);export{g as default};
