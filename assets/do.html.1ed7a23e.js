import{_ as n,o as t,c as o,a,t as s,d as r,e as c}from"./app.8034769a.js";const p={},l={id:"frontmatter-title",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=r(),h={style:{"white-space":"pre-wrap"}},u=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; do (block) ...rest --ignore-errors --capture-errors</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>block</code>: the block to run</li><li><code>...rest</code>: the parameter(s) for the block</li><li><code>--ignore-errors</code>: ignore errors as the block runs</li><li><code>--capture-errors</code>: capture errors as the block runs and return it</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Run the block</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token keyword">do</span> <span class="token punctuation">{</span> <span class="token builtin class-name">echo</span> hello <span class="token punctuation">}</span>
</code></pre></div><p>Run the block and ignore errors</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token keyword">do</span> <span class="token parameter variable">-i</span> <span class="token punctuation">{</span> thisisnotarealcommand <span class="token punctuation">}</span>
</code></pre></div><p>Run the block, with a positional parameter</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token keyword">do</span> <span class="token punctuation">{</span><span class="token operator">|</span>x<span class="token operator">|</span> <span class="token number">100</span> + <span class="token variable">$x</span> <span class="token punctuation">}</span> <span class="token number">50</span>
</code></pre></div>`,11);function k(e,g){return t(),o("div",null,[a("h1",l,[i,d,a("code",null,s(e.$frontmatter.title),1)]),a("div",h,s(e.$frontmatter.usage),1),u])}const m=n(p,[["render",k],["__file","do.html.vue"]]);export{m as default};
