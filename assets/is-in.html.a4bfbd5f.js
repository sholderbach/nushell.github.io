import{_ as o,z as p,A as c,X as a,C as s,D as e,a6 as t}from"./framework.3d018c9f.js";const r={},i={id:"frontmatter-title-for-dataframe",tabindex:"-1"},l=a("a",{class:"header-anchor",href:"#frontmatter-title-for-dataframe","aria-hidden":"true"},"#",-1),u={class:"command-title"},d=t(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; is-in </code></p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Checks if elements from a series are contained in right series</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">let</span> other <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">3</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">|</span> into <span class="token function">df</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">8</span> <span class="token number">8</span> <span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">|</span> into <span class="token function">df</span> <span class="token operator">|</span> is-in <span class="token variable">$other</span>
</code></pre></div>`,5),k={id:"frontmatter-title-for-expression",tabindex:"-1"},h=a("a",{class:"header-anchor",href:"#frontmatter-title-for-expression","aria-hidden":"true"},"#",-1),m={class:"command-title"},f=t(`<h2 id="signature-1" tabindex="-1"><a class="header-anchor" href="#signature-1" aria-hidden="true">#</a> Signature</h2><p><code>&gt; is-in </code></p><h2 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1" aria-hidden="true">#</a> Examples</h2><p>Creates a is-in expression</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">let</span> <span class="token function">df</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>a b<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>one <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>two <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>three <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> into <span class="token function">df</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$df</span> <span class="token operator">|</span> with-column <span class="token punctuation">(</span>col a <span class="token operator">|</span> is-in <span class="token punctuation">[</span>one two<span class="token punctuation">]</span> <span class="token operator">|</span> as a_in<span class="token punctuation">)</span>
</code></pre></div>`,5);function b(n,_){return p(),c("div",null,[a("h1",i,[l,s(),a("code",null,e(n.$frontmatter.title),1),s(" for dataframe")]),a("div",u,e(n.$frontmatter.dataframe),1),d,a("h1",k,[h,s(),a("code",null,e(n.$frontmatter.title),1),s(" for expression")]),a("div",m,e(n.$frontmatter.expression),1),f])}const x=o(r,[["render",b],["__file","is-in.html.vue"]]);export{x as default};
