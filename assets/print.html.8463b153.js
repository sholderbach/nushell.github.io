import{_ as n,o as s,c as r,a as e,t as a,d as i,e as o}from"./app.8034769a.js";const d={},c={id:"frontmatter-title",tabindex:"-1"},l=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),h=i(),p={style:{"white-space":"pre-wrap"}},u=o('<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; print ...rest --no-newline --stderr</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: the values to print</li><li><code>--no-newline</code>: print without inserting a newline for the line ending</li><li><code>--stderr</code>: print to stderr instead of stdout</li></ul><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><div class="language-text ext-text"><pre class="language-text"><code>Unlike `echo`, this command does not return any value (`print | describe` will return &quot;nothing&quot;).\nSince this command has no output, there is no point in piping it with other commands.\n\n`print` may be used inside blocks of code (e.g.: hooks) to display text during execution without interfering with the pipeline.\n</code></pre></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Print &#39;hello world&#39;</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> print <span class="token string">&quot;hello world&quot;</span>\n</code></pre></div><p>Print the sum of 2 and 3</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> print <span class="token punctuation">(</span><span class="token number">2</span> + <span class="token number">3</span><span class="token punctuation">)</span>\n</code></pre></div>',11);function g(t,m){return s(),r("div",null,[e("h1",c,[l,h,e("code",null,a(t.$frontmatter.title),1)]),e("div",p,a(t.$frontmatter.usage),1),u])}const _=n(d,[["render",g],["__file","print.html.vue"]]);export{_ as default};
