import{_ as n,z as o,A as c,X as a,C as e,D as t,a6 as r}from"./framework.3d018c9f.js";const p={},l={id:"frontmatter-title-for-filters",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#frontmatter-title-for-filters","aria-hidden":"true"},"#",-1),d={class:"command-title"},u=r(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; values </code></p><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><div class="language-text" data-ext="text"><pre class="language-text"><code>This is a counterpart to \`columns\`, which produces a list of columns&#39; names.
</code></pre></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Get the values from the record (produce a list)</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">{</span> mode:normal userid:31415 <span class="token punctuation">}</span> <span class="token operator">|</span> values
</code></pre></div><p>Values are ordered by the column order of the record</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">{</span> f:250 g:191 c:128 d:1024 e:2000 a:16 b:32 <span class="token punctuation">}</span> <span class="token operator">|</span> values
</code></pre></div><p>Get the values from the table (produce a list of lists)</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>name meaning<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>ls list<span class="token punctuation">]</span> <span class="token punctuation">[</span>mv move<span class="token punctuation">]</span> <span class="token punctuation">[</span>cd <span class="token string">&#39;change directory&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> values
</code></pre></div>`,11);function h(s,f){return o(),c("div",null,[a("h1",l,[i,e(),a("code",null,t(s.$frontmatter.title),1),e(" for filters")]),a("div",d,t(s.$frontmatter.filters),1),u])}const m=n(p,[["render",h],["__file","values.html.vue"]]);export{m as default};
