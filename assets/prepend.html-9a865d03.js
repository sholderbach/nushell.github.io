import{_ as t,p as o,q as p,Q as a,t as s,v as n,a1 as r}from"./framework-344bb0e4.js";const c={},i={id:"frontmatter-title-for-filters",tabindex:"-1"},l=a("a",{class:"header-anchor",href:"#frontmatter-title-for-filters","aria-hidden":"true"},"#",-1),d={class:"command-title"},u=r(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; prepend (row)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>row</code>: the row, list, or table to prepend</li></ul><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><p>Be aware that this command &#39;unwraps&#39; lists passed to it. So, if you pass a variable to it, and you want the variable&#39;s contents to be prepended without being unwrapped, it&#39;s wise to pre-emptively wrap the variable in a list, like so: <code>prepend [$val]</code>. This way, <code>prepend</code> will only unwrap the outer list, and leave the variable&#39;s contents untouched.</p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Prepend one Int item</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1,2</span>,3,4<span class="token punctuation">]</span> <span class="token operator">|</span> prepend <span class="token number">0</span>
</code></pre></div><p>Prepend two Int items</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">2,3</span>,4<span class="token punctuation">]</span> <span class="token operator">|</span> prepend <span class="token punctuation">[</span><span class="token number">0,1</span><span class="token punctuation">]</span>
</code></pre></div><p>Prepend Ints and Strings</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">2</span>,nu,4,shell<span class="token punctuation">]</span> <span class="token operator">|</span> prepend <span class="token punctuation">[</span><span class="token number">0,1</span>,rocks<span class="token punctuation">]</span>
</code></pre></div>`,13);function h(e,m){return o(),p("div",null,[a("h1",i,[l,s(),a("code",null,n(e.$frontmatter.title),1),s(" for filters")]),a("div",d,n(e.$frontmatter.filters),1),u])}const b=t(c,[["render",h],["__file","prepend.html.vue"]]);export{b as default};
