import{_ as r,p as n,q as o,Q as e,t as s,v as t,a1 as c}from"./framework-344bb0e4.js";const d={},i={id:"frontmatter-title-for-bytes",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#frontmatter-title-for-bytes","aria-hidden":"true"},"#",-1),l={class:"command-title"},h=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; bytes reverse ...rest</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: for a data structure input, reverse data at the given cell paths</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Reverse bytes <code>0x[1F FF AA AA]</code></p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> 0x<span class="token punctuation">[</span>1F FF AA AA<span class="token punctuation">]</span> <span class="token operator">|</span> bytes reverse
</code></pre></div><p>Reverse bytes <code>0x[FF AA AA]</code></p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> 0x<span class="token punctuation">[</span>FF AA AA<span class="token punctuation">]</span> <span class="token operator">|</span> bytes reverse
</code></pre></div>`,9);function u(a,_){return n(),o("div",null,[e("h1",i,[p,s(),e("code",null,t(a.$frontmatter.title),1),s(" for bytes")]),e("div",l,t(a.$frontmatter.bytes),1),h])}const f=r(d,[["render",u],["__file","bytes_reverse.html.vue"]]);export{f as default};
