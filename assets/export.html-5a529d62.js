import{_ as s,p as o,q as r,Q as a,t,v as n,a1 as c}from"./framework-344bb0e4.js";const i={},p={id:"frontmatter-title-for-core",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#frontmatter-title-for-core","aria-hidden":"true"},"#",-1),l={class:"command-title"},h=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; export </code></p><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><p>This command is a parser keyword. For details, check: https://www.nushell.sh/book/thinking_in_nu.html</p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Export a definition from a module</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> module utils <span class="token punctuation">{</span> <span class="token builtin class-name">export</span> def my-command <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;hello&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> use utils my-command<span class="token punctuation">;</span> my-command
</code></pre></div>`,7);function u(e,m){return o(),r("div",null,[a("h1",p,[d,t(),a("code",null,n(e.$frontmatter.title),1),t(" for core")]),a("div",l,n(e.$frontmatter.core),1),h])}const _=s(i,[["render",u],["__file","export.html.vue"]]);export{_ as default};
