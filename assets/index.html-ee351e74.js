import{_ as o,M as s,p as h,q as d,Q as n,t as e,N as t,U as l,a1 as i}from"./framework-344bb0e4.js";const u={},c=n("img",{src:"https://www.nushell.sh/frontpage/ls-example.png",alt:"Screenshot zeigt die Verwendung des ls-Befehls",class:"hero"},null,-1),g=n("h3",{id:"nu-funktioniert-mit-existierenden-daten",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nu-funktioniert-mit-existierenden-daten","aria-hidden":"true"},"#"),e(" Nu funktioniert mit existierenden Daten")],-1),p=i('<img src="https://www.nushell.sh/frontpage/fetch-example.png" alt="Screenshot zeigt das Laden von Daten von einer Web-API" class="hero"><h3 id="nu-hat-tolle-fehlermeldungen" tabindex="-1"><a class="header-anchor" href="#nu-hat-tolle-fehlermeldungen" aria-hidden="true">#</a> Nu hat tolle Fehlermeldungen</h3><p>Nu arbeitet mit typisierten Daten, wodurch Fehler abgefangen werden, die andere Shells nicht erkennen. Und falls etwas schiefgeht bekommt genau mitgeteilt wo und weshalb:</p><img src="https://www.nushell.sh/frontpage/miette-example.png" alt="Screenshot zeigt eine Fehlermeldung, wenn Nu einen type error abfängt" class="hero"><h2 id="nu-installieren" tabindex="-1"><a class="header-anchor" href="#nu-installieren" aria-hidden="true">#</a> Nu installieren</h2>',5),m={href:"https://github.com/nushell/nushell/releases",target:"_blank",rel:"noopener noreferrer"},f={href:"https://repology.org/project/nushell/versions",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/nushell/nushell",target:"_blank",rel:"noopener noreferrer"},b=i(`<h4 id="macos-linux" tabindex="-1"><a class="header-anchor" href="#macos-linux" aria-hidden="true">#</a> macOS / Linux:</h4><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>$ brew <span class="token function">install</span> nushell
</code></pre></div><h4 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> Windows:</h4><div class="language-powershell" data-ext="powershell"><pre class="language-powershell"><code>$ winget install nushell
</code></pre></div><h2 id="community" tabindex="-1"><a class="header-anchor" href="#community" aria-hidden="true">#</a> Community</h2>`,5),w={href:"https://discord.gg/NtAbbGn",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/nushell/nushell.github.io/issues",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/nushell/nushell.github.io/pulls",target:"_blank",rel:"noopener noreferrer"};function v(N,z){const r=s("RouterLink"),a=s("ExternalLinkIcon");return h(),d("div",null,[c,g,n("p",null,[e("Nu versteht "),t(r,{to:"/book/loading_data.html"},{default:l(()=>[e("JSON, YAML, XML, Excel und noch mehr")]),_:1}),e(". Es ist einfach Daten in eine Nu Pipeline zu laden ganz egal ob diese in einer Datei, einer Datenbank oder einer Web-API liegen:")]),p,n("p",null,[e("Nushell ist verfügbar "),n("a",m,[e("als kompiliertes Programm"),t(a)]),e(", "),n("a",f,[e("von einem Packetmanager"),t(a)]),e(", und als "),n("a",_,[e("Source Code"),t(a)]),e(". Die detaillierten Installationsanweisungen sind "),t(r,{to:"/de/book/installation.html"},{default:l(()=>[e("hier")]),_:1}),e(" zu finden. Oder direkt loslegen:")]),b,n("p",null,[e("Wenn es irgendwelche Fragen gibt, am besten unserem (englischsprachigen) "),n("a",w,[e("Discord Server"),t(a)]),e(" beitreten. Dort gibt es sehr viele Menschen die gerne weiterhelfen ganz egal ob man neu zu Nu ist oder nicht.")]),n("p",null,[e("Dazu beitragen diese Seiten zu verbessern durch "),n("a",x,[e("Feedback"),t(a)]),e(" oder eine "),n("a",k,[e("Pull Request"),t(a)]),e(".")])])}const S=o(u,[["render",v],["__file","index.html.vue"]]);export{S as default};
