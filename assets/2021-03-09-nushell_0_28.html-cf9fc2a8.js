import{_ as r,M as a,p as s,q as i,R as h,Q as t,t as e,N as o,a1 as l}from"./framework-344bb0e4.js";const u={},d=t("h1",{id:"nushell-0-28",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell-0-28","aria-hidden":"true"},"#"),e(" Nushell 0.28")],-1),c=t("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),p=t("p",null,"Today, we're releasing 0.28 of Nu. In this release we've added new commands for working with tables, paths, and lots of general feature improvements.",-1),m=t("h1",{id:"where-to-get-it",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),g={href:"https://github.com/nushell/nushell/releases/tag/0.28.0",target:"_blank",rel:"noopener noreferrer"},f={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},_=t("code",null,"cargo install nu",-1),b=l(`<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p><p>If you&#39;d like to try the experimental paging feature in this release, you can install with <code>cargo install nu --features=table-pager</code>.</p><p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="what-s-new" tabindex="-1"><a class="header-anchor" href="#what-s-new" aria-hidden="true">#</a> What&#39;s New</h1><h2 id="new-commands" tabindex="-1"><a class="header-anchor" href="#new-commands" aria-hidden="true">#</a> New commands</h2><h3 id="rotate-andrasio" tabindex="-1"><a class="header-anchor" href="#rotate-andrasio" aria-hidden="true">#</a> Rotate (andrasio)</h3><p>With the new <code>rotate</code> command, we have an easier way to turn rows to columns and columns to rows.</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; echo [[col1, col2, col3]; [cell1, cell2, cell3] [cell4, cell5, cell6]] | rotate
───┬─────────┬─────────┬─────────
 # │ Column0 │ Column1 │ Column2
───┼─────────┼─────────┼─────────
 0 │ cell4   │ cell1   │ col1
 1 │ cell5   │ cell2   │ col2
 2 │ cell6   │ cell3   │ col3
───┴─────────┴─────────┴─────────
</code></pre></div><p>You can also rotate counter-clockwise:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; echo [[col1, col2, col3]; [cell1, cell2, cell3] [cell4, cell5, cell6]] | rotate counter-clockwise
───┬─────────┬─────────┬─────────
 # │ Column0 │ Column1 │ Column2
───┼─────────┼─────────┼─────────
 0 │ col3    │ cell3   │ cell6
 1 │ col2    │ cell2   │ cell5
 2 │ col1    │ cell1   │ cell4
───┴─────────┴─────────┴─────────
</code></pre></div><h3 id="column-rolling-andrasio" tabindex="-1"><a class="header-anchor" href="#column-rolling-andrasio" aria-hidden="true">#</a> Column rolling (andrasio)</h3><p>You are now able to move columns around in the same way you may do a bitwise-rotate.</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; echo &#39;00000100&#39;
| split chars
| each { str to-int }
| rotate counter-clockwise _
| reject _
| rename bit1 bit2 bit3 bit4 bit5 bit6 bit7 bit8
| roll column 3

───┬──────┬──────┬──────┬──────┬──────┬──────┬──────┬──────
 # │ bit4 │ bit5 │ bit6 │ bit7 │ bit8 │ bit1 │ bit2 │ bit3
───┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────
 0 │    0 │    0 │    1 │    0 │    0 │    0 │    0 │    0
───┴──────┴──────┴──────┴──────┴──────┴──────┴──────┴──────
</code></pre></div><h3 id="dropping-columns-andrasio" tabindex="-1"><a class="header-anchor" href="#dropping-columns-andrasio" aria-hidden="true">#</a> Dropping columns (andrasio)</h3><p>The new <code>drop column</code> subcommand also gives you the ability to remove the last column from a table.</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; echo [[lib, extension]; [nu-core, rs] [rake, rb]] | drop column
─────────
   lib
─────────
 nu-core
 rake
─────────
</code></pre></div><h3 id="ansi-strip-fdncred" tabindex="-1"><a class="header-anchor" href="#ansi-strip-fdncred" aria-hidden="true">#</a> ANSI strip (fdncred)</h3>`,17),w={href:"https://github.com/nushell/nushell/pull/3095",target:"_blank",rel:"noopener noreferrer"},x=t("code",null,"ansi strip",-1),k=l(`<h3 id="path-joining-kubouch" tabindex="-1"><a class="header-anchor" href="#path-joining-kubouch" aria-hidden="true">#</a> Path joining (kubouch)</h3><p>We now have a <code>path join</code> command which allows you to join part of a path to an existing path following the path conventions for your platform.</p><p>For example, on Windows:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; echo &#39;C:\\Users\\viking&#39; | path join spam.txt
</code></pre></div><p>Or Unix-based systems:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; echo &#39;/home/viking&#39; | path join spam.txt
</code></pre></div><h2 id="functionality" tabindex="-1"><a class="header-anchor" href="#functionality" aria-hidden="true">#</a> Functionality</h2><h3 id="experimental-built-in-table-paging-rezural" tabindex="-1"><a class="header-anchor" href="#experimental-built-in-table-paging-rezural" aria-hidden="true">#</a> (Experimental) Built-in table paging (rezural)</h3>`,8),v=t("code",null,"--features=table-pager",-1),y={href:"https://github.com/nushell/nushell/pull/3128",target:"_blank",rel:"noopener noreferrer"},N=l('<p>In the future, we&#39;ll likely move this to its own command so that you can enable paging in much the same way you would use <code>less</code> in other shells.</p><p>Let us know how this works for you.</p><h3 id="timing-your-pipelines-fdncred" tabindex="-1"><a class="header-anchor" href="#timing-your-pipelines-fdncred" aria-hidden="true">#</a> Timing your pipelines (fdncred)</h3><p>You can now see the time spent in the last set of commands you sent to Nushell by checking the new <code>$nu.env.CMD_DURATION</code> environment variable.</p><p>This will let you, for example, add timings to your prompts for all your fancy prompt needs.</p><h3 id="improved-matches-ilius-kubouch" tabindex="-1"><a class="header-anchor" href="#improved-matches-ilius-kubouch" aria-hidden="true">#</a> Improved matches (ilius, kubouch)</h3>',6),C=t("code",null,"match",-1),I={href:"https://github.com/nushell/nushell/pull/3111",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/nushell/nushell/pull/3114",target:"_blank",rel:"noopener noreferrer"},W=t("h3",{id:"fetch-now-uses-the-latest-surf-and-rustls-fdncred",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fetch-now-uses-the-latest-surf-and-rustls-fdncred","aria-hidden":"true"},"#"),e(" Fetch now uses the latest surf and rustls (fdncred)")],-1),j={href:"https://github.com/nushell/nushell/pull/3120",target:"_blank",rel:"noopener noreferrer"},S=t("code",null,"fetch",-1),V=t("h3",{id:"cleaner-help-output-kubouch",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#cleaner-help-output-kubouch","aria-hidden":"true"},"#"),e(" Cleaner help output (kubouch)")],-1),z={href:"https://github.com/nushell/nushell/pull/3124",target:"_blank",rel:"noopener noreferrer"},F=t("code",null,"help commands",-1),L=t("h3",{id:"json-order-is-now-preserved-again-andrasio",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#json-order-is-now-preserved-again-andrasio","aria-hidden":"true"},"#"),e(" JSON order is now preserved, again (andrasio)")],-1),B=t("p",null,"We previously supported preserving the order of fields of JSON when serialized and deserialized, but as we changed and updated dependencies we lost this ability.",-1),E={href:"https://github.com/nushell/nushell/pull/3126",target:"_blank",rel:"noopener noreferrer"},A=t("h3",{id:"exit-codes-tiffany352",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#exit-codes-tiffany352","aria-hidden":"true"},"#"),e(" Exit codes (tiffany352)")],-1),D=t("code",null,"exit",-1),O={href:"https://github.com/nushell/nushell/pull/3132",target:"_blank",rel:"noopener noreferrer"},P=t("h3",{id:"vscode-extension-is-now-published-fdncred",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#vscode-extension-is-now-published-fdncred","aria-hidden":"true"},"#"),e(" VSCode extension is now published (fdncred)")],-1),R={href:"https://marketplace.visualstudio.com/items?itemName=TheNuProjectContributors.vscode-nushell-lang",target:"_blank",rel:"noopener noreferrer"},U=t("h2",{id:"internal",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#internal","aria-hidden":"true"},"#"),e(" Internal")],-1),Y={href:"https://github.com/nushell/nushell/pull/3078",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/nushell/nushell/pull/3084",target:"_blank",rel:"noopener noreferrer"},J=t("code",null,".",-1),M={href:"https://github.com/nushell/nushell/pull/3088",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/nushell/nushell/pull/3089",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/nushell/nushell/pull/3100",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/nushell/nushell/pull/3091",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/nushell/nushell/pull/3093",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/nushell/nushell/pull/3099",target:"_blank",rel:"noopener noreferrer"},X=t("code",null,"flatten",-1),Z={href:"https://github.com/nushell/nushell/pull/3112",target:"_blank",rel:"noopener noreferrer"},ee=t("code",null,"std::err",-1),te={href:"https://github.com/nushell/nushell/pull/3133",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://github.com/nushell/nushell/pull/3140",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://github.com/nushell/nushell/pull/3144",target:"_blank",rel:"noopener noreferrer"},le=t("code",null,"char",-1),re={href:"https://github.com/nushell/nushell/pull/3146",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://github.com/nushell/nu_scripts/blob/main/nu_release.nu",target:"_blank",rel:"noopener noreferrer"},se=t("h2",{id:"documentation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),e(" Documentation")],-1),ie={href:"https://github.com/nushell/nushell.github.io/pull/109",target:"_blank",rel:"noopener noreferrer"},he={href:"https://github.com/nushell/nushell.github.io/pull/108",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://github.com/nushell/nushell.github.io/pull/107",target:"_blank",rel:"noopener noreferrer"},de={href:"https://github.com/nushell/nushell.github.io/pull/106",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://github.com/nushell/nushell.github.io/pull/104",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://github.com/nushell/nushell.github.io/pull/103",target:"_blank",rel:"noopener noreferrer"},me=t("h1",{id:"looking-ahead",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#looking-ahead","aria-hidden":"true"},"#"),e(" Looking ahead")],-1),ge={href:"https://github.com/jonathandturner/reedline",target:"_blank",rel:"noopener noreferrer"},fe=t("p",null,"And, of course, we hear the feedback about improving completions. We're very much interested in beginning experiments here that will lead to a far better experience as we approach 1.0.",-1);function _e(be,we){const n=a("ExternalLinkIcon");return s(),i("div",null,[d,c,p,h(" more "),m,t("p",null,[e("Nu 0.28 is available as "),t("a",g,[e("pre-built binaries"),o(n)]),e(" or from "),t("a",f,[e("crates.io"),o(n)]),e(". If you have Rust installed you can install it using "),_,e(".")]),b,t("p",null,[e("With the new "),t("a",w,[x,e(" command"),o(n)]),e(", you can remove ansi sequences from a string of text.")]),k,t("p",null,[e("If you build Nushell with the optional "),v,e(" you'll see some new capabilities we're working on that will let you "),t("a",y,[e("view a table with a built-in pager"),o(n)]),e(".")]),N,t("p",null,[e("The "),C,e(" command has a "),t("a",I,[e("few new flags"),o(n)]),e(" to give you more control over how you'd like to match text.")]),t("p",null,[e("You're now also able to "),t("a",T,[e("invert the match"),o(n)]),e(".")]),W,t("p",null,[e("We're experimenting with moving away from openssl for some commands. In this release, we've moved "),t("a",j,[S,e(" to use the latest surf"),o(n)]),e(", which gives us the ability to use rustls instead of openssl. Please try this out and let us know how it works for you.")]),V,t("p",null,[e("We've cleaned up the help, so that there's now a difference between "),t("a",z,[e("the synopsis for a command and its full help text"),o(n)]),e(". This makes "),F,e(" output a table that's much easier to read.")]),L,B,t("p",null,[e("In this release, it's been re-added so that "),t("a",E,[e("fields will preserve order"),o(n)]),e(" once again.")]),A,t("p",null,[e("The "),D,e(" command can now "),t("a",O,[e("optionally take an exit code"),o(n)]),e(", allowing you to quit a nushell with an exit code that can be detect outside of the shell.")]),P,t("p",null,[e("VSCode users can now use the VSCode extension for Nushell "),t("a",R,[e("right from the VSCode marketplace"),o(n)]),e("!")]),U,t("ul",null,[t("li",null,[e("Improved "),t("a",Y,[e("tests for nu-env"),o(n)]),e(" (andrasio)")]),t("li",null,[e("We now remove the "),t("a",q,[e("current directory ("),J,e(") from paths"),o(n)]),e(" where possible (iCodeSometime)")]),t("li",null,[e("We've begun a multi-step process of simplifying how tables are rendered. The first step is to "),t("a",M,[e("convert drawing table to return strings"),o(n)]),e(" (rezural).")]),t("li",null,[e("We've "),t("a",$,[e("vendored an ansi term crate"),o(n)]),e(" to make it easier to improve. This helped make "),t("a",K,[e("'Light' colors"),o(n)]),e(" easier to reach. (fdncred)")]),t("li",null,[e("We've removed some "),t("a",Q,[e("unnecessary dependencies"),o(n)]),e(" (stormasm)")]),t("li",null,[e("Some general "),t("a",G,[e("improvements to parser logic"),o(n)]),e(" (ilius)")]),t("li",null,[e("Some crashes in "),t("a",H,[X,e(" and docs were fixed"),o(n)]),e(" (stormasm)")]),t("li",null,[e("We're now using the "),t("a",Z,[e("host for output"),o(n)]),e(" rather than "),ee,e(" for better portability. (LhKipp)")]),t("li",null,[e("Improved ergnomics "),t("a",te,[e("when working with $nothing"),o(n)]),e(" (fdncred)")]),t("li",null,[e("Fixed some "),t("a",ne,[e("locking logic when working with output"),o(n)]),e(" (ahkrr)")]),t("li",null,[e("Bel and backspace are "),t("a",oe,[e("now part of "),le,o(n)]),e(" (fdncred)")]),t("li",null,[t("a",re,[e("Trash functionality has been fixed"),o(n)]),e(" (tw4452852)")]),t("li",null,[e("Today's crates.io release was also "),t("a",ae,[e("fully automated, thanks to Nushell"),o(n)]),e(" (jonathandturner)")])]),se,t("ul",null,[t("li",null,[e("Instructions for building and "),t("a",ie,[e("running the website locally"),o(n)]),e(" (jakevossen5)")]),t("li",null,[e("Updates to the "),t("a",he,[e("docker instructions"),o(n)]),e(" (jakevossen5)")]),t("li",null,[e("Improvements to the "),t("a",ue,[e("environment documentation"),o(n)]),e(" (stormasm)")]),t("li",null,[e("Fixed typo in the "),t("a",de,[e("textview docs"),o(n)]),e(" (davidmalcolm)")]),t("li",null,[e("Corrected "),t("a",ce,[e("Nushell version in excerpt"),o(n)]),e(" (iCodeSometime)")]),t("li",null,[e("Fixed a typo in the "),t("a",pe,[e("PowerShell comparison"),o(n)]),e(" (JTurtl3)")])]),me,t("p",null,[e("We're continuing our 1.0 planning and hope to publish a proposal soon for your feedback. There are also some on-going experiments, including a new "),t("a",ge,[e("line editor"),o(n)]),e(" that are offering good insights into better ways of working with the terminal.")]),fe])}const ke=r(u,[["render",_e],["__file","2021-03-09-nushell_0_28.html.vue"]]);export{ke as default};
