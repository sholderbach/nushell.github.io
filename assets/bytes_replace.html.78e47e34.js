import{_ as e,o as t,c as p,a,t as s,d as o,e as c}from"./app.8034769a.js";const l={},r={id:"frontmatter-title",tabindex:"-1"},u=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),i=o(),d={style:{"white-space":"pre-wrap"}},k=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; bytes replace (find) (replace) ...rest --all</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>find</code>: the pattern to find</li><li><code>replace</code>: the replacement pattern</li><li><code>...rest</code>: optionally find and replace text by column paths</li><li><code>--all</code>: replace all occurrences of find binary</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Find and replace contents</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> 0x<span class="token punctuation">[</span><span class="token number">10</span> AA FF AA FF<span class="token punctuation">]</span> <span class="token operator">|</span> bytes replace 0x<span class="token punctuation">[</span><span class="token number">10</span> AA<span class="token punctuation">]</span> 0x<span class="token punctuation">[</span>FF<span class="token punctuation">]</span>
</code></pre></div><p>Find and replace all occurrences of find binary</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> 0x<span class="token punctuation">[</span><span class="token number">10</span> AA <span class="token number">10</span> BB <span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">|</span> bytes replace <span class="token parameter variable">-a</span> 0x<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> 0x<span class="token punctuation">[</span>A0<span class="token punctuation">]</span>
</code></pre></div><p>Find and replace all occurrences of find binary in table</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>ColA ColB ColC<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>0x<span class="token punctuation">[</span><span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span><span class="token punctuation">]</span> 0x<span class="token punctuation">[</span><span class="token number">14</span> <span class="token number">15</span> <span class="token number">16</span><span class="token punctuation">]</span> 0x<span class="token punctuation">[</span><span class="token number">17</span> <span class="token number">18</span> <span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> bytes replace <span class="token parameter variable">-a</span> 0x<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> 0x<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> ColA ColC
</code></pre></div>`,11);function h(n,b){return t(),p("div",null,[a("h1",r,[u,i,a("code",null,s(n.$frontmatter.title),1)]),a("div",d,s(n.$frontmatter.usage),1),k])}const f=e(l,[["render",h],["__file","bytes_replace.html.vue"]]);export{f as default};
