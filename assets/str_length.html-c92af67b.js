import{_ as n,p as r,q as l,Q as e,t as s,v as t,a1 as o}from"./framework-344bb0e4.js";const c={},i={id:"frontmatter-title-for-strings",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#frontmatter-title-for-strings","aria-hidden":"true"},"#",-1),p={class:"command-title"},d=o(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; str length ...rest --grapheme-clusters --utf-8-bytes</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: For a data structure input, replace strings at the given cell paths with their length</li><li><code>--grapheme-clusters</code> <code>(-g)</code>: count length using grapheme clusters (all visible chars have length 1)</li><li><code>--utf-8-bytes</code> <code>(-b)</code>: count length using UTF-8 bytes (default; all non-ASCII chars have length 2+)</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Return the lengths of a string</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;hello&#39;</span> <span class="token operator">|</span> str length
</code></pre></div><p>Count length using grapheme clusters</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;🇯🇵ほげ ふが ぴよ&#39;</span> <span class="token operator">|</span> str length <span class="token parameter variable">-g</span>
</code></pre></div><p>Return the lengths of multiple strings</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;hi&#39;</span> <span class="token string">&#39;there&#39;</span><span class="token punctuation">]</span> <span class="token operator">|</span> str length
</code></pre></div>`,11);function g(a,u){return r(),l("div",null,[e("h1",i,[h,s(),e("code",null,t(a.$frontmatter.title),1),s(" for strings")]),e("div",p,t(a.$frontmatter.strings),1),d])}const f=n(c,[["render",g],["__file","str_length.html.vue"]]);export{f as default};
