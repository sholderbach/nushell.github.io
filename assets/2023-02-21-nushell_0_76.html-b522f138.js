import{_ as s,M as r,p as a,q as i,R as h,Q as n,t as e,N as o,a1 as l}from"./framework-344bb0e4.js";const u="/assets/0_76_explain_cmd-6add3586.png",c="/assets/0_76_inspect_cmd-e1084086.png",d="/assets/0_76_profile_prompt-d281342b.png",p="/assets/0_76_view_files-161e5545.png",_="/assets/0_76_plugin_with_example-7d50abee.png",m={},g=n("h1",{id:"nushell-0-76",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nushell-0-76","aria-hidden":"true"},"#"),e(" Nushell 0.76")],-1),f=n("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your command line. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful command line pipelines.",-1),b=n("p",null,"Today, we're releasing version 0.76 of Nu. This release adds more commands for debugging, multiplication to clone strings, and moves some file formats to a plugin, thanks to better plugin support.",-1),k=n("h1",{id:"where-to-get-it",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),v={href:"https://github.com/nushell/nushell/releases/tag/0.76.0",target:"_blank",rel:"noopener noreferrer"},w={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"cargo install nu",-1),y=l('<p>NOTE: The optional dataframe functionality is available by <code>cargo install nu --features=dataframe</code>.</p><p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="themes-of-this-release-new-features" tabindex="-1"><a class="header-anchor" href="#themes-of-this-release-new-features" aria-hidden="true">#</a> Themes of this release / New features</h1><h2 id="debugging" tabindex="-1"><a class="header-anchor" href="#debugging" aria-hidden="true">#</a> Debugging</h2><p>We&#39;ve added a few new commands to help with nushell debugging.</p>',5),T=n("li",null,[n("p",null,[n("code",null,"ast"),e(" - The "),n("code",null,"ast"),e(" command works the same as before and produces an ast for any pipeline you give it.")])],-1),N=n("li",null,[n("p",null,[n("code",null,"debug"),e(" - The "),n("code",null,"debug"),e(" command works the same as before and produces some output about nushell values.")])],-1),F={href:"https://github.com/nushell/nushell/pull/7957",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"explain",-1),S=n("p",null,[e("The explain command attempts to explain to you how the pipeline, in the passed in block, is going to be interpreted. It shows the pipeline and command index, the looked up and found command name, the command argument data type, and argument details, among other things. Note that spans are also included and can be used with "),n("code",null,"view span"),e(".")],-1),I=n("p",null,[n("img",{src:u,alt:"explain command"})],-1),A={href:"https://github.com/nushell/nushell/pull/8028",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"inspect",-1),P=n("p",null,[e("The purpose of the "),n("code",null,"inspect"),e(" command is to help to debug pipelines. It works by allowing you to inject the "),n("code",null,"inspect"),e(" command into a pipeline at any point. Then it shows you what the input description is and what the input values are that are passed into "),n("code",null,"inspect"),e(". With each step it prints this information out while also passing the value information on to the next step in the pipeline.")],-1),E=n("p",null,[n("img",{src:c,alt:"inspect command"})],-1),U=n("li",null,[n("p",null,[n("code",null,"metadata"),e(" - The "),n("code",null,"metadata"),e(" command works the same as before.")])],-1),W={href:"https://github.com/nushell/nushell/pull/7854",target:"_blank",rel:"noopener noreferrer"},C=n("code",null,"profile",-1),M=n("p",null,"Enables fine-grained profiling of individual pipeline elements and recursively stepping into blocks/closures. The recursion depth can be controlled (default is 1) and it can optionally collect the profiled source segments for easier orientation and value in each step for easier debugging.",-1),R=n("p",null,[n("img",{src:d,alt:"profile_prompt"})],-1),z=n("p",null,[n("em",null,"Note: There are known limitations that the profiler can't run. For example, it can't collect data from subexpressions and loop iterations. It is caused by profiling data being collected as pipeline metadata and a known bug that pipeline metadata is not preserved in some cases.")],-1),H={href:"https://github.com/nushell/nushell/pull/8018",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"timeit",-1),j=l(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code>〉timeit <span class="token punctuation">{</span> <span class="token function">ls</span> <span class="token operator">|</span> sort-by name <span class="token builtin class-name">type</span> <span class="token parameter variable">-i</span> <span class="token operator">|</span> get name <span class="token punctuation">}</span>
2ms <span class="token number">509</span>µs 900ns
</code></pre></div>`,1),D={href:"https://github.com/nushell/nushell/pull/7989",target:"_blank",rel:"noopener noreferrer"},L=n("code",null,"view files",-1),$=n("p",null,[n("code",null,"view files"),e(" lists the files and entries loaded into nushell's EngineState memory. Note the spans, for use with "),n("code",null,"view span"),e(" and the size of each file's contents stored.")],-1),O=n("p",null,[n("img",{src:p,alt:"explain command"})],-1),J={href:"https://github.com/nushell/nushell/pull/7989",target:"_blank",rel:"noopener noreferrer"},Q=n("code",null,"view source",-1),X=n("code",null,"view-source",-1),G=l(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code>〉def my-cmd <span class="token punctuation">[</span>arg<span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token builtin class-name">echo</span> <span class="token variable">$arg</span> <span class="token punctuation">}</span>
〉my-cmd hi
hi
〉view <span class="token builtin class-name">source</span> my-cmd
def my-cmd <span class="token punctuation">[</span> arg:any <span class="token parameter variable">--help</span> <span class="token punctuation">(</span>-h<span class="token punctuation">)</span> <span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token builtin class-name">echo</span> <span class="token variable">$arg</span> <span class="token punctuation">}</span>
</code></pre></div>`,1),Y={href:"https://github.com/nushell/nushell/pull/7989",target:"_blank",rel:"noopener noreferrer"},K=n("code",null,"view span",-1),Z=l(`<p>Spans are important to nushell. One of their uses is to show where errors are. For instance, in this example below, the leader lines pointing to parts of the command line are able to point to <code>10</code>, <code>/</code>, and <code>&quot;bob&quot;</code> because each of those items have a span.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>〉10 / <span class="token string">&quot;bob&quot;</span>
Error: nu::parser::unsupported_operation <span class="token punctuation">(</span>link<span class="token punctuation">)</span>

  × Types mismatched <span class="token keyword">for</span> operation.
   ╭─<span class="token punctuation">[</span>entry <span class="token comment">#8:1:1]</span>
 <span class="token number">1</span> │ <span class="token number">10</span> / <span class="token string">&quot;bob&quot;</span>
   · ─┬ ┬ ──┬──
   ·  │ │   ╰── string
   ·  │ ╰── doesn&#39;t support these values.
   ·  ╰── int
   ╰────
  help: Change int or string to be the right types and try again.
</code></pre></div><h3 id="example-usage" tabindex="-1"><a class="header-anchor" href="#example-usage" aria-hidden="true">#</a> Example usage:</h3><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>〉let a <span class="token operator">=</span> <span class="token number">42</span>
〉<span class="token variable">$a</span>
<span class="token number">42</span>
〉metadata <span class="token variable">$a</span> <span class="token operator">|</span> get span
╭───────┬────────╮
│ start │ <span class="token number">113226</span> │
│ end   │ <span class="token number">113228</span> │
╰───────┴────────╯
〉view span <span class="token number">113226</span> <span class="token number">113228</span>
<span class="token number">42</span>
</code></pre></div><p>You can also find spans by using the <code>debug --raw</code> command.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>〉<span class="token variable">$env</span>.config <span class="token operator">|</span> get keybindings <span class="token operator">|</span> first <span class="token operator">|</span> debug <span class="token parameter variable">-r</span>
<span class="token punctuation">..</span>. bunch of stuff
                    span: Span <span class="token punctuation">{</span>
                        start: <span class="token number">68065</span>,
                        end: <span class="token number">68090</span>,
                    <span class="token punctuation">}</span>,
                <span class="token punctuation">}</span>,
            <span class="token punctuation">]</span>,
            span: Span <span class="token punctuation">{</span>
                start: <span class="token number">68050</span>,
                end: <span class="token number">68101</span>,
            <span class="token punctuation">}</span>,
        <span class="token punctuation">}</span>,
    <span class="token punctuation">]</span>,
    span: Span <span class="token punctuation">{</span>
        start: <span class="token number">67927</span>,
        end: <span class="token number">68108</span>,
    <span class="token punctuation">}</span>,
<span class="token punctuation">}</span>

〉view span <span class="token number">67927</span> <span class="token number">68108</span>
<span class="token punctuation">{</span>
    name: clear_everything
    modifier: control
    keycode: char_l
    mode: emacs
    event: <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> send: clearscrollback <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>

〉view span <span class="token number">68065</span> <span class="token number">68090</span>
<span class="token punctuation">{</span> send: clearscrollback <span class="token punctuation">}</span>

〉view span <span class="token number">68050</span> <span class="token number">68101</span>
<span class="token punctuation">[</span>
    <span class="token punctuation">{</span> send: clearscrollback <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre></div><p>In an effort to have a little more organization, we&#39;ve assigned a category of <code>Debug</code> to all commands that participate in nushell script debugging. Here is a list of commands that are in that category now.</p><ul><li>ast</li><li>debug</li><li>explain</li><li>inspect</li><li>metadata</li><li>profile</li><li>timeit</li><li>view</li><li>view files</li><li>view source</li><li>view span</li></ul>`,8),ee={id:"multiplication-of-strings-and-lists-is-now-supported-windsoilder",tabindex:"-1"},ne=n("a",{class:"header-anchor",href:"#multiplication-of-strings-and-lists-is-now-supported-windsoilder","aria-hidden":"true"},"#",-1),te={href:"https://github.com/nushell/nushell/pull/8061",target:"_blank",rel:"noopener noreferrer"},oe=l(`<p>Like in Python you can now use the multiplication operator <code>*</code> to create <code>n</code> concatenated copies of a string or list. Here <code>n</code> has to be an <code>int</code> value.</p><p>This can be useful if you want to quickly build ASCII art 😃! Note that the operation is commutative.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>〉<span class="token string">&quot; NU &quot;</span> * <span class="token number">3</span>
 NU  NU  NU
〉3 * Shell
ShellShellShell
</code></pre></div><p>In the same spirit you can use it to quickly create lists with repeatedly the same element.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>/home/stefan/nushell〉7 * <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>
╭───┬────╮
│ <span class="token number">0</span> │ <span class="token number">11</span> │
│ <span class="token number">1</span> │ <span class="token number">11</span> │
│ <span class="token number">2</span> │ <span class="token number">11</span> │
│ <span class="token number">3</span> │ <span class="token number">11</span> │
│ <span class="token number">4</span> │ <span class="token number">11</span> │
│ <span class="token number">5</span> │ <span class="token number">11</span> │
│ <span class="token number">6</span> │ <span class="token number">11</span> │
╰───┴────╯
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">Community Question</p><p>We are interested in your feedback regarding the list multiplication. Does this match your expectations or do you want to use this operator overload more often to do scalar multiplication and look for numerical broadcasting support. Let us know!</p></div>`,6),le={id:"dataframe-commands-are-again-explicitly-separated-from-core-nushell-commands-7998",tabindex:"-1"},se=n("a",{class:"header-anchor",href:"#dataframe-commands-are-again-explicitly-separated-from-core-nushell-commands-7998","aria-hidden":"true"},"#",-1),re={href:"https://github.com/nushell/nushell/pull/7998",target:"_blank",rel:"noopener noreferrer"},ae=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"NOTE"),n("p",null,[e("The optional dataframe functionality is available by "),n("code",null,"cargo install nu --features=dataframe"),e(" or a distribution that includes that feature.")])],-1),ie=n("p",null,[e("Dataframe commands have all been renamed in order to avoid confusion with nushell commands. It also makes our help commands less confusing. For instance, you can now do "),n("code",null,"help select"),e(" and understand how to use the traditional nushell select command and you can do "),n("code",null,"help dfr select"),e(" and understand how to use the dataframe specific select command. Previously this was a source of cryptic error messages that were confusing to users.")],-1),he={id:"path-vs-path-8003",tabindex:"-1"},ue=n("a",{class:"header-anchor",href:"#path-vs-path-8003","aria-hidden":"true"},"#",-1),ce=n("code",null,"PATH",-1),de=n("code",null,"Path",-1),pe={href:"https://github.com/nushell/nushell/pull/8003",target:"_blank",rel:"noopener noreferrer"},_e=n("p",null,[e("We fixed a "),n("code",null,"PATH"),e(" vs. "),n("code",null,"Path"),e(" bug in completions, so now you should be able to do commands like "),n("code",null,"cod<tab>"),e(" and get completions like "),n("code",null,"code"),e(" and "),n("code",null,"code.cmd"),e(" across all operating systems.")],-1),me={id:"more-commands-become-plugins-and-plugins-get-first-class-help-support-windsoilder-7984-7942",tabindex:"-1"},ge=n("a",{class:"header-anchor",href:"#more-commands-become-plugins-and-plugins-get-first-class-help-support-windsoilder-7984-7942","aria-hidden":"true"},"#",-1),fe={href:"https://github.com/nushell/nushell/pull/7984",target:"_blank",rel:"noopener noreferrer"},be={href:"https://github.com/nushell/nushell/pull/7942",target:"_blank",rel:"noopener noreferrer"},ke=l('<p>In an effort to both make the core nushell binary smaller and to improve our plugins system along the way we moved the commands for several less common file formats to <code>nu_plugin_formats</code>.</p><p>To make sure you still have a first-class experience while using these commands, our plugins can now support code examples in the <code>help</code> and <code>F1</code> menu.</p><p><img src="'+_+'" alt="Plugin nu_plugin_formats shows the help for from ini"></p><p>As a result, plugin authors need to slightly update their command <code>Signature</code> to <code>PluginSignature</code> which supports the examples and recompile.</p><h2 id="improved-error-messages-for-int-and-string-literals" tabindex="-1"><a class="header-anchor" href="#improved-error-messages-for-int-and-string-literals" aria-hidden="true">#</a> Improved error messages for int and string literals</h2>',5),ve=n("code",null,"string",-1),we=n("code",null,"int",-1),xe={href:"https://github.com/nushell/nushell/pull/7952",target:"_blank",rel:"noopener noreferrer"},ye=l(`<p>Errors in the format of escapes within double-quoted strings are reported specifically:</p><table><tr><th>Before</th><th>After</th></tr><tr><td><div class="language-text" data-ext="text"><pre class="language-text"><code>------------------------------------------
# Invalid 2 character escape
------------------------------------------
〉&quot;bad: \\z&quot;
Error: nu::parser::parse_mismatch (link)

  × Parse mismatch during operation.
   ╭─[entry #19:1:1]
 1 │ &quot;bad: \\z&quot;
   · ────┬────
   ·     ╰── expected any shape
   ╰────


------------------------------------------
# Invalid unicode escape
------------------------------------------
〉&quot;bad: \\u{1fbogus}&quot;
Error: nu::parser::parse_mismatch (link)

  × Parse mismatch during operation.
   ╭─[entry #21:1:1]
 1 │ &quot;bad: \\u{1fbogus}&quot;
   · ─────────┬────────
   ·          ╰── expected any shape
   ╰────
</code></pre></div></td><td><div class="language-text" data-ext="text"><pre class="language-text"><code>-------------------------------------------------------
# Invalid 2 character escape
-------------------------------------------------------
〉&quot;bad: \\z&quot;
Error:
  × Invalid literal
   ╭─[entry #18:1:1]
 1 │ &quot;bad: \\z&quot;
   ·       ─┬─
   ·        ╰── unrecognized escape after &#39;\\&#39; in string
   ╰────



-------------------------------------------------------
# Invalid unicode escape
-------------------------------------------------------
〉&quot;bad: \\u{1fbogus}&quot;
Error:
  × Invalid literal
   ╭─[entry #20:1:1]
 1 │ &quot;bad: \\u{1fbogus}&quot;
   ·       ──────┬─────
   ·             ╰── invalid unicode escape &#39;\\u{X...}&#39;,
   .             must be 1-6 hex digits, max value 10FFFF in string
   ╰────
</code></pre></div></td></tr></table><p>Invalid digits in radix-prefixed int literals are now flagged as a specific error. The old parser treated these invalid ints as bare strings:</p><table><tr><th>Before</th><th>After</th></tr><tr><td><div class="language-text" data-ext="text"><pre class="language-text"><code>------------------------------------------------------
# invalid radix-prefixed integer literals
------------------------------------------------------
〉( 0 + 0x22bogus ) # hex int literal
Error: nu::parser::unsupported_operation (link)

 × Types mismatched for operation.
  ╭─[entry #26:1:1]
1 │ ( 0 + 0x22bogus ) # hex int literal
  ·   ┬ ┬ ────┬────
  ·   │ │     ╰── string
  ·   │ ╰── doesn&#39;t support these values.
  ·   ╰── int
  ╰────
 help: Change int or string to be the right types and
       try again.

</code></pre></div></td><td><div class="language-text" data-ext="text"><pre class="language-text"><code>--------------------------------------------------------
# invalid radix-prefixed integer literals
--------------------------------------------------------
〉( 0 + 0x22bogus ) # hex int literal
Error:
  × Invalid literal
   ╭─[entry #24:1:1]
 1 │ ( 0 + 0x22bogus ) # hex int literal
   ·       ────┬────
   ·           ╰── invalid digits for radix 16 in int
   ╰────






</code></pre></div></td></tr></table><h2 id="general-housekeeping-in-the-nu-codebase-hofer-julian-fdncred-rgwood-sholderbach" tabindex="-1"><a class="header-anchor" href="#general-housekeeping-in-the-nu-codebase-hofer-julian-fdncred-rgwood-sholderbach" aria-hidden="true">#</a> General housekeeping in the Nu codebase (Hofer-Julian, fdncred, rgwood, sholderbach)</h2><p>We are very lucky that we recently had a number of new contributors starting to help out with bug fixes and improvements to Nushell. We want to thank you and want to welcome you all!</p>`,6),Te={href:"https://github.com/nushell/nushell",target:"_blank",rel:"noopener noreferrer"},Ne=n("code",null,"codecov.io",-1),Fe=n("h1",{id:"breaking-changes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#breaking-changes","aria-hidden":"true"},"#"),e(" Breaking changes")],-1),qe=n("code",null,"load-env",-1),Se=n("code",null,"$env.PWD",-1),Ie={href:"https://github.com/nushell/nushell/pull/7963",target:"_blank",rel:"noopener noreferrer"},Ae=n("code",null,"--numbered",-1),Be=n("code",null,"each",-1),Pe=n("code",null,"par-each",-1),Ee=n("code",null,"each while",-1),Ue=n("code",null,"reduce",-1),We=n("code",null,"enumerate",-1),Ce={href:"https://github.com/nushell/nushell/pull/7777",target:"_blank",rel:"noopener noreferrer"},Me=n("code",null,"nu_plugin::Plugin::signature",-1),Re=n("code",null,"fn signature(&self) -> Vec<Signature>",-1),ze=n("code",null,"fn signature(&self) -> Vec<PluginSignature>",-1),He=n("code",null,"Signature",-1),Ve=n("code",null,"PluginSignature",-1),je={href:"https://github.com/nushell/nushell/pull/7984",target:"_blank",rel:"noopener noreferrer"},De=n("code",null,"benchmark",-1),Le=n("code",null,"timeit",-1),$e={href:"https://github.com/nushell/nushell/pull/8018",target:"_blank",rel:"noopener noreferrer"},Oe=n("code",null,"dataframe",-1),Je=n("code",null,"dfr",-1),Qe={href:"https://github.com/nushell/nushell/pull/7998",target:"_blank",rel:"noopener noreferrer"},Xe=n("code",null,"view-source",-1),Ge=n("code",null,"view source",-1),Ye={href:"https://github.com/nushell/nushell/pull/7989",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://github.com/nushell/nushell/pull/7984",target:"_blank",rel:"noopener noreferrer"},Ze=n("code",null,"str lpad",-1),en=n("code",null,"str rpad",-1),nn=n("code",null,"fill",-1),tn={href:"https://github.com/nushell/nushell/pull/7846",target:"_blank",rel:"noopener noreferrer"},on=n("code",null,"from ini",-1),ln=n("code",null,"from vcf",-1),sn=n("code",null,"from ics",-1),rn=n("code",null,"from eml",-1),an=n("code",null,"nu_plugin_formats",-1),hn={href:"https://github.com/nushell/nushell/pull/7942",target:"_blank",rel:"noopener noreferrer"},un=n("code",null,"http get",-1),cn=n("code",null,"-t",-1),dn=n("code",null,"--timeout",-1),pn=n("code",null,"-m",-1),_n=n("code",null,"--max-time",-1),mn={href:"https://github.com/nushell/nushell/pull/8088",target:"_blank",rel:"noopener noreferrer"},gn=n("code",null,"--verbose",-1),fn={href:"https://github.com/nushell/nushell/pull/8014",target:"_blank",rel:"noopener noreferrer"},bn=n("code",null,"parse",-1),kn={href:"https://github.com/nushell/nushell/pull/7897",target:"_blank",rel:"noopener noreferrer"},vn=n("h1",{id:"full-changelog",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#full-changelog","aria-hidden":"true"},"#"),e(" Full changelog")],-1),wn=n("h2",{id:"nushell",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nushell","aria-hidden":"true"},"#"),e(" Nushell")],-1),xn={href:"https://github.com/nushell/nushell/pull/8148",target:"_blank",rel:"noopener noreferrer"},yn=n("code",null,"with-env",-1),Tn={href:"https://github.com/nushell/nushell/pull/8119",target:"_blank",rel:"noopener noreferrer"},Nn=n("code",null,"with-env",-1),Fn={href:"https://github.com/nushell/nushell/pull/8038",target:"_blank",rel:"noopener noreferrer"},qn=n("code",null,"--encoding",-1),Sn=n("code",null,"register",-1),In={href:"https://github.com/nushell/nushell/pull/8142",target:"_blank",rel:"noopener noreferrer"},An=n("code",null,"reedline",-1),Bn=n("code",null,"0.16.0",-1),Pn={href:"https://github.com/nushell/nushell/pull/8125",target:"_blank",rel:"noopener noreferrer"},En={href:"https://github.com/nushell/nushell/pull/8121",target:"_blank",rel:"noopener noreferrer"},Un=n("code",null,"0.76.0",-1),Wn={href:"https://github.com/nushell/nushell/pull/8069",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://github.com/nushell/nushell/pull/8059",target:"_blank",rel:"noopener noreferrer"},Mn=n("code",null,"codecov.yml",-1),Rn={href:"https://github.com/nushell/nushell/pull/8057",target:"_blank",rel:"noopener noreferrer"},zn={href:"https://github.com/nushell/nushell/pull/8043",target:"_blank",rel:"noopener noreferrer"},Hn={href:"https://github.com/nushell/nushell/pull/8001",target:"_blank",rel:"noopener noreferrer"},Vn={href:"https://github.com/nushell/nushell/pull/7973",target:"_blank",rel:"noopener noreferrer"},jn=n("code",null,"reduce",-1),Dn={href:"https://github.com/nushell/nushell/pull/7972",target:"_blank",rel:"noopener noreferrer"},Ln=n("code",null,"def-env",-1),$n={href:"https://github.com/nushell/nushell/pull/7949",target:"_blank",rel:"noopener noreferrer"},On={href:"https://github.com/nushell/nushell/pull/7948",target:"_blank",rel:"noopener noreferrer"},Jn={href:"https://github.com/nushell/nushell/pull/8141",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://github.com/nushell/nushell/pull/8140",target:"_blank",rel:"noopener noreferrer"},Xn={href:"https://github.com/nushell/nushell/pull/8111",target:"_blank",rel:"noopener noreferrer"},Gn={href:"https://github.com/nushell/nushell/pull/8090",target:"_blank",rel:"noopener noreferrer"},Yn={href:"https://github.com/nushell/nushell/pull/8086",target:"_blank",rel:"noopener noreferrer"},Kn={href:"https://github.com/nushell/nushell/pull/8084",target:"_blank",rel:"noopener noreferrer"},Zn={href:"https://github.com/nushell/nushell/pull/8077",target:"_blank",rel:"noopener noreferrer"},et={href:"https://github.com/nushell/nushell/pull/8071",target:"_blank",rel:"noopener noreferrer"},nt={href:"https://github.com/nushell/nushell/pull/8048",target:"_blank",rel:"noopener noreferrer"},tt={href:"https://github.com/nushell/nushell/pull/8046",target:"_blank",rel:"noopener noreferrer"},ot={href:"https://github.com/nushell/nushell/pull/8028",target:"_blank",rel:"noopener noreferrer"},lt={href:"https://github.com/nushell/nushell/pull/8019",target:"_blank",rel:"noopener noreferrer"},st=n("code",null,"Category::Debug",-1),rt={href:"https://github.com/nushell/nushell/pull/8018",target:"_blank",rel:"noopener noreferrer"},at={href:"https://github.com/nushell/nushell/pull/8003",target:"_blank",rel:"noopener noreferrer"},it={href:"https://github.com/nushell/nushell/pull/7998",target:"_blank",rel:"noopener noreferrer"},ht={href:"https://github.com/nushell/nushell/pull/7989",target:"_blank",rel:"noopener noreferrer"},ut={href:"https://github.com/nushell/nushell/pull/7980",target:"_blank",rel:"noopener noreferrer"},ct={href:"https://github.com/nushell/nushell/pull/7957",target:"_blank",rel:"noopener noreferrer"},dt={href:"https://github.com/nushell/nushell/pull/7939",target:"_blank",rel:"noopener noreferrer"},pt={href:"https://github.com/nushell/nushell/pull/7935",target:"_blank",rel:"noopener noreferrer"},_t={href:"https://github.com/nushell/nushell/pull/7846",target:"_blank",rel:"noopener noreferrer"},mt=n("code",null,"fill",-1),gt=n("code",null,"str lpad",-1),ft=n("code",null,"str rpad",-1),bt={href:"https://github.com/nushell/nushell/pull/8138",target:"_blank",rel:"noopener noreferrer"},kt={href:"https://github.com/nushell/nushell/pull/8107",target:"_blank",rel:"noopener noreferrer"},vt={href:"https://github.com/nushell/nushell/pull/8061",target:"_blank",rel:"noopener noreferrer"},wt={href:"https://github.com/nushell/nushell/pull/7984",target:"_blank",rel:"noopener noreferrer"},xt={href:"https://github.com/nushell/nushell/pull/7942",target:"_blank",rel:"noopener noreferrer"},yt=n("code",null,"from xxx",-1),Tt={href:"https://github.com/nushell/nushell/pull/7889",target:"_blank",rel:"noopener noreferrer"},Nt={href:"https://github.com/nushell/nushell/pull/8134",target:"_blank",rel:"noopener noreferrer"},Ft=n("code",null,"string | fill",-1),qt={href:"https://github.com/nushell/nushell/pull/8050",target:"_blank",rel:"noopener noreferrer"},St={href:"https://github.com/nushell/nushell/pull/7952",target:"_blank",rel:"noopener noreferrer"},It={href:"https://github.com/nushell/nushell/pull/8133",target:"_blank",rel:"noopener noreferrer"},At={href:"https://github.com/nushell/nushell/pull/8132",target:"_blank",rel:"noopener noreferrer"},Bt={href:"https://github.com/nushell/nushell/pull/8128",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://github.com/nushell/nushell/pull/8065",target:"_blank",rel:"noopener noreferrer"},Et={href:"https://github.com/nushell/nushell/pull/8064",target:"_blank",rel:"noopener noreferrer"},Ut={href:"https://github.com/nushell/nushell/pull/8063",target:"_blank",rel:"noopener noreferrer"},Wt={href:"https://github.com/nushell/nushell/pull/8011",target:"_blank",rel:"noopener noreferrer"},Ct={href:"https://github.com/nushell/nushell/pull/7979",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://github.com/nushell/nushell/pull/7976",target:"_blank",rel:"noopener noreferrer"},Rt={href:"https://github.com/nushell/nushell/pull/7975",target:"_blank",rel:"noopener noreferrer"},zt={href:"https://github.com/nushell/nushell/pull/7974",target:"_blank",rel:"noopener noreferrer"},Ht={href:"https://github.com/nushell/nushell/pull/7958",target:"_blank",rel:"noopener noreferrer"},Vt={href:"https://github.com/nushell/nushell/pull/8120",target:"_blank",rel:"noopener noreferrer"},jt=n("code",null,"table --collapse",-1),Dt={href:"https://github.com/nushell/nushell/pull/8045",target:"_blank",rel:"noopener noreferrer"},Lt={href:"https://github.com/nushell/nushell/pull/8041",target:"_blank",rel:"noopener noreferrer"},$t={href:"https://github.com/nushell/nushell/pull/8000",target:"_blank",rel:"noopener noreferrer"},Ot={href:"https://github.com/nushell/nushell/pull/8102",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://github.com/nushell/nushell/pull/8055",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://github.com/nushell/nushell/pull/7929",target:"_blank",rel:"noopener noreferrer"},Xt=n("code",null,"help <keyword>",-1),Gt={href:"https://github.com/nushell/nushell/pull/7854",target:"_blank",rel:"noopener noreferrer"},Yt={href:"https://github.com/nushell/nushell/pull/8088",target:"_blank",rel:"noopener noreferrer"},Kt={href:"https://github.com/nushell/nushell/pull/7992",target:"_blank",rel:"noopener noreferrer"},Zt=n("code",null,"--insecure",-1),eo=n("code",null,"http get",-1),no={href:"https://github.com/nushell/nushell/pull/7987",target:"_blank",rel:"noopener noreferrer"},to={href:"https://github.com/nushell/nushell/pull/7967",target:"_blank",rel:"noopener noreferrer"},oo=n("code",null,"Command::run",-1),lo={href:"https://github.com/nushell/nushell/pull/8073",target:"_blank",rel:"noopener noreferrer"},so={href:"https://github.com/nushell/nushell/pull/8066",target:"_blank",rel:"noopener noreferrer"},ro={href:"https://github.com/nushell/nushell/pull/8049",target:"_blank",rel:"noopener noreferrer"},ao={href:"https://github.com/nushell/nushell/pull/8020",target:"_blank",rel:"noopener noreferrer"},io={href:"https://github.com/nushell/nushell/pull/8017",target:"_blank",rel:"noopener noreferrer"},ho={href:"https://github.com/nushell/nushell/pull/7999",target:"_blank",rel:"noopener noreferrer"},uo={href:"https://github.com/nushell/nushell/pull/7996",target:"_blank",rel:"noopener noreferrer"},co={href:"https://github.com/nushell/nushell/pull/7878",target:"_blank",rel:"noopener noreferrer"},po={href:"https://github.com/nushell/nushell/pull/8014",target:"_blank",rel:"noopener noreferrer"},_o={href:"https://github.com/nushell/nushell/pull/8009",target:"_blank",rel:"noopener noreferrer"},mo={href:"https://github.com/nushell/nushell/pull/7990",target:"_blank",rel:"noopener noreferrer"},go={href:"https://github.com/nushell/nushell/pull/7969",target:"_blank",rel:"noopener noreferrer"},fo={href:"https://github.com/nushell/nushell/pull/7964",target:"_blank",rel:"noopener noreferrer"},bo={href:"https://github.com/nushell/nushell/pull/7945",target:"_blank",rel:"noopener noreferrer"},ko={href:"https://github.com/nushell/nushell/pull/7963",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://github.com/nushell/nushell/pull/7962",target:"_blank",rel:"noopener noreferrer"},wo=n("code",null,"du",-1),xo={href:"https://github.com/nushell/nushell/pull/7895",target:"_blank",rel:"noopener noreferrer"},yo={href:"https://github.com/nushell/nushell/pull/7961",target:"_blank",rel:"noopener noreferrer"},To={href:"https://github.com/nushell/nushell/pull/7922",target:"_blank",rel:"noopener noreferrer"},No={href:"https://github.com/nushell/nushell/pull/7777",target:"_blank",rel:"noopener noreferrer"},Fo=n("code",null,"--numbered",-1),qo={href:"https://github.com/nushell/nushell/pull/7919",target:"_blank",rel:"noopener noreferrer"},So={href:"https://github.com/nushell/nushell/pull/7912",target:"_blank",rel:"noopener noreferrer"},Io={href:"https://github.com/nushell/nushell/pull/7870",target:"_blank",rel:"noopener noreferrer"},Ao=n("code",null,"parse",-1),Bo={href:"https://github.com/nushell/nushell/pull/7415",target:"_blank",rel:"noopener noreferrer"},Po={href:"https://github.com/nushell/nushell/pull/7799",target:"_blank",rel:"noopener noreferrer"},Eo=n("code",null,"start",-1),Uo=n("h2",{id:"extension",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#extension","aria-hidden":"true"},"#"),e(" Extension")],-1),Wo={href:"https://github.com/nushell/vscode-nushell-lang/pull/79",target:"_blank",rel:"noopener noreferrer"},Co=n("code",null,"use",-1),Mo={href:"https://github.com/nushell/vscode-nushell-lang/pull/77",target:"_blank",rel:"noopener noreferrer"},Ro=n("code",null,".nu",-1),zo=n("h2",{id:"documentation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),e(" Documentation")],-1),Ho={href:"https://github.com/nushell/nushell.github.io/pull/790",target:"_blank",rel:"noopener noreferrer"},Vo={href:"https://github.com/nushell/nushell.github.io/pull/775",target:"_blank",rel:"noopener noreferrer"},jo={href:"https://github.com/nushell/nushell.github.io/pull/789",target:"_blank",rel:"noopener noreferrer"},Do={href:"https://github.com/nushell/nushell.github.io/pull/785",target:"_blank",rel:"noopener noreferrer"},Lo=n("code",null,"book/commands",-1),$o=n("code",null,"commands/commands",-1),Oo={href:"https://github.com/nushell/nushell.github.io/pull/782",target:"_blank",rel:"noopener noreferrer"},Jo={href:"https://github.com/nushell/nushell.github.io/pull/787",target:"_blank",rel:"noopener noreferrer"},Qo={href:"https://github.com/nushell/nushell.github.io/pull/786",target:"_blank",rel:"noopener noreferrer"},Xo=n("code",null,"all",-1),Go=n("code",null,"any",-1),Yo={href:"https://github.com/nushell/nushell.github.io/pull/783",target:"_blank",rel:"noopener noreferrer"},Ko={href:"https://github.com/nushell/nushell.github.io/pull/771",target:"_blank",rel:"noopener noreferrer"},Zo={href:"https://github.com/nushell/nushell.github.io/pull/762",target:"_blank",rel:"noopener noreferrer"},el={href:"https://github.com/nushell/nushell.github.io/pull/760",target:"_blank",rel:"noopener noreferrer"},nl={href:"https://github.com/nushell/nushell.github.io/pull/780",target:"_blank",rel:"noopener noreferrer"},tl={href:"https://github.com/nushell/nushell.github.io/pull/778",target:"_blank",rel:"noopener noreferrer"},ol=n("code",null,"profile",-1),ll={href:"https://github.com/nushell/nushell.github.io/pull/777",target:"_blank",rel:"noopener noreferrer"},sl={href:"https://github.com/nushell/nushell.github.io/pull/776",target:"_blank",rel:"noopener noreferrer"},rl={href:"https://github.com/nushell/nushell.github.io/pull/773",target:"_blank",rel:"noopener noreferrer"},al={href:"https://github.com/nushell/nushell.github.io/pull/769",target:"_blank",rel:"noopener noreferrer"},il={href:"https://github.com/nushell/nushell.github.io/pull/763",target:"_blank",rel:"noopener noreferrer"},hl={href:"https://github.com/nushell/nushell.github.io/pull/766",target:"_blank",rel:"noopener noreferrer"},ul=n("code",null,"lines",-1),cl={href:"https://github.com/nushell/nushell.github.io/pull/765",target:"_blank",rel:"noopener noreferrer"},dl=n("code",null,"lines",-1),pl={href:"https://github.com/nushell/nushell.github.io/pull/764",target:"_blank",rel:"noopener noreferrer"},_l=n("code",null,"lines",-1),ml=n("h2",{id:"nu-scripts",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nu-scripts","aria-hidden":"true"},"#"),e(" Nu_Scripts")],-1),gl={href:"https://github.com/nushell/nu_scripts/pull/384",target:"_blank",rel:"noopener noreferrer"},fl=n("code",null,"nu_plugin_formats",-1),bl={href:"https://github.com/nushell/nu_scripts/pull/382",target:"_blank",rel:"noopener noreferrer"},kl=n("code",null,"nushell",-1),vl={href:"https://github.com/nushell/nu_scripts/pull/381",target:"_blank",rel:"noopener noreferrer"},wl=n("code",null,"use",-1),xl={href:"https://github.com/nushell/nu_scripts/pull/380",target:"_blank",rel:"noopener noreferrer"},yl={href:"https://github.com/nushell/nu_scripts/pull/373",target:"_blank",rel:"noopener noreferrer"},Tl={href:"https://github.com/nushell/nu_scripts/pull/379",target:"_blank",rel:"noopener noreferrer"},Nl={href:"https://github.com/nushell/nu_scripts/pull/375",target:"_blank",rel:"noopener noreferrer"},Fl={href:"https://github.com/nushell/nu_scripts/pull/371",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://github.com/nushell/nu_scripts/pull/378",target:"_blank",rel:"noopener noreferrer"},Sl={href:"https://github.com/nushell/nu_scripts/pull/377",target:"_blank",rel:"noopener noreferrer"},Il={href:"https://github.com/nushell/nu_scripts/pull/376",target:"_blank",rel:"noopener noreferrer"},Al={href:"https://github.com/nushell/nu_scripts/pull/372",target:"_blank",rel:"noopener noreferrer"},Bl={href:"https://github.com/nushell/nu_scripts/pull/370",target:"_blank",rel:"noopener noreferrer"},Pl=n("h2",{id:"reedline",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reedline","aria-hidden":"true"},"#"),e(" reedline")],-1),El={href:"https://github.com/nushell/reedline/pull/542",target:"_blank",rel:"noopener noreferrer"},Ul=n("code",null,"0.16.0",-1),Wl={href:"https://github.com/nushell/reedline/pull/541",target:"_blank",rel:"noopener noreferrer"},Cl=n("code",null,"rstest",-1),Ml={href:"https://github.com/nushell/reedline/pull/538",target:"_blank",rel:"noopener noreferrer"},Rl={href:"https://github.com/nushell/reedline/pull/536",target:"_blank",rel:"noopener noreferrer"},zl={href:"https://github.com/nushell/reedline/pull/537",target:"_blank",rel:"noopener noreferrer"},Hl={href:"https://github.com/nushell/reedline/pull/534",target:"_blank",rel:"noopener noreferrer"};function Vl(jl,Dl){const t=r("ExternalLinkIcon");return a(),i("div",null,[g,f,b,h(" more "),k,n("p",null,[e("Nu 0.76 is available as "),n("a",v,[e("pre-built binaries"),o(t)]),e(" or from "),n("a",w,[e("crates.io"),o(t)]),e(". If you have Rust installed you can install it using "),x,e(".")]),y,n("ul",null,[T,N,n("li",null,[n("p",null,[n("a",F,[q,o(t)]),e(" - Provides detailed information about pipeline contents in a closure")])])]),S,I,n("ul",null,[n("li",null,[n("a",A,[B,o(t)]),e(" - Immediately prints out the contents of a pipeline")])]),P,E,n("ul",null,[U,n("li",null,[n("p",null,[n("a",W,[C,o(t)]),e(" - Recursively profile pipelines and pipeline elements within a closure.")])])]),M,R,z,n("ul",null,[n("li",null,[n("a",H,[V,o(t)]),e(" (formerly known as benchmark, same functionality)")])]),j,n("ul",null,[n("li",null,[n("a",D,[L,o(t)]),e(" - Lists source code inputs loaded into Nushell since the beginning of the session")])]),$,O,n("ul",null,[n("li",null,[n("a",J,[Q,o(t)]),e(" (formerly known as "),X,e(", same functionality)")])]),G,n("ul",null,[n("li",null,[n("a",Y,[K,o(t)]),e(" - View contents of a span")])]),Z,n("h2",ee,[ne,e(' "Multiplication" of strings and lists is now supported. ('),n("a",te,[e("WindSoilder"),o(t)]),e(")")]),oe,n("h2",le,[se,e(" Dataframe commands are again explicitly separated from core nushell commands. ("),n("a",re,[e("#7998"),o(t)]),e(")")]),ae,ie,n("h2",he,[ue,e(),ce,e(" vs "),de,e(" ("),n("a",pe,[e("#8003"),o(t)]),e(")")]),_e,n("h2",me,[ge,e(" More commands become plugins and plugins get first-class help support (WindSoilder, "),n("a",fe,[e("#7984"),o(t)]),e(", "),n("a",be,[e("#7942"),o(t)]),e(")")]),ke,n("p",null,[e("Nushell now gives more specific and helpful messages when it detects syntax errors. In this release we've improved errors for "),ve,e(" and "),we,e(" literals but we hope to improve more in the future. "),n("a",xe,[e("#7952"),o(t)])]),ye,n("p",null,[e("In the background a number of contributors spent some time improving and refactoring the "),n("a",Te,[e("codebase"),o(t)]),e(" to get us up-to-date and make it more approachable for newcomers. This includes work to break up less readable code in important places, and a significant effort to get us up-to-speed on some coding standards. We also updated a number of dependencies and want to continue to improve our dependency tree. We recently enlisted the relentless help of the dependabot. Furthermore, we enabled rudimentary tracking of test coverage through "),Ne,e(". This should help us identify areas were additional tests are needed and can be a great contribution to the project.")]),Fe,n("ul",null,[n("li",null,[qe,e(" can not accidentally set "),Se,e(" anymore ("),n("a",Ie,[e("#7963"),o(t)]),e(")")]),n("li",null,[e("The "),Ae,e(" flag to enumerate entries has been removed from "),Be,e(", "),Pe,e(", "),Ee,e(", and "),Ue,e(". Use the "),We,e(" command added in 0.75 instead. ("),n("a",Ce,[e("#7777"),o(t)]),e(")")]),n("li",null,[e("Plugin system: "),Me,e(" has changed from "),Re,e(" to "),ze,e(" to support examples on plugin commands. Plugin authors have to update the relative structure to apply these changes. Normally you just need to perform a global search/replace from "),He,e(" to "),Ve,e(", then rebuild and run with the latest nushell version. ("),n("a",je,[e("#7984"),o(t)]),e(")")]),n("li",null,[De,e(" renamed to "),Le,e(" ("),n("a",$e,[e("#8018"),o(t)]),e(")")]),n("li",null,[Oe,e(" commands renamed with a prefix of "),Je,e(" ("),n("a",Qe,[e("#7998"),o(t)]),e(")")]),n("li",null,[Xe,e(" renamed to "),Ge,e(" ("),n("a",Ye,[e("#7989"),o(t)]),e(")")]),n("li",null,[e("Plugin commands can now include examples, which necessitated a change to the plugin signature, which causes all plugins to need to be recompiled for use. ("),n("a",Ke,[e("#7984"),o(t)]),e(")")]),n("li",null,[Ze,e(" and "),en,e(" have been superceeded by "),nn,e(" in order to provide alignment ("),n("a",tn,[e("7846"),o(t)]),e(")")]),n("li",null,[on,e(", "),ln,e(", "),sn,e(", "),rn,e(" commands are moved to plugin called "),an,e(" to reduce the number of commands in nushell core, you need to install and register the plugin manually to use these command. ("),n("a",hn,[e("#7942"),o(t)]),e(")")]),n("li",null,[un,e(),cn,e(","),dn,e(" parameter is now "),pn,e(","),_n,e(" ("),n("a",mn,[e("8088"),o(t)]),e(")")]),n("li",null,[e("Filesystem commands now print to stderr when using "),gn,e(" flag ("),n("a",fn,[e("8014"),o(t)]),e(")")]),n("li",null,[e("The "),bn,e(" command will now create 0 indexed columns instead of 1 indexed ("),n("a",kn,[e("7897"),o(t)]),e(")")])]),vn,wn,n("ul",null,[n("li",null,[e("amtoine created "),n("a",xn,[e("TEST: add the output to the new "),yn,e(" example"),o(t)]),e(", and "),n("a",Tn,[e('DOCUMENTATION: add a new "key-value" example to '),Nn,o(t)]),e(", and "),n("a",Fn,[e("remove the "),qn,e(" option from "),Sn,e(" in the examples"),o(t)])]),n("li",null,[e("sholderbach created "),n("a",In,[e("Pin "),An,e(" to "),Bn,o(t)]),e(", and "),n("a",Pn,[e("Add a script to generate coverage locally"),o(t)]),e(", and "),n("a",En,[e("Bump version for "),Un,e(" release"),o(t)]),e(", and "),n("a",Wn,[e("Make patch coverage check informational only"),o(t)]),e(", and "),n("a",Cn,[e("Add a "),Mn,e(" configuration"),o(t)]),e(", and "),n("a",Rn,[e("Disable auto-benchmark harness for crates"),o(t)]),e(", and "),n("a",zn,[e("Minor clippy: inline format string"),o(t)]),e(", and "),n("a",Hn,[e("Fix imported virtualenv testsuite"),o(t)]),e(", and "),n("a",Vn,[e("Test return in "),jn,e(" closure from #7961"),o(t)]),e(", and "),n("a",Dn,[e("Fix "),Ln,e(" docs according to docs#761"),o(t)]),e(", and "),n("a",$n,[e("Fix code in benchmarks"),o(t)]),e(", and "),n("a",On,[e("Another shot at trying to setup codecov"),o(t)])]),n("li",null,[e("fdncred created "),n("a",Jn,[e("update code coversage script to work better with windows"),o(t)]),e(", and "),n("a",Qn,[e("show more informaiton when there are toml errors"),o(t)]),e(", and "),n("a",Xn,[e("update link to command reference"),o(t)]),e(", and "),n("a",Gn,[e("update colors in dark theme"),o(t)]),e(", and "),n("a",Yn,[e("fix rename when it is passed an empty column list to rename"),o(t)]),e(", and "),n("a",Kn,[e("allow date grouping in group-by"),o(t)]),e(", and "),n("a",Zn,[e("move ast command to the debug group"),o(t)]),e(", and "),n("a",et,[e("relocate debug commands"),o(t)]),e(", and "),n("a",nt,[e("update cargo wix to 0.3.4"),o(t)]),e(", and "),n("a",tt,[e("add benchmark to deprecated commands"),o(t)]),e(", and "),n("a",ot,[e("add a new inspect command for more debugging"),o(t)]),e(", and "),n("a",lt,[e("Make metadata a "),st,e(" command"),o(t)]),e(", and "),n("a",rt,[e("rename benchmark to timeit"),o(t)]),e(", and "),n("a",at,[e("fix completions PATH vs Path"),o(t)]),e(", and "),n("a",it,[e("Add dfr to dataframe cmds"),o(t)]),e(", and "),n("a",ht,[e("view span & view files commands"),o(t)]),e(", and "),n("a",ut,[e("report which datetime couldn't be converted"),o(t)]),e(", and "),n("a",ct,[e("explain command"),o(t)]),e(", and "),n("a",dt,[e("clean up the registry query output"),o(t)]),e(", and "),n("a",pt,[e("add ability to view-source on closures"),o(t)]),e(", and "),n("a",_t,[e("A "),mt,e(" command to replace "),gt,e(" and "),ft,o(t)])]),n("li",null,[e("WindSoilder created "),n("a",bt,[e("add usage for plugin commands"),o(t)]),e(", and "),n("a",kt,[e("update nu_plugin_python due to signature changes"),o(t)]),e(", and "),n("a",vt,[e("support multiplication operation on string and list values"),o(t)]),e(", and "),n("a",wt,[e("Make plugin commands support examples."),o(t)]),e(", and "),n("a",xt,[e("Move some "),yt,e(" commands to plugin"),o(t)]),e(", and "),n("a",Tt,[e("make do -i works with liststream"),o(t)])]),n("li",null,[e("bobhy created "),n("a",Nt,[Ft,e(" counts clusters, not graphemes; and doesn't count ANSI escape codes"),o(t)]),e(", and "),n("a",qt,[e("Improve error when regex rejects pattern. Resolution of #8037"),o(t)]),e(", and "),n("a",St,[e("Syntax errors for string and int"),o(t)])]),n("li",null,[e("dependabot[bot] created "),n("a",It,[e("Bump actions-rust-lang/setup-rust-toolchain from 1.3.7 to 1.4.2"),o(t)]),e(", and "),n("a",At,[e("Bump sysinfo from 0.27.7 to 0.28.0"),o(t)]),e(", and "),n("a",Bt,[e("Bump winreg from 0.10.1 to 0.11.0"),o(t)]),e(", and "),n("a",Pt,[e("Bump roxmltree from 0.17.0 to 0.18.0"),o(t)]),e(", and "),n("a",Et,[e("Bump rstest from 0.15.0 to 0.16.0"),o(t)]),e(", and "),n("a",Ut,[e("Bump proptest from 1.0.0 to 1.1.0"),o(t)]),e(", and "),n("a",Wt,[e("Bump openssl-src from 111.22.0+1.1.1q to 111.25.0+1.1.1t"),o(t)]),e(", and "),n("a",Ct,[e("Bump actions-rust-lang/setup-rust-toolchain from 1.3.5 to 1.3.7"),o(t)]),e(", and "),n("a",Mt,[e("Bump fs_extra from 1.2.0 to 1.3.0"),o(t)]),e(", and "),n("a",Rt,[e("Bump ical from 0.7.0 to 0.8.0"),o(t)]),e(", and "),n("a",zt,[e("Bump which from 4.3.0 to 4.4.0"),o(t)]),e(", and "),n("a",Ht,[e("Bump tokio from 1.24.1 to 1.25.0"),o(t)])]),n("li",null,[e("zhiburt created "),n("a",Vt,[e("Add colors in "),jt,o(t)]),e(", and "),n("a",Dt,[e("nu-table/ Fix table --expand issue when table with no header involved "),o(t)]),e(", and "),n("a",Lt,[e("nu-table/ table --collapse style fix"),o(t)]),e(", and "),n("a",$t,[e("Address #7997"),o(t)])]),n("li",null,[e("kubouch created "),n("a",Ot,[e("Revert #7779 (enables back subcommand completions)"),o(t)]),e(", and "),n("a",Jt,[e("Fix hidden env vars not being hidden in closures"),o(t)]),e(", and "),n("a",Qt,[e("Reorder "),Xt,e(" priority"),o(t)]),e(", and "),n("a",Gt,[e("Benchmark each pipeline element"),o(t)])]),n("li",null,[e("jaudiger created "),n("a",Yt,[e("Factorize HTTP commands code"),o(t)]),e(", and "),n("a",Kt,[e("http: add "),Zt,e(" flag to "),eo,e(", share common code"),o(t)]),e(", and "),n("a",no,[e("Update few examples of math commands"),o(t)]),e(", and "),n("a",to,[e("Use imported names in "),oo,e(" signatures"),o(t)])]),n("li",null,[e("stormasm created "),n("a",lo,[e("remove spurious use from default_context.rs"),o(t)])]),n("li",null,[e("jntrnr created "),n("a",so,[e("Bare word improvements"),o(t)])]),n("li",null,[e("ryand67 created "),n("a",ro,[e("#8027 Hide implementation details in invalid cd call"),o(t)])]),n("li",null,[e("rgwood created "),n("a",ao,[e("Check ctrl+c when collecting a RawStream"),o(t)]),e(", and "),n("a",io,[e("Make ++ operator work with strings and binary values"),o(t)]),e(", and "),n("a",ho,[e("Windows: handle illegal filenames a little better"),o(t)]),e(", and "),n("a",uo,[e("Fix $nu path separators on Windows"),o(t)]),e(", and "),n("a",co,[e("Add comment explaining background thread usage for plugin calls"),o(t)])]),n("li",null,[e("NotLebedev created "),n("a",po,[e("Filesystem commands print --verbose to stderr"),o(t)])]),n("li",null,[e("initinll created "),n("a",_o,[e("Added fix for #7981 - Replaced crate serde_ini with rust-ini for package nu-command/from"),o(t)]),e(", and "),n("a",mo,[e("Added fix for #7970 - Upgraded toml crate version from version from 0.5.8 to 0.7.1 for package nu-command"),o(t)])]),n("li",null,[e("bgeron created "),n("a",go,[e("Clarify two config fields"),o(t)])]),n("li",null,[e("Hofer-Julian created "),n("a",fo,[e("Extract run blocks into functions"),o(t)]),e(", and "),n("a",bo,[e("Fix copy paste error"),o(t)])]),n("li",null,[e("Mehrbod2002 created "),n("a",ko,[e("Load env pwd"),o(t)]),e(", and "),n("a",vo,[e("Validate input range of "),wo,e(" flags"),o(t)]),e(", and "),n("a",xo,[e("Fix: dst error on cp command"),o(t)])]),n("li",null,[e("nabacg created "),n("a",yo,[e("return in reduce command closure"),o(t)])]),n("li",null,[e("webbedspace created "),n("a",To,[e('Only abbreviate to "[table x rows]" if every value is a record'),o(t)]),e(", and "),n("a",No,[e("Remove deprecated "),Fo,e(" flag from four commands"),o(t)])]),n("li",null,[e("csko created "),n("a",qo,[e("use newer reedline (once available)"),o(t)]),e(", and "),n("a",So,[e("respect use_ansi_coloring configuration"),o(t)])]),n("li",null,[e("merelymyself created "),n("a",Io,[e("allow "),Ao,e(" to work better with streams"),o(t)]),e(", and "),n("a",Bo,[e("ensure that when nu evaluates files, it allows early returns"),o(t)])]),n("li",null,[e("dmatos2012 created "),n("a",Po,[e("Support URLs in "),Eo,e(" command"),o(t)])])]),Uo,n("ul",null,[n("li",null,[e("glcraft created "),n("a",Wo,[e("Fix "),Co,e(" syntax "),o(t)])]),n("li",null,[e("kecrily created "),n("a",Mo,[e("feat: add icon for "),Ro,e(" extension in VS Code"),o(t)])])]),zo,n("ul",null,[n("li",null,[e("WindSoilder created "),n("a",Ho,[e("Add breaking change"),o(t)]),e(", and "),n("a",Vo,[e("Add breaking change for plugin signature"),o(t)])]),n("li",null,[e("Hofer-Julian created "),n("a",jo,[e("Prepare for generation of categories"),o(t)]),e(", and "),n("a",Do,[e("Move "),Lo,e(" to "),$o,o(t)]),e(", and "),n("a",Oo,[e("Move command reference to navbar"),o(t)])]),n("li",null,[e("hustcer created "),n("a",Jo,[e("fix #768 for zh-CN translation"),o(t)]),e(", and "),n("a",Qo,[e("fix "),Xo,e(" and "),Go,e(" usage examples, close #758"),o(t)]),e(", and "),n("a",Yo,[e("fix #781 and update some node modules"),o(t)]),e(", and "),n("a",Ko,[e("Update some vuepress plugins"),o(t)]),e(", and "),n("a",Zo,[e("Update typos config and fix some typos"),o(t)]),e(", and "),n("a",el,[e("feat: refresh command docs for nu v0.75"),o(t)])]),n("li",null,[e("msmart created "),n("a",nl,[e("Fix typos in plugins.md"),o(t)])]),n("li",null,[e("kubouch created "),n("a",tl,[e("Add "),ol,e(" note and screenshot"),o(t)])]),n("li",null,[e("bobhy created "),n("a",ll,[e("release notes for #7952"),o(t)])]),n("li",null,[e("jafriyie1 created "),n("a",sl,[e("Fix: updating pages that used each -n command"),o(t)]),e(", and "),n("a",rl,[e("Fix changed history command to match default in config"),o(t)])]),n("li",null,[e("FilipAndersson245 created "),n("a",al,[e("replaces fetch with http in varius places"),o(t)]),e(", and "),n("a",il,[e("Updated cookbook with http get instead of fetch."),o(t)])]),n("li",null,[e("das-g created "),n("a",hl,[e("[pt-BR] fix statement about "),ul,e(' output type ("tabela"→"lista")'),o(t)]),e(", and "),n("a",cl,[e("[es] fix statement about "),dl,e(' output type ("tabla"→"lista")'),o(t)]),e(", and "),n("a",pl,[e("fix statement about "),_l,e(' output type ("table"→"list")'),o(t)])])]),ml,n("ul",null,[n("li",null,[e("sholderbach created "),n("a",gl,[e("Update release script to "),fl,o(t)])]),n("li",null,[e("amtoine created "),n("a",bl,[e("FEATURE: export all the math functions to use them in "),kl,o(t)]),e(", and "),n("a",vl,[e("FIX: the math functions can not be "),wl,e("d"),o(t)])]),n("li",null,[e("fdncred created "),n("a",xl,[e("just a base64 encoder written for fun"),o(t)]),e(", and "),n("a",yl,[e("update scripts from fetch to http get"),o(t)])]),n("li",null,[e("hyiltiz created "),n("a",Tl,[e("Fix space-in-path issue and extra / at root"),o(t)]),e(", and "),n("a",Nl,[e("Fix abbrev logic"),o(t)]),e(", and "),n("a",Fl,[e("Update to 0.75.1 syntax"),o(t)])]),n("li",null,[e("maxim-uvarov created "),n("a",ql,[e("add a current session history menu"),o(t)])]),n("li",null,[e("Tiggax created "),n("a",Sl,[e("Updated the temp.nu for 0.60.0+"),o(t)]),e(", and "),n("a",Il,[e("Update Check-if-env-exsists to use the envs_dirs from conda info"),o(t)])]),n("li",null,[e("WindSoilder created "),n("a",Al,[e("update themes' readme"),o(t)])]),n("li",null,[e("Neur1n created "),n("a",Bl,[e("added nu_msvs module"),o(t)])])]),Pl,n("ul",null,[n("li",null,[e("sholderbach created "),n("a",El,[e("Bump version for "),Ul,e(" release."),o(t)]),e(", and "),n("a",Wl,[e("Bump "),Cl,e(" to 0.16"),o(t)])]),n("li",null,[e("rgwood created "),n("a",Ml,[e("VACUUM after deleting SQLite data"),o(t)]),e(", and "),n("a",Rl,[e("Add History::clear() function"),o(t)])]),n("li",null,[e("fdncred created "),n("a",zl,[e("add history-clear to demo"),o(t)])]),n("li",null,[e("csko created "),n("a",Hl,[e("Fix columnar menu completion corrupting the editor insertion point"),o(t)])])])])}const $l=s(m,[["render",Vl],["__file","2023-02-21-nushell_0_76.html.vue"]]);export{$l as default};
