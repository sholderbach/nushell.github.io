import{_ as t,z as o,A as r,X as a,C as e,D as n,a6 as p}from"./framework.3d018c9f.js";const i={},c={id:"frontmatter-title-for-bits",tabindex:"-1"},l=a("a",{class:"header-anchor",href:"#frontmatter-title-for-bits","aria-hidden":"true"},"#",-1),d={class:"command-title"},u=p(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; bits not --signed --number-bytes</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>--signed</code>: always treat input number as a signed number</li><li><code>--number-bytes {string}</code>: the size of unsigned number in bytes, it can be 1, 2, 4, 8, auto</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Apply logical negation to a list of numbers</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">3</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">|</span> bits not
</code></pre></div><p>Apply logical negation to a list of numbers, treat input as 2 bytes number</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">3</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">|</span> bits not <span class="token parameter variable">-n</span> <span class="token number">2</span>
</code></pre></div><p>Apply logical negation to a list of numbers, treat input as signed number</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">3</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">|</span> bits not <span class="token parameter variable">-s</span>
</code></pre></div>`,11);function b(s,h){return o(),r("div",null,[a("h1",c,[l,e(),a("code",null,n(s.$frontmatter.title),1),e(" for bits")]),a("div",d,n(s.$frontmatter.bits),1),u])}const g=t(i,[["render",b],["__file","bits_not.html.vue"]]);export{g as default};
