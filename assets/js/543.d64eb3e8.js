(window.webpackJsonp=window.webpackJsonp||[]).push([[543],{1059:function(e,n,i){"use strict";i.r(n);var t=i(35),a=Object(t.a)({},(function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"konfiguration"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#konfiguration"}},[e._v("#")]),e._v(" Konfiguration")]),e._v(" "),i("h2",{attrs:{id:"nushell-konfiguration-mittels-config-nu"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#nushell-konfiguration-mittels-config-nu"}},[e._v("#")]),e._v(" Nushell Konfiguration mittels "),i("code",[e._v("config.nu")])]),e._v(" "),i("p",[e._v("Nushell nutzt ein Konfigurationssystem, das ein Nushell-Skript beim Start ausführt. Die Konfigurationsdatei wird für Nushell "),i("code",[e._v("config.nu")]),e._v(" genannt. Der Pfad zu dieser Konfigurationsdatei kann durch den Aufruf von "),i("code",[e._v("echo $nu.config-path")]),e._v(" herausgefunden werden. Es handelt sich dabei um eine Datei, die abgearbeitet wird und in jedem Schritt Definitionen, Umgebungsvariablen und mehr zum globalen Namespace hinzufügt.")]),e._v(" "),i("p",[e._v("Ein Beispiel für eine Nushell "),i("code",[e._v("config.nu")]),e._v(" kann "),i("a",{attrs:{href:"https://github.com/nushell/nushell/blob/main/src/default_config.nu",target:"_blank",rel:"noopener noreferrer"}},[e._v("hier"),i("OutboundLink")],1),e._v(" in unserem Repository gefunden werden.")]),e._v(" "),i("h3",{attrs:{id:"config-konfigurieren"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#config-konfigurieren"}},[e._v("#")]),e._v(" "),i("code",[e._v("$config")]),e._v(" konfigurieren")]),e._v(" "),i("p",[e._v("Die zentralen Konfigurationen von Nushell sind in der globalen "),i("code",[e._v("$config")]),e._v(" Variable festgehalten. Dieser Eintrag kann wie folgt erstellt werden:")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("let $config = {\n  ...\n}\n")])])]),i("p",[e._v("Es ist auch möglich "),i("code",[e._v("$config")]),e._v(" zu überschreiben und zu ändern:")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("let $config = ($config | update <field name> <field value>)\n")])])]),i("h3",{attrs:{id:"umgebung"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#umgebung"}},[e._v("#")]),e._v(" Umgebung")]),e._v(" "),i("p",[e._v("Die Shell-Umgebung kann durch Aufrufe von "),i("code",[e._v("let-env")]),e._v(" in der "),i("code",[e._v("config.nu")]),e._v("-Datei geändert werden. Es gibt einige wichtige Nushell-spezifischen Einstellungen:")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("LS_COLORS")]),e._v(": Setzt die Farben für Dateitypen in ls")]),e._v(" "),i("li",[i("code",[e._v("PROMPT_COMMAND")]),e._v(": Befehle, die ausgeführt werden, um die Prompt zu erzeugen (Block oder String)")]),e._v(" "),i("li",[i("code",[e._v("PROMPT_COMMAND_RIGHT")]),e._v(": Befehle, die ausgeführt werden, um die Prompt zu erzeugen (Block)")]),e._v(" "),i("li",[i("code",[e._v('PROMPT_INDICATOR = "〉"')]),e._v(': Indikator, der der Prompt folgt (default: ">"-like Unicode symbol)')]),e._v(" "),i("li",[i("code",[e._v('PROMPT_INDICATOR_VI_INSERT = ": "')])]),e._v(" "),i("li",[i("code",[e._v('PROMPT_INDICATOR_VI_NORMAL = "〉 "')])]),e._v(" "),i("li",[i("code",[e._v('PROMPT_MULTILINE_INDICATOR = "::: "')])])]),e._v(" "),i("h3",{attrs:{id:"farbkonfiguration"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#farbkonfiguration"}},[e._v("#")]),e._v(" Farbkonfiguration")]),e._v(" "),i("p",[e._v("Mehr Informationen zu Farbeinstellungen und Themes kann im "),i("RouterLink",{attrs:{to:"/book/coloring_and_theming.html"}},[e._v("entsprechenden Kapitel")]),e._v(" gefunden werden.")],1),e._v(" "),i("h2",{attrs:{id:"nushell-als-login-shell"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#nushell-als-login-shell"}},[e._v("#")]),e._v(" Nushell als Login-Shell")]),e._v(" "),i("p",[e._v("Um Nushell als Login-Shell zu verwenden, muss die "),i("code",[e._v("$env")]),e._v(" Variable konfiguriert werden, damit es möglich ist, externe Befehle als Login-Shell auszuführen.")]),e._v(" "),i("p",[e._v("Der komplette Satz an Umgebungsvariablen kann erzeugt werden, wenn Nu in einer anderen Shell, wie beispielsweise Bash, ausgeführt wird. In diese Nu-Sitzung kann ein Befehl wie der folgende verwendet werden, um "),i("code",[e._v("$env")]),e._v(" zu setzen:")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("> env | each { echo $\"let-env ($it.name) = '($it.raw)'\" } | str collect (char nl)\n")])])]),i("p",[e._v("Das wird "),i("code",[e._v("let-env")]),e._v(" Zeilen ausgeben - eine für jede Umgebungsvariable - inklusive der nötigen Werte.")]),e._v(" "),i("p",[e._v("Als nächstes, muss auf manchen Distributionen sichergestellt werden, dass Nu in der Liste der Shells in /etc/shells ist:")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("> cat /etc/shells\n# /etc/shells: valid login shells\n/bin/sh\n/bin/dash\n/bin/bash\n/bin/rbash\n/usr/bin/screen\n/usr/bin/fish\n/home/jonathan/.cargo/bin/nu\n")])])]),i("p",[e._v("Damit sollte es möglich sein, Nu als Login-Shell mit "),i("code",[e._v("chsh")]),e._v(" festzulegen. Nach dem Ausloggen und erneutem Einloggen sollte Nu als Shell grüßen.")]),e._v(" "),i("h3",{attrs:{id:"macos-usr-bin-open-als-open-behalten"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#macos-usr-bin-open-als-open-behalten"}},[e._v("#")]),e._v(" macOS: "),i("code",[e._v("/usr/bin/open")]),e._v(" als "),i("code",[e._v("open")]),e._v(" behalten")]),e._v(" "),i("p",[e._v("Manche Tools (z.B. Emacs) vertrauen darauf, dass "),i("code",[e._v("open")]),e._v(" Dateien auf dem Mac öffnet.\nDa Nushell einen eigenen "),i("code",[e._v("open")]),e._v(" Befehl hat, der eine andere Semantik hat und "),i("code",[e._v("/usr/bin/open")]),e._v(" verbirgt, werden diese Tools einen Fehler werfen, wenn sie verwendet werden.\nEine Möglichkeit, dieses Problem zu umgehen, ist es, einen eigenen Befehl und einen "),i("code",[e._v("alias")]),e._v(" in "),i("code",[e._v("config.nu")]),e._v(" zu definieren:")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("def nuopen [arg, --raw (-r)] { if $raw { open -r $arg } else { open $arg } }\nalias open = ^open\n")])])]),i("h2",{attrs:{id:"konfiguration-der-prompt"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#konfiguration-der-prompt"}},[e._v("#")]),e._v(" Konfiguration der Prompt")]),e._v(" "),i("p",[e._v("Die Konfiguration der Prompt wird durch das Setzen der Umgebungsvariable "),i("code",[e._v("PROMPT_COMMAND")]),e._v(" bzw. "),i("code",[e._v("PROMPT_COMMAND_RIGHT")]),e._v(" durchgeführt.\nDiese akzeptieren entweder einen String oder einen Codeblock der ausgeführt wird.")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v('let-env PROMPT_COMMAND = "Hallo Nu"  # Die Hauptprompt auf einen festen String setzen\nlet-env PROMPT_COMMAND_RIGHT = {pwd} # Den rechte Promptteil mit dem aktuellen Verzeichnis anzeigen\n')])])]),i("p",[e._v("Darüber hinaus wird als Markierung ein Promptindikator gesetzt, welcher den aktuellen Modus oder einen Zeilenumbruch anzeigt:")]),e._v(" "),i("ul",[i("li",[i("code",[e._v('PROMPT_INDICATOR = "〉"')]),e._v(': Indikator, der der Prompt folgt (default: ">"-like Unicode symbol)')]),e._v(" "),i("li",[i("code",[e._v('PROMPT_INDICATOR_VI_INSERT = ": "')])]),e._v(" "),i("li",[i("code",[e._v('PROMPT_INDICATOR_VI_NORMAL = "〉 "')])]),e._v(" "),i("li",[i("code",[e._v('PROMPT_MULTILINE_INDICATOR = "::: "')])])]),e._v(" "),i("p",[e._v("Mehr Dokumentation zu fertigen Prompts von Drittanbietern kann "),i("RouterLink",{attrs:{to:"/de/book/3rdpartyprompts.html"}},[e._v("hier")]),e._v(" gefunden werden.")],1)])}),[],!1,null,null,null);n.default=a.exports}}]);