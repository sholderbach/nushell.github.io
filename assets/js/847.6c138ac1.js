(window.webpackJsonp=window.webpackJsonp||[]).push([[847],{1332:function(a,t,s){"use strict";s.r(t);var e=s(35),_=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"管道"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#管道"}},[a._v("#")]),a._v(" 管道")]),a._v(" "),s("p",[a._v("Nu 的核心设计之一是管道，这个设计思想可以追溯到几十年前 Unix 背后的一些原始理念。正如 Nu 拓展了 Unix 的单一字符串数据类型一样，Nu 也扩展了管道的概念，使其不仅仅包含文本。")]),a._v(" "),s("h2",{attrs:{id:"基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[a._v("#")]),a._v(" 基础")]),a._v(" "),s("p",[a._v("一个管道由三部分组成：输入、过滤器和输出。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Cargo.toml"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" inc package.version --minor "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" save "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Cargo_new.toml"')]),a._v("\n")])])]),s("p",[a._v("第一条命令："),s("code",[a._v('open "Cargo.toml"')]),a._v(' 是一个输入（有时也称为 "源"或 "生产者"），它创建或加载数据，并将其送入管道。管道待处理的值正是来自于此输入。像'),s("RouterLink",{attrs:{to:"/book/commands/ls.html"}},[s("code",[a._v("ls")])]),a._v("这样的命令也是输入，因为它们从文件系统中获取数据，并通过管道发送以便能被后续使用。")],1),a._v(" "),s("p",[a._v("第二个命令："),s("code",[a._v("inc package.version --minor")]),a._v(" 是一个过滤器。过滤器获取所给的数据并对其进行处理。它们可能会修改它（如我们例子中的"),s("RouterLink",{attrs:{to:"/book/commands/inc.html"}},[s("code",[a._v("inc")])]),a._v("命令），或者在数值通过时对其做其他操作，如记录。")],1),a._v(" "),s("p",[a._v("最后一条命令："),s("code",[a._v('save "Cargo_new.toml"')]),a._v(' 是一个输出（有时称为 "接收者"）。输出从管道中获取输入，并对其进行一些最终操作。在我们的例子中，我们在最后一步把通过管道的内容保存到一个文件中。还有一些其他类型的输出命令可以获取数值并供用户查看。')]),a._v(" "),s("h2",{attrs:{id:"多行管道"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多行管道"}},[a._v("#")]),a._v(" 多行管道")]),a._v(" "),s("p",[a._v("如果一个管道对一行来说有些长，你可以把它放在"),s("code",[a._v("(")]),a._v("和"),s("code",[a._v(")")]),a._v("里，以创建一个子表达式：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"01/22/2021"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n    parse "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{month}/{day}/{year}"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n    get year\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("也可以参考 "),s("RouterLink",{attrs:{to:"/zh-CN/book/variables_and_subexpressions.html#子表达式"}},[a._v("子表达式")])],1),a._v(" "),s("h2",{attrs:{id:"与外部命令交互"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与外部命令交互"}},[a._v("#")]),a._v(" 与外部命令交互")]),a._v(" "),s("p",[a._v("Nu 命令之间使用 Nu 的数据类型进行通信（见"),s("RouterLink",{attrs:{to:"/zh-CN/book/types_of_data.html"}},[a._v("数据类型")]),a._v("），但 Nu 之外的命令呢？让我们看看一些与外部命令交互的例子：")],1),a._v(" "),s("p",[s("code",[a._v("internal_command | external_command")])]),a._v(" "),s("p",[a._v("数据将从 "),s("code",[a._v("internal_command")]),a._v(" 流向 "),s("code",[a._v("external_command")]),a._v("。这些数据将被转换为字符串，以便它们可以被发送到外部命令的"),s("code",[a._v("stdin")]),a._v("。")]),a._v(" "),s("p",[s("code",[a._v("external_command | internal_command")])]),a._v(" "),s("p",[a._v("从外部命令进入 Nu 的数据将以字节的形式流入，Nushell 将尝试自动将其转换为 UTF-8 文本。如果成功，一个文本数据流将被发送到"),s("code",[a._v("internal_command")]),a._v("；如果不成功，一个二进制数据流将被发送到"),s("code",[a._v("internal_command")]),a._v("。像"),s("RouterLink",{attrs:{to:"/book/commands/lines.html"}},[s("code",[a._v("lines")])]),a._v("这样的命令有助于从外部命令接收数据，因为它提供了分离的数据行以供后续使用。")],1),a._v(" "),s("p",[s("code",[a._v("external_command_1 | external_command_2")])]),a._v(" "),s("p",[a._v("Nu 在两个外部命令之间以与其他 shell 相同的方式处理数据管道，比如 Bash。"),s("code",[a._v("external_command_1")]),a._v("的"),s("code",[a._v("stdout")]),a._v("与"),s("code",[a._v("external_command_2")]),a._v("的"),s("code",[a._v("stdin")]),a._v("相连，这让数据在两个命令之间自然流动。")]),a._v(" "),s("h2",{attrs:{id:"幕后解说"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#幕后解说"}},[a._v("#")]),a._v(" 幕后解说")]),a._v(" "),s("p",[a._v("你可能想知道，既然"),s("RouterLink",{attrs:{to:"/book/commands/ls.html"}},[s("code",[a._v("ls")])]),a._v("是一个输入而不是一个输出，我们为何能看到一个表格？其实 Nu 使用了另一个叫做"),s("RouterLink",{attrs:{to:"/book/commands/table.html"}},[s("code",[a._v("table")])]),a._v("的命令为我们自动添加了这个输出。"),s("RouterLink",{attrs:{to:"/book/commands/table.html"}},[s("code",[a._v("table")])]),a._v("命令被附加到任何没有输出的管道上，这使得我们可以看到结果。")],1),a._v(" "),s("p",[a._v("实际上，该命令：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("> ls\n")])])]),s("p",[a._v("和以下管道：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("> ls | table\n")])])]),s("p",[a._v("是一样的。")])])}),[],!1,null,null,null);t.default=_.exports}}]);