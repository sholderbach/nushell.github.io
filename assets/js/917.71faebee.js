(window.webpackJsonp=window.webpackJsonp||[]).push([[917],{1433:function(s,t,a){"use strict";a.r(t);var e=a(35),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[s._v("#")]),s._v(" 模块")]),s._v(" "),a("p",[s._v("与其他许多编程语言类似，Nushell 也有模块，可以让你将自定义的命令导入到当前作用域中。\n然而，由于 Nushell 也是一个 Shell，模块还允许你导入环境变量，可以用来方便地激活/停用各种环境配置。")]),s._v(" "),a("p",[a("em",[s._v("注意! 目前对模块的实现是相当基本的，并将在未来进一步扩展。例如，目前还不能从一个模块中导入另一个模块。")])]),s._v(" "),a("h2",{attrs:{id:"基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[s._v("#")]),s._v(" 基础知识")]),s._v(" "),a("p",[s._v("一个简单的模块可以像这样定义：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" module greetings "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" def hello "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("name: string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello ('),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v(')!"')]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" def hi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("where: string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hi ('),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$where")]),s._v(')!"')]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("或者在一个与你要创建的模块名相同的文件中：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# greetings.nu")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" def hello "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("name: string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello ('),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v(')!"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" def hi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("where: string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hi ('),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$where")]),s._v(')!"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("我们在 "),a("code",[s._v("greetings")]),s._v(" 模块中定义了 "),a("code",[s._v("hello")]),s._v(" 和 "),a("code",[s._v("hi")]),s._v(" 两个自定义命令。"),a("code",[s._v("export")]),s._v("关键字使得以后可以从模块中导入该命令。")]),s._v(" "),a("p",[s._v("与"),a("RouterLink",{attrs:{to:"/book/commands/def.html"}},[a("code",[s._v("def")])]),s._v("类似，也可以用"),a("code",[s._v("export")]),s._v("关键字标记"),a("RouterLink",{attrs:{to:"/book/commands/def-env.html"}},[a("code",[s._v("def-env")])]),s._v("（你可以在"),a("RouterLink",{attrs:{to:"/zh-CN/book/environment.html"}},[s._v("环境")]),s._v("章节中了解更多关于"),a("RouterLink",{attrs:{to:"/book/commands/def-env.html"}},[a("code",[s._v("def-env")])]),s._v("的信息）。")],1),s._v(" "),a("h2",{attrs:{id:"使用模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用模块"}},[s._v("#")]),s._v(" 使用模块")]),s._v(" "),a("p",[s._v("模块本身并不做任何事情，要使用模块导出的定义，我们需要"),a("RouterLink",{attrs:{to:"/book/commands/use.html"}},[a("code",[s._v("use")])]),s._v("它：")],1),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use greetings\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" greetings hello "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v("\nhello world"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" greetings hi "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"there"')]),s._v("\nhi there"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])])]),a("p",[a("code",[s._v("hello")]),s._v("和"),a("code",[s._v("hi")]),s._v("命令现在可以通过"),a("code",[s._v("greetings")]),s._v("前缀被调用。")]),s._v(" "),a("h2",{attrs:{id:"导入符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入符号"}},[s._v("#")]),s._v(" 导入符号")]),s._v(" "),a("p",[s._v("一般来说，"),a("RouterLink",{attrs:{to:"/book/commands/use.html"}},[a("code",[s._v("use")])]),s._v("关键词后面的任何内容都会形成一个"),a("strong",[s._v("导入模式")]),s._v("，它控制着符号的导入方式。\n导入模式可以是以下的一种：")],1),s._v(" "),a("p",[a("code",[s._v("use greetings")])]),s._v(" "),a("p",[s._v("导入所有以模块名称为前缀的符号（我们在前面的例子中看到了这个）。")]),s._v(" "),a("p",[a("code",[s._v("use greetings hello")])]),s._v(" "),a("p",[a("code",[s._v("hello")]),s._v("符号将被直接导入，没有任何前缀。")]),s._v(" "),a("p",[a("code",[s._v("use greetings [ hello, hi ]")])]),s._v(" "),a("p",[s._v("直接导入多个符号，没有任何前缀。")]),s._v(" "),a("p",[a("code",[s._v("use greetings *")])]),s._v(" "),a("p",[s._v("你也可以使用模块名称和"),a("code",[s._v("*")]),s._v(" glob 来直接导入所有的名称，且不需要任何前缀。")]),s._v(" "),a("h2",{attrs:{id:"模块文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块文件"}},[s._v("#")]),s._v(" 模块文件")]),s._v(" "),a("p",[s._v("Nushell 让你隐含地把一个源文件当作一个模块。\n让我们先把模块定义的主体保存到一个文件中：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# greetings.nu")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" def hello "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("name: string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello ('),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v(')!"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" def hi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("where: string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hi ('),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$where")]),s._v(')!"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("现在，你可以直接在文件上调用"),a("RouterLink",{attrs:{to:"/book/commands/use.html"}},[a("code",[s._v("use")])]),s._v("：")],1),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use greetings.nu\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" greetings hello "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v("\nhello world"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" greetings hi "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"there"')]),s._v("\nhi there"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])])]),a("p",[s._v('Nushell 会自动从文件名（"greetings"，没有".nu"扩展名）推断出模块的名称。所以你可以通过文件名而不是模块名配合使用上述任何导入模式来完成导入。')]),s._v(" "),a("h2",{attrs:{id:"本地自定义命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地自定义命令"}},[s._v("#")]),s._v(" 本地自定义命令")]),s._v(" "),a("p",[s._v("任何在模块中定义的自定义命令，如果没有"),a("code",[s._v("export")]),s._v("关键字，将只在该模块的作用域内工作：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# greetings.nu")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" def hello "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("name: string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    greetings-helper "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" def hi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("where: string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    greetings-helper "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hi"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"there"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\ndef greetings-helper "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("greeting: string, subject: string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"('),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$greeting")]),s._v(") ("),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$subject")]),s._v(')!"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v('然后，在 Nushell 里我们可以从 "greetings.nu" 中导入所有定义：')]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use greetings.nu *\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hello "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v("\nhello world"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hi "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"there"')]),s._v("\nhi there"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" greetings-helper "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fails because 'greetings-helper' is not exported")]),s._v("\n")])])]),a("h2",{attrs:{id:"环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[s._v("#")]),s._v(" 环境变量")]),s._v(" "),a("p",[s._v("到目前为止，我们只是用模块来导入自定义命令，用同样的方法导出环境变量也是可能的。\n其语法与你可能习惯的"),a("RouterLink",{attrs:{to:"/book/commands/let-env.html"}},[a("code",[s._v("let-env")])]),s._v("或"),a("RouterLink",{attrs:{to:"/book/commands/load-env.html"}},[a("code",[s._v("load-env")])]),s._v("等命令略有不同：")],1),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# greetings.nu")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v(" MYNAME "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Arthur, King of the Britons"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" def hello "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("name: string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello ('),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v(')"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("code",[s._v("use")]),s._v(" 的工作方式与自定义命令相同：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use greetings.nu\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"greetings MYNAME"')]),s._v("\nArthur, King of the Britons\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" greetings hello "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"greetings MYNAME"')]),s._v("\nhello Arthur, King of the Britons"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])])]),a("p",[s._v("你可能注意到我们没有直接给"),a("code",[s._v("MYNAME")]),s._v("赋值，相反，我们给了它一个代码块（"),a("code",[s._v("{ ...}")]),s._v("），它在我们每次调用"),a("RouterLink",{attrs:{to:"/book/commands/use.html"}},[a("code",[s._v("use")])]),s._v("时都会被执行。例如，我们可以用"),a("RouterLink",{attrs:{to:"/book/commands/random.html"}},[a("code",[s._v("random")])]),s._v("命令来演示这一点：")],1),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" module roll "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v(" ROLL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" random dice "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" into string "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use roll ROLL\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),s._v(".ROLL\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),s._v(".ROLL\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use roll ROLL\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),s._v(".ROLL\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),s._v(".ROLL\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n")])])]),a("h2",{attrs:{id:"导出符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导出符号"}},[s._v("#")]),s._v(" 导出符号")]),s._v(" "),a("p",[s._v("如上所述，你可以从模块中导出定义和环境变量。这可以让你更容易地将相关的定义分组，并导出你想公开的定义。")]),s._v(" "),a("p",[s._v("你还可以导出别名和外部声明(extern)，并在需要时才使用这些功能。导出外部声明也让你有能力隐藏模块中的自定义自动补全命令，这样它们就不必成为全局命名空间的一部分。")]),s._v(" "),a("p",[s._v("下面是所有你可以导出的列表：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("export def")]),s._v(" - 导出一个自定义命令")]),s._v(" "),a("li",[a("code",[s._v("export def-env")]),s._v(" - 导出一个自定义环境命令")]),s._v(" "),a("li",[a("code",[s._v("export env")]),s._v(" - 导出一个环境变量")]),s._v(" "),a("li",[a("code",[s._v("export alias")]),s._v(" - 导出一个别名")]),s._v(" "),a("li",[a("code",[s._v("export extern")]),s._v(" - 导出一个已知外部命令的定义")])]),s._v(" "),a("h2",{attrs:{id:"隐藏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐藏"}},[s._v("#")]),s._v(" 隐藏")]),s._v(" "),a("p",[s._v('任何自定义命令、别名或环境变量, 无论是否从模块中导入, 都可以被 "隐藏", 以恢复之前的定义。\n(注意，现在还不能从模块中导出别名，但它们仍然可以被隐藏。)\n我们用'),a("RouterLink",{attrs:{to:"/book/commands/hide.html"}},[a("code",[s._v("hide")])]),s._v("命令来实现隐藏：")],1),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" def foo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" foo\nfoo\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hide foo\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" foo  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# error! command not found!")]),s._v("\n")])])]),a("p",[a("RouterLink",{attrs:{to:"/book/commands/hide.html"}},[a("code",[s._v("hide")])]),s._v("命令也接受导入模式，就像"),a("RouterLink",{attrs:{to:"/book/commands/use.html"}},[a("code",[s._v("use")])]),s._v("那样。不过，导入模式的解释略有不同。它可以是下面中的一种：")],1),s._v(" "),a("p",[a("code",[s._v("hide foo")]),s._v(" 或者 "),a("code",[s._v("hide greetings")])]),s._v(" "),a("ul",[a("li",[s._v("如果该名称是一个自定义的命令或环境变量，则直接隐藏它。否则：")]),s._v(" "),a("li",[s._v("如果名字是一个模块的名称，则隐藏所有以模块名称为前缀的导出。")])]),s._v(" "),a("p",[a("code",[s._v("hide greetings hello")])]),s._v(" "),a("ul",[a("li",[s._v("隐藏带前缀的命令或环境变量")])]),s._v(" "),a("p",[a("code",[s._v("hide greetings [hello, hi]")])]),s._v(" "),a("ul",[a("li",[s._v("隐藏带前缀的若干个命令或环境变量")])]),s._v(" "),a("p",[a("code",[s._v("hide greetings *")])]),s._v(" "),a("ul",[a("li",[s._v("隐藏模块的所有的导出，不含前缀")])]),s._v(" "),a("p",[s._v("让我们看几个例子。前面已经看到了直接隐藏一个自定义命令的例子，现在让我们试试环境变量：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" let-env FOO "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FOO"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),s._v(".FOO\nFOO\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hide FOO\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),s._v(".FOO  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# error! environment variable not found!")]),s._v("\n")])])]),a("p",[s._v('第一种情况也适用于从一个模块导入的命令/环境变量（使用上面定义的 "greetings.nu" 文件）：')]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use greetings.nu *\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),s._v(".MYNAME\nArthur, King of the Britons\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hello "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v("\nhello world"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hide MYNAME\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),s._v(".MYNAME  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# error! environment variable not found!")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hide hello\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hello "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# error! command not found!")]),s._v("\n")])])]),a("p",[s._v("最后，当名称为模块名时（假设是之前的"),a("code",[s._v("greetings")]),s._v("模块）：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use greetings.nu\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"greetings MYNAME"')]),s._v("\nArthur, King of the Britons\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" greetings hello "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v("\nhello world"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hide greetings\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$env")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"greetings MYNAME"')]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# error! environment variable not found!")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" greetings hello "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# error! command not found!")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);