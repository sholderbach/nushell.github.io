(window.webpackJsonp=window.webpackJsonp||[]).push([[527],{1043:function(t,a,e){"use strict";e.r(a);var s=e(35),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),e("p",[t._v("Nu can help with common "),e("code",[t._v("Git")]),t._v(" tasks like removing all local branches which have been merged into master.")]),t._v(" "),e("h3",{attrs:{id:"delete-git-merged-branches"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delete-git-merged-branches"}},[t._v("#")]),t._v(" Delete git merged branches")]),t._v(" "),e("p",[e("strong",[t._v("Warning")]),t._v(": This command will hard delete the merged branches from your machine. You may want to check the branches selected for deletion by omitting the last git command.")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --merged "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lines "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" where "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$it")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"* master"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$it")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"* main"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" each "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("br"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$br")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" str trim"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" str trim\n")])])]),e("p",[t._v("Output")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("───┬───────────────────────────────────────────\n 0 │ Deleted branch start_urls (was fc01bb45).\n───┴───────────────────────────────────────────\n")])])]),e("p",[t._v("Parse formatted commit messages (more details in the parsing git log section)")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%h»¦«%aN»¦«%s»¦«%aD "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lines "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("column")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"»¦«"')]),t._v(" sha1 committer desc merged_at "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" first "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])])]),e("p",[t._v("Output")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("───┬──────────┬───────────────────┬───────────────────────────────────────────────────────┬─────────────────────────────────\n # │   sha1   │     committer     │                         desc                          │            merged_at\n───┼──────────┼───────────────────┼───────────────────────────────────────────────────────┼─────────────────────────────────\n 0 │ 42f1874a │ Justin Ma         │ Update some examples and docs (#4682)                 │ Tue, 1 Mar 2022 21:05:29 +0800\n 1 │ 2a89936b │ JT                │ Move to latest stable crossterm, with fix (#4684)     │ Tue, 1 Mar 2022 07:05:46 -0500\n 2 │ ece5e7db │ Fernando Herrera  │ dataframe list command (#4681)                        │ Tue, 1 Mar 2022 11:41:13 +0000\n 3 │ a6a96b29 │ JT                │ Add binary literals (#4680)                           │ Mon, 28 Feb 2022 18:31:53 -0500\n 4 │ e3100e6a │ Luca Trevisani    │ Fix alias in `docs/sample_config/config.toml` (#4669) │ Mon, 28 Feb 2022 22:47:14 +0100\n 5 │ cb5c61d2 │ JT                │ Fix open ended ranges (#4677)                         │ Mon, 28 Feb 2022 11:15:31 -0500\n 6 │ b09acdb7 │ Justin Ma         │ Fix unsupported type message for some math related    │ Mon, 28 Feb 2022 23:14:33 +0800\n   │          │                   │ commands (#4672)                                      │\n 7 │ 0924975b │ JT                │ Use default_config.nu by default (#4675)              │ Mon, 28 Feb 2022 10:12:08 -0500\n 8 │ d6a6c4b0 │ JT                │ Add back in default keybindings (#4673)               │ Mon, 28 Feb 2022 08:54:40 -0500\n 9 │ eec17304 │ Stefan Holderbach │ Add profiling build profile and symbol strip (#4630)  │ Mon, 28 Feb 2022 13:13:24 +0100\n───┴──────────┴───────────────────┴───────────────────────────────────────────────────────┴─────────────────────────────────\n")])])]),e("hr"),t._v(" "),e("h3",{attrs:{id:"view-git-comitter-activity-as-a-histogram"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#view-git-comitter-activity-as-a-histogram"}},[t._v("#")]),t._v(" View git comitter activity as a "),e("code",[t._v("histogram")])]),t._v(" "),e("p",[e("em",[t._v("Note: the "),e("code",[t._v("histogram")]),t._v(" command is not yet ported to the latest version")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%h»¦«%aN»¦«%s»¦«%aD "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lines "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("column")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"»¦«"')]),t._v(" sha1 committer desc merged_at "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" histogram committer merger "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" sort-by merger "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" reverse\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("━━━━┯━━━━━━━━━━━━━━━━━━━━━┯━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n #  │ committer           │ merger\n────┼─────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────\n  0 │ Jonathan Turner     │ ****************************************************************************************************\n  1 │ Andrés N. Robalino  │ ***********************\n  2 │ Yehuda Katz         │ **************\n  3 │ est31               │ *****\n  4 │ Thomas Hartmann     │ ****\n  5 │ Sean Hellum         │ **\n  6 │ Patrick Meredith    │ **\n  7 │ Fahmi Akbar Wildana │ **\n  8 │ Vanessa Sochat      │ *\n  9 │ Shaurya Shubham     │ *\n 10 │ Pirmin Kalberer     │ *\n 11 │ Odin Dutton         │ *\n 12 │ Jonathan Rothberg   │ *\n ━━━┷━━━━━━━━━━━━━━━━━━━━━┷━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);