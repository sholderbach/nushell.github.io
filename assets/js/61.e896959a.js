(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{577:function(e,t,n){"use strict";n.r(t);var s=n(35),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"nushell-0-40"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nushell-0-40"}},[e._v("#")]),e._v(" Nushell 0.40")]),e._v(" "),n("p",[e._v("Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.")]),e._v(" "),n("p",[e._v("Today, we're releasing 0.40 of Nu. This release is includes better table imports and much smaller release size.")]),e._v(" "),n("h1",{attrs:{id:"where-to-get-it"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#where-to-get-it"}},[e._v("#")]),e._v(" Where to get it")]),e._v(" "),n("p",[e._v("Nu 0.40 is available as "),n("a",{attrs:{href:"https://github.com/nushell/nushell/releases/tag/0.40.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("pre-built binaries"),n("OutboundLink")],1),e._v(" or from "),n("a",{attrs:{href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"}},[e._v("crates.io"),n("OutboundLink")],1),e._v(". If you have Rust installed you can install it using "),n("code",[e._v("cargo install nu")]),e._v(".")]),e._v(" "),n("p",[e._v("If you want all the goodies, you can install "),n("code",[e._v("cargo install nu --features=extra")]),e._v(".")]),e._v(" "),n("p",[e._v("As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use "),n("code",[e._v("cargo install nu_plugin_<plugin name>")]),e._v(".")]),e._v(" "),n("h1",{attrs:{id:"what-s-new"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#what-s-new"}},[e._v("#")]),e._v(" What's New")]),e._v(" "),n("h2",{attrs:{id:"detecting-columns-jt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#detecting-columns-jt"}},[e._v("#")]),e._v(" Detecting columns (jt)")]),e._v(" "),n("p",[e._v("Nushell now supports a new command: "),n("code",[e._v("detect columns")]),e._v(". This command is intended as an easy way to handle tabular data that's written as text. Commands like "),n("code",[e._v("ps")]),e._v(", "),n("code",[e._v("ls -l")]),e._v(", "),n("code",[e._v("netstat")]),e._v(", "),n("code",[e._v("df")]),e._v(", and others commonly output their output as text. With "),n("code",[e._v("detect columns")]),e._v(", you can run the external command, and convert them into Nushell's tabular data format.")]),e._v(" "),n("p",[e._v("Let's look at an example:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> df\nFilesystem     1K-blocks      Used Available Use% Mounted on\nudev             8108824         0   8108824   0% /dev\ntmpfs            1631284      2068   1629216   1% /run\n/dev/nvme1n1p2 490691512 346066860 119629172  75% /\ntmpfs            8156408    251332   7905076   4% /dev/shm\ntmpfs               5120         4      5116   1% /run/lock\ntmpfs            8156408         0   8156408   0% /sys/fs/cgroup\n/dev/nvme0n1p1    508932    211684    297248  42% /boot/efi\ntmpfs            1631280       128   1631152   1% /run/user/1000\n/dev/nvme0n1p2 238810780 136867812  89742316  61% /media/jt/Data\n")])])]),n("p",[e._v("The "),n("code",[e._v("df")]),e._v(" command comes with most Unix-based systems and prints out a table of data for each of the devices on the system. Let's turn this into a table we can work with in Nushell:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> df | detect columns\n───┬────────────────┬───────────┬───────────┬───────────┬──────┬────────────────┬────────────────\n # │   Filesystem   │ 1K-blocks │   Used    │ Available │ Use% │    Mounted     │       on\n───┼────────────────┼───────────┼───────────┼───────────┼──────┼────────────────┼────────────────\n 0 │ udev           │ 8108824   │ 0         │ 8108824   │ 0%   │ /dev           │\n 1 │ tmpfs          │ 1631284   │ 2068      │ 1629216   │ 1%   │ /run           │\n 2 │ /dev/nvme1n1p2 │ 490691512 │ 346067044 │ 119628988 │ 75%  │ /              │\n 3 │ tmpfs          │ 8156408   │ 251332    │ 7905076   │ 4%   │ /dev/shm       │\n 4 │ tmpfs          │ 5120      │ 4         │ 5116      │ 1%   │ /run/lock      │ /run/lock\n 5 │ tmpfs          │ 8156408   │ 0         │ 8156408   │ 0%   │ /sys/fs/cgroup │ /sys/fs/cgroup\n 6 │ /dev/nvme0n1p1 │ 508932    │ 211684    │ 297248    │ 42%  │ /boot/efi      │ /boot/efi\n 7 │ tmpfs          │ 1631280   │ 128       │ 1631152   │ 1%   │ /run/user/1000 │ /run/user/1000\n 8 │ /dev/nvme0n1p2 │ 238810780 │ 136867812 │ 89742316  │ 61%  │ /media/jt/Data │ /media/jt/Data\n───┴────────────────┴───────────┴───────────┴───────────┴──────┴────────────────┴────────────────\n")])])]),n("p",[e._v("Ahh, that's close to what we want in just one step. Let's go ahead and clean this up a little. First, let's drop that last column. \"Mounted on\" being two words confused the importer, but all the data is there, we just need to drop the last column.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> df | detect columns | drop column\n───┬────────────────┬───────────┬───────────┬───────────┬──────┬────────────────\n # │   Filesystem   │ 1K-blocks │   Used    │ Available │ Use% │    Mounted\n───┼────────────────┼───────────┼───────────┼───────────┼──────┼────────────────\n 0 │ udev           │ 8108824   │ 0         │ 8108824   │ 0%   │ /dev\n 1 │ tmpfs          │ 1631284   │ 2068      │ 1629216   │ 1%   │ /run\n 2 │ /dev/nvme1n1p2 │ 490691512 │ 346067188 │ 119628844 │ 75%  │ /\n 3 │ tmpfs          │ 8156408   │ 251332    │ 7905076   │ 4%   │ /dev/shm\n 4 │ tmpfs          │ 5120      │ 4         │ 5116      │ 1%   │ /run/lock\n 5 │ tmpfs          │ 8156408   │ 0         │ 8156408   │ 0%   │ /sys/fs/cgroup\n 6 │ /dev/nvme0n1p1 │ 508932    │ 211684    │ 297248    │ 42%  │ /boot/efi\n 7 │ tmpfs          │ 1631280   │ 128       │ 1631152   │ 1%   │ /run/user/1000\n 8 │ /dev/nvme0n1p2 │ 238810780 │ 136867812 │ 89742316  │ 61%  │ /media/jt/Data\n───┴────────────────┴───────────┴───────────┴───────────┴──────┴────────────────\n")])])]),n("p",[e._v("Finally, it'd be nice to be able to have real file sizes for the middle columns, so let's convert the numbers into Nushell's filesize type:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> df | detect columns | drop column | into filesize 1K-blocks Used Available\n───┬────────────────┬───────────┬──────────┬───────────┬──────┬────────────────\n # │   Filesystem   │ 1K-blocks │   Used   │ Available │ Use% │    Mounted\n───┼────────────────┼───────────┼──────────┼───────────┼──────┼────────────────\n 0 │ udev           │    8.1 MB │      0 B │    8.1 MB │ 0%   │ /dev\n 1 │ tmpfs          │    1.6 MB │   2.1 KB │    1.6 MB │ 1%   │ /run\n 2 │ /dev/nvme1n1p2 │  490.7 MB │ 346.1 MB │  119.6 MB │ 75%  │ /\n 3 │ tmpfs          │    8.2 MB │ 251.3 KB │    7.9 MB │ 4%   │ /dev/shm\n 4 │ tmpfs          │    5.1 KB │      4 B │    5.1 KB │ 1%   │ /run/lock\n 5 │ tmpfs          │    8.2 MB │      0 B │    8.2 MB │ 0%   │ /sys/fs/cgroup\n 6 │ /dev/nvme0n1p1 │  508.9 KB │ 211.7 KB │  297.2 KB │ 42%  │ /boot/efi\n 7 │ tmpfs          │    1.6 MB │    128 B │    1.6 MB │ 1%   │ /run/user/1000\n 8 │ /dev/nvme0n1p2 │  238.8 MB │ 136.9 MB │   89.7 MB │ 61%  │ /media/jt/Data\n───┴────────────────┴───────────┴──────────┴───────────┴──────┴────────────────\n")])])]),n("p",[e._v("In just a couple steps, we've converted the text-based table into tabular data we can use just like any other Nushell command. To make this easy to do in the future, we can alias "),n("code",[e._v("df")]),e._v(" to do these steps:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("> alias df = (^df | detect columns | drop column | into filesize 1K-blocks Used Available)\n")])])]),n("h2",{attrs:{id:"smaller-binaries-fdncred"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#smaller-binaries-fdncred"}},[e._v("#")]),e._v(" Smaller binaries (fdncred)")]),e._v(" "),n("p",[e._v('The size of the Nushell release binaries has come up as regular feedback from Nushell users. "Why does the shell have to be so big?" And we\'ve heard you!')]),e._v(" "),n("p",[e._v("Today's release now uses a combination of "),n("code",[e._v("strip")]),e._v(" and "),n("code",[e._v("upx")]),e._v(" to bring considerable savings in binary size. The Linux release (plugins incl.) has dropped from 475mb to 58mb(!!), making it "),n("strong",[e._v("88% smaller")]),e._v(". We're seeing similar improvements in the sizes of the macOS and Windows releases.")]),e._v(" "),n("h2",{attrs:{id:"additional-fixes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#additional-fixes"}},[e._v("#")]),e._v(" Additional fixes")]),e._v(" "),n("ul",[n("li",[e._v("Upgraded "),n("a",{attrs:{href:"https://github.com/nushell/nushell/pull/4122",target:"_blank",rel:"noopener noreferrer"}},[e._v("polars dataframe support"),n("OutboundLink")],1),e._v(" (nmandery)")]),e._v(" "),n("li",[e._v("Fixed a "),n("a",{attrs:{href:"https://github.com/nushell/nushell/pull/4107",target:"_blank",rel:"noopener noreferrer"}},[e._v("panic during parsing"),n("OutboundLink")],1),e._v(" (ahkrr)")]),e._v(" "),n("li",[e._v("File matching between "),n("code",[e._v("rm")]),e._v(" and "),n("code",[e._v("ls")]),e._v(" is now "),n("a",{attrs:{href:"https://github.com/nushell/nushell/pull/4099",target:"_blank",rel:"noopener noreferrer"}},[e._v("more consistent"),n("OutboundLink")],1),e._v(" (yogi)")])]),e._v(" "),n("h1",{attrs:{id:"engine-q-progress"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#engine-q-progress"}},[e._v("#")]),e._v(" Engine-q progress")]),e._v(" "),n("p",[e._v("We've also hit a milestone with engine-q: now over 100 commands have been ported to engine-q! Special thanks to onthebridgetonowhere, CBenoit, luccasmmg, stormasm, and aslynatilla for their work in these ports since the last Nushell release.")]),e._v(" "),n("p",[e._v("We've also added support for "),n("a",{attrs:{href:"https://github.com/nushell/engine-q/pull/332",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("$config")]),n("OutboundLink")],1),e._v(", "),n("a",{attrs:{href:"https://github.com/nushell/engine-q/pull/309",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("$in")]),n("OutboundLink")],1),e._v(", a new "),n("a",{attrs:{href:"https://github.com/nushell/engine-q/pull/326",target:"_blank",rel:"noopener noreferrer"}},[e._v("record syntax"),n("OutboundLink")],1),e._v(", "),n("a",{attrs:{href:"https://github.com/nushell/engine-q/pull/340",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("ls")]),e._v(" colors"),n("OutboundLink")],1),e._v(", "),n("a",{attrs:{href:"https://github.com/nushell/engine-q/pull/331",target:"_blank",rel:"noopener noreferrer"}},[e._v("environment variable module imports"),n("OutboundLink")],1),e._v(", and much more. While engine-q isn't quite ready to be tested as a daily driver, with each day its capabilities and stability grows.")]),e._v(" "),n("p",[e._v("If you're interested in how some of the upcoming support for parallel processing in engine-q works, contributor JT "),n("a",{attrs:{href:"https://www.youtube.com/watch?v=3o8b_QcrFHc",target:"_blank",rel:"noopener noreferrer"}},[e._v("made a video explaining it"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("h1",{attrs:{id:"looking-forward"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#looking-forward"}},[e._v("#")]),e._v(" Looking forward")]),e._v(" "),n("p",[e._v("We're excited to see Nushell continue to gain more ability to work with data in easier ways as well as doing so in as a much smaller binary. Progress on engine-q continues to grow, and covers a large amount of ground in the engine internals, porting commands, plugin support, modules, and more.")]),e._v(" "),n("p",[e._v("If you're interested in helping out, come "),n("a",{attrs:{href:"https://discord.gg/NtAbbGn",target:"_blank",rel:"noopener noreferrer"}},[e._v("join us on the discord"),n("OutboundLink")],1),e._v(". We're more than happy to help answer questions and point you towards on-going projects!")])])}),[],!1,null,null,null);t.default=a.exports}}]);