(window.webpackJsonp=window.webpackJsonp||[]).push([[300],{816:function(a,t,s){"use strict";s.r(t);var e=s(35),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"frontmatter-title"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[a._v("#")]),a._v(" "),s("code",[a._v(a._s(a.$frontmatter.title))])]),a._v(" "),s("div",{staticStyle:{"white-space":"pre-wrap"}},[a._v(a._s(a.$frontmatter.usage))]),a._v(" "),s("h2",{attrs:{id:"signature"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signature"}},[a._v("#")]),a._v(" Signature")]),a._v(" "),s("p",[s("code",[a._v("> into binary ...rest")])]),a._v(" "),s("h2",{attrs:{id:"parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[a._v("#")]),a._v(" Parameters")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("...rest")]),a._v(": column paths to convert to binary (for table input)")])]),a._v(" "),s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[a._v("#")]),a._v(" Examples")]),a._v(" "),s("p",[a._v("convert string to a nushell binary primitive")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'This is a string that is exactly 52 characters long.'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" into binary\n")])])]),s("p",[a._v("convert a number to a nushell binary primitive")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" into binary\n")])])]),s("p",[a._v("convert a boolean to a nushell binary primitive")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" into binary\n")])])]),s("p",[a._v("convert a filesize to a nushell binary primitive")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" where name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" LICENSE "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" get size "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" into binary\n")])])]),s("p",[a._v("convert a filepath to a nushell binary primitive")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" where name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" LICENSE "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" get name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" path "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("expand")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" into binary\n")])])]),s("p",[a._v("convert a decimal to a nushell binary primitive")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.234")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" into binary\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);