(window.webpackJsonp=window.webpackJsonp||[]).push([[300],{785:function(t,a,e){"use strict";e.r(a);var s=e(35),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"frontmatter-title"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "),e("code",[t._v(t._s(t.$frontmatter.title))])]),t._v(" "),e("div",{staticStyle:{"white-space":"pre-wrap"}},[t._v(t._s(t.$frontmatter.usage))]),t._v(" "),e("h2",{attrs:{id:"signature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#signature"}},[t._v("#")]),t._v(" Signature")]),t._v(" "),e("p",[e("code",[t._v("> path")])]),t._v(" "),e("h2",{attrs:{id:"notes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notes"}},[t._v("#")]),t._v(" Notes")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("There are three ways to represent a path:\n\n* As a path literal, e.g., '/home/viking/spam.txt'\n* As a structured path: a table with 'parent', 'stem', and 'extension' (and\n* 'prefix' on Windows) columns. This format is produced by the 'path parse'\n  subcommand.\n* As an inner list of path parts, e.g., '[[ / home viking spam.txt ]]'.\n  Splitting into parts is done by the `path split` command.\n\nAll subcommands accept all three variants as an input. Furthermore, the 'path\njoin' subcommand can be used to join the structured path or path parts back into\nthe path literal.\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);