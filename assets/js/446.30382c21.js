(window.webpackJsonp=window.webpackJsonp||[]).push([[446],{931:function(e,t,a){"use strict";a.r(t);var s=a(35),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"scripts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scripts"}},[e._v("#")]),e._v(" Scripts")]),e._v(" "),a("p",[e._v("In Nushell, you can write and run scripts in the Nushell language. To run a script, you can pass it as an argument to the "),a("code",[e._v("nu")]),e._v(" commandline application:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("> nu myscript.nu\n")])])]),a("p",[e._v("This will run the script to completion in a new instance of Nu. You can also run scripts inside the "),a("em",[e._v("current")]),e._v(" instance of Nu using "),a("RouterLink",{attrs:{to:"/book/commands/source.html"}},[a("code",[e._v("source")])]),e._v(":")],1),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("> source myscript.nu\n")])])]),a("p",[e._v("Let's look at an example script file:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('# myscript.nu\ndef greet [name] {\n  echo "hello" $name\n}\n\ngreet "world"\n')])])]),a("p",[e._v("A script file defines the definitions for custom commands as well as the main script itself, which will run after the custom commands are defined.")]),e._v(" "),a("p",[e._v("In the above, first "),a("code",[e._v("greet")]),e._v(" is defined by the Nushell interpreter. This allows us to later call this definition. We could have written the above as:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('greet "world"\n\ndef greet [name] {\n  echo "hello" $name\n}\n')])])]),a("p",[e._v("There is no requirement that definitions have to come before the parts of the script that call the definitions, allowing you to put them where you feel comfortable.")]),e._v(" "),a("h2",{attrs:{id:"how-scripts-are-processed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-scripts-are-processed"}},[e._v("#")]),e._v(" How scripts are processed")]),e._v(" "),a("p",[e._v("In a script, definitions run first. This allows us to call the definitions using the calls in the script.")]),e._v(" "),a("p",[e._v("After the definitions run, we start at the top of the script file and run each group of commands one after another.")]),e._v(" "),a("h2",{attrs:{id:"script-lines"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-lines"}},[e._v("#")]),e._v(" Script lines")]),e._v(" "),a("p",[e._v("To better understand how Nushell sees lines of code, let's take a look at an example script:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("a\nb; c | d\n")])])]),a("p",[e._v("When this script is run, Nushell will first run the "),a("code",[e._v("a")]),e._v(" command to completion and view its results. Next, Nushell will run "),a("code",[e._v("b; c | d")]),e._v(" following the rules in the "),a("a",{attrs:{href:"https://www.nushell.sh/book/types_of_data.html#groups",target:"_blank",rel:"noopener noreferrer"}},[e._v('"Groups" section'),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"parameterizing-scripts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameterizing-scripts"}},[e._v("#")]),e._v(" Parameterizing Scripts")]),e._v(" "),a("p",[e._v('Script files can optionally contain a special "main" command. '),a("code",[e._v("main")]),e._v(" will be run after any other Nu code, and is primarily used to add parameters to scripts. You can pass arguments to scripts after the script name ("),a("code",[e._v("nu <script name> <script args>")]),e._v(").")]),e._v(" "),a("p",[e._v("For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# myscript.nu\n\ndef main [x: int] {\n  $x + 10\n}\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("> nu myscript.nu 100\n110\n")])])]),a("h2",{attrs:{id:"shebangs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shebangs"}},[e._v("#")]),e._v(" Shebangs ("),a("code",[e._v("!#")]),e._v(")")]),e._v(" "),a("p",[e._v("On Linux and macOS you can optionally use a "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Shebang_(Unix)",target:"_blank",rel:"noopener noreferrer"}},[e._v("shebang"),a("OutboundLink")],1),e._v(" to tell the OS that a file should be interpreted by Nu. For example, with the following in a file named "),a("code",[e._v("myscript")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('#!/usr/bin/env nu\necho "Hello World!"\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("> ./myscript\nHello World!\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);