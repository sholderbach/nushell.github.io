(window.webpackJsonp=window.webpackJsonp||[]).push([[905],{1421:function(a,s,t){"use strict";t.r(s);var n=t(35),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"创建你自己的错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建你自己的错误"}},[a._v("#")]),a._v(" 创建你自己的错误")]),a._v(" "),t("p",[a._v("使用 "),t("RouterLink",{attrs:{to:"/zh-CN/book/metadata.html"}},[a._v("元数据")]),a._v(" 信息，你可以创建自己的自定义错误，错误信息由多个部分构成：")],1),a._v(" "),t("ul",[t("li",[a._v("错误的标题")]),a._v(" "),t("li",[a._v("错误信息的标签，其中包括标签的文本和要标注下划线的范围")])]),a._v(" "),t("p",[a._v("你可以使用"),t("code",[a._v("error make")]),a._v("命令来创建你自己的错误信息。例如，假设你有自己的名为"),t("code",[a._v("my-command")]),a._v("的命令，你想给调用者一个错误信息，说明传入的一个参数有问题。")]),a._v(" "),t("p",[a._v("首先，你可以从参数的来源中获取标注范围：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("let")]),a._v(" span "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("metadata "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$x")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(".span"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("接下来你可以通过 "),t("code",[a._v("error make")]),a._v(" 命令来创建一个错误，该命令需要一个可以描述待创建错误的记录作为输入：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("error "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("msg: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"this is fishy"')]),a._v(", label: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("text: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fish right here"')]),a._v(", start: "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$span")]),a._v(".start, end: "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$span")]),a._v(".end "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("与你的自定义命令放在一起后，它可能看起来像这样：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("def my-command "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("let")]),a._v(" span "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("metadata "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$x")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(".span"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    error "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        msg: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"this is fishy"')]),a._v(",\n        label: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            text: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fish right here"')]),a._v(",\n            start: "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$span")]),a._v(".start,\n            end: "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$span")]),a._v(".end\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("现在当传入一个值调用时，我们会看到一个错误信息返回：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" my-command "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v("\n\nError:\n  × this is fishy\n   ╭─"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("entry "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#5:1:1]")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" │ my-command "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v("\n   ·            ─┬─\n   ·             ╰── fish right here\n   ╰────\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);