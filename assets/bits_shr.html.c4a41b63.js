import{_ as n,z as r,A as i,X as e,C as s,D as t,a6 as o}from"./framework.3d018c9f.js";const c={},d={id:"frontmatter-title-for-bits",tabindex:"-1"},l=e("a",{class:"header-anchor",href:"#frontmatter-title-for-bits","aria-hidden":"true"},"#",-1),p={class:"command-title"},h=o(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; bits shr (bits) --signed --number-bytes</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>bits</code>: number of bits to shift right</li><li><code>--signed</code>: always treat input number as a signed number</li><li><code>--number-bytes {string}</code>: the word size in number of bytes, it can be 1, 2, 4, 8, auto, default value <code>8</code></li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Shift right a number with 2 bits</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token number">8</span> <span class="token operator">|</span> bits shr <span class="token number">2</span>
</code></pre></div><p>Shift right a list of numbers</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">15</span> <span class="token number">35</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">|</span> bits shr <span class="token number">2</span>
</code></pre></div>`,9);function u(a,b){return r(),i("div",null,[e("h1",d,[l,s(),e("code",null,t(a.$frontmatter.title),1),s(" for bits")]),e("div",p,t(a.$frontmatter.bits),1),h])}const f=n(c,[["render",u],["__file","bits_shr.html.vue"]]);export{f as default};
