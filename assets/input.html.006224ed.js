import{_ as r,z as n,A as o,X as e,C as a,D as s,a6 as i}from"./framework.3d018c9f.js";const p={},l={id:"frontmatter-title-for-platform",tabindex:"-1"},d=e("a",{class:"header-anchor",href:"#frontmatter-title-for-platform","aria-hidden":"true"},"#",-1),c={class:"command-title"},u=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; input (prompt) --bytes-until --suppress-output</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>prompt</code>: prompt to show the user</li><li><code>--bytes-until {string}</code>: read bytes (not text) until a stop byte</li><li><code>--suppress-output</code>: don&#39;t print keystroke values</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Get input from the user, and assign to a variable</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">let</span> user_input <span class="token operator">=</span> <span class="token punctuation">(</span>input<span class="token punctuation">)</span>
</code></pre></div>`,7);function h(t,m){return n(),o("div",null,[e("h1",l,[d,a(),e("code",null,s(t.$frontmatter.title),1),a(" for platform")]),e("div",c,s(t.$frontmatter.platform),1),u])}const _=r(p,[["render",h],["__file","input.html.vue"]]);export{_ as default};
