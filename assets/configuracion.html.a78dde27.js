import{_ as n,z as d,A as r,X as e,C as a,T as o,a6 as i,Q as s}from"./framework.3d018c9f.js";const c={},l=i(`<h1 id="configuracion" tabindex="-1"><a class="header-anchor" href="#configuracion" aria-hidden="true">#</a> Configuración</h1><p>Nu tiene un número pequeño, pero creciente, de variables internas que puedes establecer cambios en su aspecto y funcionamiento. A continuación una lista de las variables actuales, sus tipos, y una descripción de cómo se utilizan:</p><table><thead><tr><th>Variable</th><th>Tipo</th><th>Descripción</th></tr></thead><tbody><tr><td>completion_mode</td><td>&quot;list&quot; o &quot;circular&quot;</td><td>el estilo de autocompletar a usar</td></tr><tr><td>ctrlc_exit</td><td>booleano</td><td>salir o no de Nu después de presionar ctrl-c varias veces</td></tr><tr><td>disable_table_indexes</td><td>booleano</td><td>elimina la columna de índice de la tabla</td></tr><tr><td>edit_mode</td><td>&quot;vi&quot; o &quot;emacs&quot;</td><td>cambia edición de línea a modo &quot;vi&quot; o &quot;emacs&quot;</td></tr><tr><td>env</td><td>fila</td><td>variables de entorno que serán pasadas a comandos externos</td></tr><tr><td>header_align</td><td>&quot;center&quot;, &quot;right&quot;, u otro</td><td>alinea los encabezados de la tabla alineados al centro, a la derecha o a la izquierda</td></tr><tr><td>key_timeout</td><td>entero</td><td>el tiempo de espera utilizado para cambiar entre los modos de edición</td></tr><tr><td>nonzero_exit_errors</td><td>booleano</td><td>si imprimir errores para códigos de salida no-ceros para externos</td></tr><tr><td>path</td><td>tabla de cadenas</td><td>PATH para usar en búsqueda de binarios</td></tr><tr><td>startup</td><td>lista de cadenas</td><td>comandos, como <code>alias</code>es, para ejecutar cuando nushell arranca</td></tr><tr><td>table_mode</td><td>&quot;light&quot; o otro</td><td>habilitar tablas livianas o normales</td></tr></tbody></table><h2 id="uso" tabindex="-1"><a class="header-anchor" href="#uso" aria-hidden="true">#</a> Uso</h2><h3 id="configuracion-de-variables" tabindex="-1"><a class="header-anchor" href="#configuracion-de-variables" aria-hidden="true">#</a> Configuración de variables</h3><p>Para establecer una de estas variables, puedes usar <code>config set</code>. Por ejemplo:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; config set edit_mode &quot;vi&quot;
</code></pre></div><h3 id="estableciendo-una-variable-desde-la-tuberia" tabindex="-1"><a class="header-anchor" href="#estableciendo-una-variable-desde-la-tuberia" aria-hidden="true">#</a> Estableciendo una variable desde la tubería</h3><p>Hay una manera adicional de establecer una variable, y es usar el contenido de la tubería como el valor deseado para la variable. Para esto usa la bandera <code>set-into</code>:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; echo &quot;bar&quot; | config set_into foo
</code></pre></div><p>Esto es de utilidad cuando se trabaja con las variables <code>env</code> y <code>path</code>.</p><h3 id="listado-de-todas-las-variables" tabindex="-1"><a class="header-anchor" href="#listado-de-todas-las-variables" aria-hidden="true">#</a> Listado de todas las variables.</h3><p>Ejecutando el comando <code>config</code> sin argumentos mostrará una tabla de las preferencias de configuración actuales:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; config
━━━━━━━━━━━┯━━━━━━━━━━━━━━━━┯━━━━━━━━━━━━━━━━━━┯━━━━━━━━━━━━
 edit_mode │ env            │ path             │ table_mode
───────────┼────────────────┼──────────────────┼────────────
 emacs     │ [table: 1 row] │ [table: 10 rows] │ normal
━━━━━━━━━━━┷━━━━━━━━━━━━━━━━┷━━━━━━━━━━━━━━━━━━┷━━━━━━━━━━━━
</code></pre></div><p>Nota: si por el momento no has establecido variables de configuración, puede estar vacía.</p><h3 id="obteniendo-una-variable" tabindex="-1"><a class="header-anchor" href="#obteniendo-una-variable" aria-hidden="true">#</a> Obteniendo una variable</h3><p>Usando la bandera <code>get</code>, puedes conseguir el valor de una variable:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; config get edit_mode
</code></pre></div><h3 id="eliminando-una-variable" tabindex="-1"><a class="header-anchor" href="#eliminando-una-variable" aria-hidden="true">#</a> Eliminando una variable</h3><p>Para eliminar una variable de la configuración, usa la bandera <code>remove</code>:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; config remove edit_mode
</code></pre></div><h3 id="borrar-toda-la-configuracion" tabindex="-1"><a class="header-anchor" href="#borrar-toda-la-configuracion" aria-hidden="true">#</a> Borrar toda la configuración</h3><p>Si deseas borrar toda la configuración y empezar de cero, puedes usar la bandera <code>clear</code>. Por supuesto, tenga precaución con esto ya que una vez ejecutado el archivo de configuración también se eliminará.</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; config clear
</code></pre></div><h3 id="encontrar-donde-se-almacena-el-archivo-de-configuracion" tabindex="-1"><a class="header-anchor" href="#encontrar-donde-se-almacena-el-archivo-de-configuracion" aria-hidden="true">#</a> Encontrar dónde se almacena el archivo de configuración</h3><p>El archivo de configuración se carga desde una ubicación predeterminada. Para encontrar esta ubicación en el sistema, puedes solicitarla usando la bandera <code>path</code>:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>config path
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 &lt;value&gt;
───────────────────────────────────────
 /home/nusheller/.config/nu/config.toml
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
</code></pre></div><h3 id="cargando-la-configuracion-desde-un-archivo" tabindex="-1"><a class="header-anchor" href="#cargando-la-configuracion-desde-un-archivo" aria-hidden="true">#</a> Cargando la configuración desde un archivo</h3><p>Es posible que desees cargar la configuración desde una ubicación distinta a la predeterminada. Para hacerlo, usa la bandera <code>load</code>:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; config load myconfiguration.toml
</code></pre></div><h2 id="configurando-nu-como-shell-de-inicio-de-sesion" tabindex="-1"><a class="header-anchor" href="#configurando-nu-como-shell-de-inicio-de-sesion" aria-hidden="true">#</a> Configurando Nu como shell de inicio de sesión</h2><p>Para usar Nu como shell de inicio de sesión, necesitarás configurar las variables <code>path</code> y <code>env</code>. Con estos, obtendrás suficiente soporte para ejecutar comandos externos como shell de inicio de sesión.</p><p>Antes de cambiarlo, ejecuta Nu dentro de otra shell, como Bash. Luego, obtén el entorno y PATH desde esa shell con los siguientes comandos:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; config set path $nu.path
&gt; config set env $nu.env
</code></pre></div><p><code>$nu.path</code> y <code>$nu.env</code> son valores que están prestablecidas a las variables actuales de entorno y PATH, respectivamente. Una vez que las estableces a la configuración, estarán disponibles cuando uses Nu como shell de inicio de sesión.</p><p>A continuación, en algunas distribuciones también deberás asegurarte de que Nu esté en la lista en <code>/etc/shells</code>:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>❯ cat /etc/shells
# /etc/shells: valid login shells
/bin/sh
/bin/dash
/bin/bash
/bin/rbash
/usr/bin/screen
/usr/bin/fish
/home/jonathan/.cargo/bin/nu
</code></pre></div><p>Con esto, deberías de poder hacer <code>chsh</code> y establecer Nu como la shell de inicio de sesión. Luego de cerrar sesión, en el próximo inicio de sesión deberías de recibir un brillante mensaje de Nu.</p><h2 id="configuracion-del-prompt" tabindex="-1"><a class="header-anchor" href="#configuracion-del-prompt" aria-hidden="true">#</a> Configuración del prompt</h2>`,39),u={href:"https://github.com/starship/starship",target:"_blank",rel:"noopener noreferrer"},h=e("div",{class:"language-text","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`nushell on 📙 master [$] is 📦 v0.5.1 via 🦀 v1.40.0-nightly
❯
`)])],-1),p={href:"https://starship.rs/config/",target:"_blank",rel:"noopener noreferrer"};function g(b,m){const t=s("ExternalLinkIcon");return d(),r("div",null,[l,e("p",null,[a("Actualmente, la configuración del prompt es manejada instalando Nu con el soporte prompt proporcionado con "),e("a",u,[a("starship"),o(t)]),a(".")]),h,e("p",null,[a("Starship es un prompt divertido, colorido y sorprendentemente poderoso. Para configurarlo, sigue los pasos en su "),e("a",p,[a("manual de configuración"),o(t)]),a(".")])])}const f=n(c,[["render",g],["__file","configuracion.html.vue"]]);export{f as default};
