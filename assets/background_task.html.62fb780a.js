import{_ as a,z as s,A as r,X as e,C as t,T as o,a6 as l,Q as i}from"./framework.3d018c9f.js";const u={},c=e("h1",{id:"background-task-in-nu",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#background-task-in-nu","aria-hidden":"true"},"#"),t(" Background task in Nu")],-1),h=e("p",null,`Currently Nushell doesn't have built-in background task management feature, but you can make it "support" background task with some tools, here are some example:`,-1),d={href:"https://github.com/Nukesor/pueue",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/tmux/tmux/wiki",target:"_blank",rel:"noopener noreferrer"},m={href:"https://zellij.dev/",target:"_blank",rel:"noopener noreferrer"},_=e("h2",{id:"using-nu-with-pueue",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#using-nu-with-pueue","aria-hidden":"true"},"#"),t(" Using nu with pueue")],-1),g={href:"https://github.com/Nukesor/pueue",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,"Unlike terminal multiplexer, you don't need to attach to multiple tmux sessions, and get task status easily.",-1),b={href:"https://github.com/nushell/nu_scripts/tree/main/background_task",target:"_blank",rel:"noopener noreferrer"},f=e("p",null,'Here is a setup example to make nushell "support" background task:',-1),w=e("li",null,"install pueue",-1),x=e("code",null,"pueued",-1),v={href:"https://github.com/Nukesor/pueue/wiki/Get-started#start-the-daemon",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/nushell/nu_scripts/blob/main/background_task/job.nu",target:"_blank",rel:"noopener noreferrer"},N=e("code",null,"$env.NU_LIB_DIRS",-1),j=e("li",null,[t("add a line to the "),e("code",null,"$nu.config-path"),t(" file: "),e("code",null,"use job.nu")],-1),B=e("li",null,"restart nu.",-1),I=l('<p>Then you will get some commands to schedule background tasks. (e.g: <code>job spawn</code>, <code>job status</code>, <code>job log</code>)</p><p>Cons note: It spawned a fresh nushell to execute the given command, so it doesn&#39;t inherit current scope&#39;s variables, custom commands, alias definition, except env variables which can convert value to string. Therefore, if you want to use custom commands or variables, you have to <code>use</code> or <code>define</code> them within the given block.</p><h2 id="using-nu-with-terminal-multiplexer" tabindex="-1"><a class="header-anchor" href="#using-nu-with-terminal-multiplexer" aria-hidden="true">#</a> Using nu with terminal multiplexer</h2><p>You can choose and install a terminal multiplexer and use it.</p><p>It allows you to easily switch between multiple programs in one terminal, detach them (they continue to run in the background) and reconnect them to a different terminal. As a result, it is very flexible and usable.</p>',5);function C(T,U){const n=i("ExternalLinkIcon");return s(),r("div",null,[c,h,e("ol",null,[e("li",null,[t("using a third-party task management tools, like "),e("a",d,[t("pueue"),o(n)])]),e("li",null,[t("using a terminal multiplexer, like "),e("a",p,[t("tmux"),o(n)]),t(" or "),e("a",m,[t("zellij"),o(n)])])]),_,e("p",null,[t("Borrows the power of "),e("a",g,[t("pueue"),o(n)]),t(", it is possible to schedule background tasks to pueue, and manage those tasks (such as viewing logs, killing tasks, or getting the running status of all tasks)")]),k,e("p",null,[t("Here we provide a "),e("a",b,[t("nushell module"),o(n)]),t(" to work with pueue easiler.")]),f,e("ol",null,[w,e("li",null,[t("run "),x,t(" with default config, you can refer to "),e("a",v,[t("start-the-daemon page"),o(n)]),t(" for more information.")]),e("li",null,[t("put the "),e("a",y,[t("job.nu"),o(n)]),t(" file under "),N,t(".")]),j,B]),I])}const z=a(u,[["render",C],["__file","background_task.html.vue"]]);export{z as default};
