import{_ as l,r,o as a,c as i,f as h,a as o,b as n,d as e,e as s}from"./app.8034769a.js";const d="/assets/0_32_themes.a37b6a85.png",c={},_=o("h1",{id:"nushell-0-33",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#nushell-0-33","aria-hidden":"true"},"#"),e(" Nushell 0.33")],-1),u=o("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),p=o("p",null,"Today, we're releasing 0.33 of Nu. This release includes improved completions, support for pipeline variables, syntax theming and more.",-1),m=o("h1",{id:"where-to-get-it",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),f=e("Nu 0.33 is available as "),g={href:"https://github.com/nushell/nushell/releases/tag/0.33.0",target:"_blank",rel:"noopener noreferrer"},b=e("pre-built binaries"),k=e(" or from "),w={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},v=e("crates.io"),y=e(". If you have Rust installed you can install it using "),x=o("code",null,"cargo install nu",-1),N=e("."),j=s('<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p><p>If you&#39;d like to try the experimental paging feature in this release, you can install with <code>cargo install nu --features=table-pager</code>.</p><p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="what-s-new" tabindex="-1"><a class="header-anchor" href="#what-s-new" aria-hidden="true">#</a> What&#39;s New</h1><h2 id="improved-completions-fdncred-niklasjonsson-kubouch-andrasio-jt" tabindex="-1"><a class="header-anchor" href="#improved-completions-fdncred-niklasjonsson-kubouch-andrasio-jt" aria-hidden="true">#</a> Improved completions (fdncred, NiklasJonsson, kubouch, andrasio, jt)</h2>',5),I=e("We've begun the completion improvements that have been planned for some time. In this release, we've added completions for "),q={href:"https://github.com/nushell/nushell/pull/3594",target:"_blank",rel:"noopener noreferrer"},W=e("alias definitions"),z=e(", "),T={href:"https://github.com/nushell/nushell/pull/3589",target:"_blank",rel:"noopener noreferrer"},V=e("source imports"),B=e(", completions for "),E={href:"https://github.com/nushell/nushell/pull/3577",target:"_blank",rel:"noopener noreferrer"},L=e("quoted paths"),$=e(", completions while "),S={href:"https://github.com/nushell/nushell/pull/3575",target:"_blank",rel:"noopener noreferrer"},Y=e("inside of a pipeline"),A=e(", completions in "),C={href:"https://github.com/nushell/nushell/pull/3564",target:"_blank",rel:"noopener noreferrer"},F=e("incomplete expressions"),J=e(", "),P={href:"https://github.com/nushell/nushell/pull/3571",target:"_blank",rel:"noopener noreferrer"},R=e("subcommand completions"),G=e(" and more."),H=e("On Windows, we've "),M={href:"https://github.com/nushell/nushell/pull/3665",target:"_blank",rel:"noopener noreferrer"},O=e("sped up path completions"),D=e(". We've also reworked path handling, which should help make "),K={href:"https://github.com/nushell/nushell/pull/3653",target:"_blank",rel:"noopener noreferrer"},Q=e("path completions in Windows more consistent"),U=e(", including handling of "),X=o("code",null,"~",-1),Z=e("."),ee=s(`<p>Behind the scenes, we&#39;ve also refactored completions into their own crate, so that we can more easily grow the areas where completions are supported.</p><h2 id="pipeline-vars-jt" tabindex="-1"><a class="header-anchor" href="#pipeline-vars-jt" aria-hidden="true">#</a> Pipeline vars (jt)</h2><p>Sometimes, when you&#39;re working on a pipeline, you want to refer to values coming in using an xargs style. With 0.33, we&#39;ve introduced a new built-in variable called <code>$in</code>. The <code>$in</code> variable will collect the pipeline into a value for you, allowing you to access the whole stream as a parameter.</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token variable">$in</span>.1 * <span class="token variable">$in</span>.2
<span class="token number">6</span>
</code></pre></div><h2 id="new-distributions-itsme-alan-zmedico" tabindex="-1"><a class="header-anchor" href="#new-distributions-itsme-alan-zmedico" aria-hidden="true">#</a> New distributions (itsme-alan, zmedico)</h2>`,5),oe=e("You can now install Nushell from the "),te={href:"https://github.com/microsoft/winget-pkgs/pull/17428",target:"_blank",rel:"noopener noreferrer"},ne=e("winget repo"),se=e(" and from "),le={href:"https://packages.gentoo.org/packages/app-shells/nushell",target:"_blank",rel:"noopener noreferrer"},re=e("gentoo"),ae=e("."),ie=s('<h2 id="more-natural-pipeline-output-jt" tabindex="-1"><a class="header-anchor" href="#more-natural-pipeline-output-jt" aria-hidden="true">#</a> More natural pipeline output (jt)</h2><p>In this release, we&#39;ve also relaxed some of the strictness in when output happens to always be at the end of a pipeline. In previous versions of Nushell, it was common for people to try an example like <code>echo &quot;hello &quot;; echo &quot;world&quot;</code> only to be confused why they only saw <code>world</code> in the output. Now, we treat <code>;</code> like carriage return, so that pipelines more naturally output their results just as they do at the end of lines.</p><p>You can add back in the ignore ability using the new <code>ignore</code> command, which will ignore any stdout or data output from the previous command in the pipeline. For example, <code>ls | ignore</code>.</p><h2 id="syntax-highlighting-themes-fdncred" tabindex="-1"><a class="header-anchor" href="#syntax-highlighting-themes-fdncred" aria-hidden="true">#</a> Syntax highlighting themes (fdncred)</h2><p><img src="'+d+'" alt="image of syntax highlighting themes in Nushell"></p><p><em>Nu, with configurable colors</em></p>',6),he=e("You can now configure the colors used in syntax highlighting. For the currently supported token types and examples, check out "),de={href:"https://github.com/nushell/nushell/pull/3606",target:"_blank",rel:"noopener noreferrer"},ce=e("the original PR"),_e=e("."),ue=o("h2",{id:"new-commands",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#new-commands","aria-hidden":"true"},"#"),e(" New commands")],-1),pe=e("nathom added "),me={href:"https://github.com/nushell/nushell/pull/3629",target:"_blank",rel:"noopener noreferrer"},fe=o("code",null,"unlet_env",-1),ge=e(" to remove environment variables from the current scope"),be=e("jt added the "),ke={href:"https://github.com/nushell/nushell/pull/3643",target:"_blank",rel:"noopener noreferrer"},we=o("code",null,"ignore",-1),ve=e(" command to ignore pipeline output"),ye=e("fdncred added "),xe={href:"https://github.com/nushell/nushell/pull/3570",target:"_blank",rel:"noopener noreferrer"},Ne=o("code",null,"ansi gradient",-1),je=e(" command"),Ie=o("h2",{id:"additional-improvements",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#additional-improvements","aria-hidden":"true"},"#"),e(" Additional improvements")],-1),qe=e("fdncred added "),We={href:"https://github.com/nushell/nushell/pull/3660",target:"_blank",rel:"noopener noreferrer"},ze=e("path and environment path separators to "),Te=o("code",null,"char",-1),Ve=e(" to allow for creating more portable scripts, fixed an issue with "),Be={href:"https://github.com/nushell/nushell/pull/3634",target:"_blank",rel:"noopener noreferrer"},Ee=e("error colors"),Le=e(", added "),$e={href:"https://github.com/nushell/nushell/pull/3601",target:"_blank",rel:"noopener noreferrer"},Se=e("single and double quote to char"),Ye=e(", "),Ae={href:"https://github.com/nushell/nushell/pull/3548",target:"_blank",rel:"noopener noreferrer"},Ce=e("version now lists plugins"),Fe=e("efx updated "),Je={href:"https://github.com/nushell/nushell/pull/3649",target:"_blank",rel:"noopener noreferrer"},Pe=e("commands to engine-p style"),Re=e("chrisfinazzo "),Ge={href:"https://github.com/nushell/nushell/pull/3635",target:"_blank",rel:"noopener noreferrer"},He=e("fixed some of our helper scripts"),Me=e("andrasio, jt "),Oe={href:"https://github.com/nushell/nushell/pull/3632",target:"_blank",rel:"noopener noreferrer"},De=e("removed the clap dependency, so nushell parses its own parameters"),Ke=e("vladdoster landed "),Qe={href:"https://github.com/nushell/nushell/pull/3630",target:"_blank",rel:"noopener noreferrer"},Ue=e("some doc improvements"),Xe=e("NiklasJonsson improved "),Ze={href:"https://github.com/nushell/nushell/pull/3628",target:"_blank",rel:"noopener noreferrer"},eo=e("nu doc comments"),oo=e("reaganmcf added "),to={href:"https://github.com/nushell/nushell/pull/3618",target:"_blank",rel:"noopener noreferrer"},no=e("an optional plugin for handling mp4 metadata"),so=e(" and "),lo={href:"https://github.com/nushell/nushell/pull/3561",target:"_blank",rel:"noopener noreferrer"},ro=e("bumped sysinfo"),ao=e("voanhduy1512 added support for "),io={href:"https://github.com/nushell/nushell/pull/3611",target:"_blank",rel:"noopener noreferrer"},ho=e("invoking external commands via string interpolation"),co=e("Garfield96 added "),_o={href:"https://github.com/nushell/nushell/pull/3600",target:"_blank",rel:"noopener noreferrer"},uo=e("--sheets for xlsx/ods"),po=e(", "),mo={href:"https://github.com/nushell/nushell/pull/3529",target:"_blank",rel:"noopener noreferrer"},fo=e("--tables for "),go=o("code",null,"from sqlite",-1),bo=e(", and "),ko={href:"https://github.com/nushell/nushell/pull/3522",target:"_blank",rel:"noopener noreferrer"},wo=e("fixed a panic with giving empty tables to "),vo=o("code",null,"to sqlite",-1),yo=e("kubouch improved "),xo={href:"https://github.com/nushell/nushell/pull/3588",target:"_blank",rel:"noopener noreferrer"},No=e("errors and updated commands to engine-p"),jo=e(", improved some "),Io={href:"https://github.com/nushell/nushell/pull/3580",target:"_blank",rel:"noopener noreferrer"},qo=e("internal handling of "),Wo=o("code",null,"def",-1),zo=e(", "),To={href:"https://github.com/nushell/nushell/pull/3588",target:"_blank",rel:"noopener noreferrer"},Vo=e("clarified the "),Bo=o("code",null,"exec",-1),Eo=e(" help message"),Lo=e("sholderbach improved "),$o={href:"https://github.com/nushell/nushell/pull/3573",target:"_blank",rel:"noopener noreferrer"},So=o("code",null,"where",-1),Yo=e(" docs"),Ao=e("jt added "),Co={href:"https://github.com/nushell/nushell/pull/3562",target:"_blank",rel:"noopener noreferrer"},Fo=e("parsing for hex, binary, and octal numbers"),Jo=e("pka improved "),Po={href:"https://github.com/nushell/nushell/pull/3560",target:"_blank",rel:"noopener noreferrer"},Ro=e("territory in locale support for byte formatting"),Go=e("ahkrr fixed handling of "),Ho={href:"https://github.com/nushell/nushell/pull/3524",target:"_blank",rel:"noopener noreferrer"},Mo=e("# in filenames"),Oo=o("li",null,"jt, LovecraftianHorror, apatrushev, sholderbach, elferherrera, inet56 added fixes to the website and docs",-1),Do=o("li",null,"fdncred, efx, jt, and andrasio all added scripts and fixes to the scripts repo",-1),Ko=o("h1",{id:"looking-ahead",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#looking-ahead","aria-hidden":"true"},"#"),e(" Looking ahead")],-1),Qo=e("We're continuing to improve our dataframe support, and hope to be rolling it out a part of the default commands in the next release. Elfherrera has been "),Uo={href:"https://github.com/nushell/nushell/pull/3608",target:"_blank",rel:"noopener noreferrer"},Xo=e("hard at work improving the dataframe support to get it ready"),Zo=e(".");function et(ot,tt){const t=r("ExternalLinkIcon");return a(),i("div",null,[_,u,p,h(" more "),m,o("p",null,[f,o("a",g,[b,n(t)]),k,o("a",w,[v,n(t)]),y,x,N]),j,o("p",null,[I,o("a",q,[W,n(t)]),z,o("a",T,[V,n(t)]),B,o("a",E,[L,n(t)]),$,o("a",S,[Y,n(t)]),A,o("a",C,[F,n(t)]),J,o("a",P,[R,n(t)]),G]),o("p",null,[H,o("a",M,[O,n(t)]),D,o("a",K,[Q,n(t)]),U,X,Z]),ee,o("p",null,[oe,o("a",te,[ne,n(t)]),se,o("a",le,[re,n(t)]),ae]),ie,o("p",null,[he,o("a",de,[ce,n(t)]),_e]),ue,o("ul",null,[o("li",null,[pe,o("a",me,[fe,ge,n(t)])]),o("li",null,[be,o("a",ke,[we,ve,n(t)])]),o("li",null,[ye,o("a",xe,[Ne,je,n(t)])])]),Ie,o("ul",null,[o("li",null,[qe,o("a",We,[ze,Te,n(t)]),Ve,o("a",Be,[Ee,n(t)]),Le,o("a",$e,[Se,n(t)]),Ye,o("a",Ae,[Ce,n(t)])]),o("li",null,[Fe,o("a",Je,[Pe,n(t)])]),o("li",null,[Re,o("a",Ge,[He,n(t)])]),o("li",null,[Me,o("a",Oe,[De,n(t)])]),o("li",null,[Ke,o("a",Qe,[Ue,n(t)])]),o("li",null,[Xe,o("a",Ze,[eo,n(t)])]),o("li",null,[oo,o("a",to,[no,n(t)]),so,o("a",lo,[ro,n(t)])]),o("li",null,[ao,o("a",io,[ho,n(t)])]),o("li",null,[co,o("a",_o,[uo,n(t)]),po,o("a",mo,[fo,go,n(t)]),bo,o("a",ko,[wo,vo,n(t)])]),o("li",null,[yo,o("a",xo,[No,n(t)]),jo,o("a",Io,[qo,Wo,n(t)]),zo,o("a",To,[Vo,Bo,Eo,n(t)])]),o("li",null,[Lo,o("a",$o,[So,Yo,n(t)])]),o("li",null,[Ao,o("a",Co,[Fo,n(t)])]),o("li",null,[Jo,o("a",Po,[Ro,n(t)])]),o("li",null,[Go,o("a",Ho,[Mo,n(t)])]),Oo,Do]),Ko,o("p",null,[Qo,o("a",Uo,[Xo,n(t)]),Zo])])}const st=l(c,[["render",et],["__file","2021-06-22-nushell_0_33.html.vue"]]);export{st as default};
