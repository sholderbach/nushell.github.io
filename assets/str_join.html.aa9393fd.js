import{_ as n,z as r,A as o,X as a,C as e,D as t,a6 as i}from"./framework.3d018c9f.js";const p={},c={id:"frontmatter-title-for-strings",tabindex:"-1"},l=a("a",{class:"header-anchor",href:"#frontmatter-title-for-strings","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; str join (separator)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>separator</code>: optional separator to use when creating string</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Create a string from input</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;nu&#39;</span>, <span class="token string">&#39;shell&#39;</span><span class="token punctuation">]</span> <span class="token operator">|</span> str <span class="token function">join</span>
</code></pre></div><p>Create a string from input with a separator</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;nu&#39;</span>, <span class="token string">&#39;shell&#39;</span><span class="token punctuation">]</span> <span class="token operator">|</span> str <span class="token function">join</span> <span class="token string">&#39;-&#39;</span>
</code></pre></div>`,9);function u(s,g){return r(),o("div",null,[a("h1",c,[l,e(),a("code",null,t(s.$frontmatter.title),1),e(" for strings")]),a("div",d,t(s.$frontmatter.strings),1),h])}const m=n(p,[["render",u],["__file","str_join.html.vue"]]);export{m as default};
