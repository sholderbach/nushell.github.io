import{_ as r,p as n,q as i,Q as s,t,v as e,a1 as o}from"./framework-344bb0e4.js";const c={},l={id:"frontmatter-title-for-strings",tabindex:"-1"},p=s("a",{class:"header-anchor",href:"#frontmatter-title-for-strings","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=o(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; str starts-with (string) ...rest</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>string</code>: the string to match</li><li><code>...rest</code>: For a data structure input, check strings at the given cell paths, and replace with result</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Checks if input string starts with &#39;my&#39;</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;my_library.rb&#39;</span> <span class="token operator">|</span> str starts-with <span class="token string">&#39;my&#39;</span>
</code></pre></div><p>Checks if input string starts with &#39;my&#39;</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;Cargo.toml&#39;</span> <span class="token operator">|</span> str starts-with <span class="token string">&#39;Car&#39;</span>
</code></pre></div><p>Checks if input string starts with &#39;my&#39;</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;Cargo.toml&#39;</span> <span class="token operator">|</span> str starts-with <span class="token string">&#39;.toml&#39;</span>
</code></pre></div>`,11);function g(a,u){return n(),i("div",null,[s("h1",l,[p,t(),s("code",null,e(a.$frontmatter.title),1),t(" for strings")]),s("div",d,e(a.$frontmatter.strings),1),h])}const f=r(c,[["render",g],["__file","str_starts-with.html.vue"]]);export{f as default};
