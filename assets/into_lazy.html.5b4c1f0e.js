import{_ as t,z as o,A as r,X as a,C as s,D as e,a6 as c}from"./framework.3d018c9f.js";const p={},l={id:"frontmatter-title-for-lazyframe",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#frontmatter-title-for-lazyframe","aria-hidden":"true"},"#",-1),d={class:"command-title"},u=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; into lazy </code></p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Takes a dictionary and creates a lazy dataframe</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>a b<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> into lazy
</code></pre></div>`,5);function h(n,m){return o(),r("div",null,[a("h1",l,[i,s(),a("code",null,e(n.$frontmatter.title),1),s(" for lazyframe")]),a("div",d,e(n.$frontmatter.lazyframe),1),u])}const _=t(p,[["render",h],["__file","into_lazy.html.vue"]]);export{_ as default};
