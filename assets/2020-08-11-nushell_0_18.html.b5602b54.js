import{_ as r,z as s,A as a,X as e,C as n,T as o,a6 as l,Q as h}from"./framework.3d018c9f.js";const i={},u=e("h1",{id:"nushell-0-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nushell-0-18","aria-hidden":"true"},"#"),n(" Nushell 0.18")],-1),d=e("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),c=e("p",null,"Today, we're releasing 0.18 of Nu. The focus of this release was largely to polish what is already there, ensuring that internally parts work together better, are more consistent, and are easier to maintain. We've also added new commands for working with paths, URLs, strings, and lists.",-1),_=e("h1",{id:"where-to-get-it",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),n(" Where to get it")],-1),p={href:"https://github.com/nushell/nushell/releases/tag/0.18.1",target:"_blank",rel:"noopener noreferrer"},f={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"cargo install nu",-1),g=l('<p>If you want more goodies, you can install <code>cargo install nu --features=stable</code>.</p><p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><p><em>Please note:</em> as part of last minute changes, we had to bump the first release version of 0.18 to 0.18.1 instead of 0.18.0.</p><h1 id="what-s-new" tabindex="-1"><a class="header-anchor" href="#what-s-new" aria-hidden="true">#</a> What&#39;s New</h1><h2 id="command-improvements" tabindex="-1"><a class="header-anchor" href="#command-improvements" aria-hidden="true">#</a> Command improvements</h2>',5),b=e("strong",null,"New:",-1),w={href:"https://github.com/nushell/nushell/pull/2292",target:"_blank",rel:"noopener noreferrer"},k=e("code",null,"reduce",-1),y=e("strong",null,"New:",-1),v={href:"https://github.com/nushell/nushell/pull/2255",target:"_blank",rel:"noopener noreferrer"},x=e("code",null,"path basename",-1),N=e("code",null,"path extension",-1),j=e("code",null,"path expand",-1),T=e("strong",null,"New:",-1),z={href:"https://github.com/nushell/nushell/pull/2264",target:"_blank",rel:"noopener noreferrer"},L=e("code",null,"path type",-1),I=e("code",null,"path exists",-1),B=e("strong",null,"New:",-1),W={href:"https://github.com/nushell/nushell/pull/2262",target:"_blank",rel:"noopener noreferrer"},V=e("code",null,"str ltrim",-1),A=e("code",null,"str rtrim",-1),C=e("strong",null,"New:",-1),E={href:"https://github.com/nushell/nushell/pull/2269",target:"_blank",rel:"noopener noreferrer"},R=e("code",null,"str starts-with",-1),J=e("code",null,"str ends-with",-1),U=e("strong",null,"New:",-1),D={href:"https://github.com/nushell/nushell/pull/2274",target:"_blank",rel:"noopener noreferrer"},F=e("code",null,"url",-1),M={href:"https://github.com/nushell/nushell/pull/2320",target:"_blank",rel:"noopener noreferrer"},P={href:"https://github.com/nushell/nushell/pull/2314",target:"_blank",rel:"noopener noreferrer"},Q=e("code",null,"version",-1),S={href:"https://github.com/nushell/nushell/pull/2333",target:"_blank",rel:"noopener noreferrer"},X=e("code",null,"math stddev",-1),q=e("code",null,"math variance",-1),G={href:"https://github.com/nushell/nushell/pull/2310",target:"_blank",rel:"noopener noreferrer"},H=e("code",null,"do -i",-1),K={href:"https://github.com/nushell/nushell/pull/2309",target:"_blank",rel:"noopener noreferrer"},O=e("code",null,"to html",-1),Y={href:"https://github.com/nushell/nushell/pull/2308",target:"_blank",rel:"noopener noreferrer"},Z=e("code",null,"to html",-1),$={href:"https://github.com/nushell/nushell/pull/2273",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://github.com/nushell/nushell/pull/2238",target:"_blank",rel:"noopener noreferrer"},ne=e("code",null,"str to-datetime",-1),te={href:"https://github.com/nushell/nushell/pull/2303",target:"_blank",rel:"noopener noreferrer"},oe=e("code",null,"str join",-1),le={href:"https://github.com/nushell/nushell/pull/2289",target:"_blank",rel:"noopener noreferrer"},re=e("code",null,"histogram",-1),se={href:"https://github.com/nushell/nushell/pull/2300",target:"_blank",rel:"noopener noreferrer"},ae=e("li",null,[e("code",null,"ls -al"),n(" (and "),e("code",null,"ps -l"),n(") are now the preferred way of getting a full listing (JosephTLyons)")],-1),he=e("code",null,"insert",-1),ie={href:"https://github.com/nushell/nushell/pull/2265",target:"_blank",rel:"noopener noreferrer"},ue=e("h2",{id:"breaking-changes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#breaking-changes","aria-hidden":"true"},"#"),n(" Breaking changes")],-1),de=e("p",null,[n("The flags for --full in "),e("code",null,"ls"),n(" and "),e("code",null,"ps"),n(" has been changed to --long (-l) to better align with habits from other shells.")],-1),ce={href:"https://github.com/nushell/nushell/pull/2238",target:"_blank",rel:"noopener noreferrer"},_e=l('<h2 id="demo-site-jzaefferer-jonathandturner" tabindex="-1"><a class="header-anchor" href="#demo-site-jzaefferer-jonathandturner" aria-hidden="true">#</a> Demo site (jzaefferer, jonathandturner)</h2><p>There have been a number of improvements to the new wasm-based demo site, including new colors, command improvements, pivoting of long tables, and more.</p><h2 id="bugfixes-fdncred-kornelski-josephtlyons-andrasio-thegedge-jonathandturner-jzaefferer-warrenseine-coolshaurya" tabindex="-1"><a class="header-anchor" href="#bugfixes-fdncred-kornelski-josephtlyons-andrasio-thegedge-jonathandturner-jzaefferer-warrenseine-coolshaurya" aria-hidden="true">#</a> Bugfixes (fdncred, kornelski, JosephTLyons, andrasio, thegedge, jonathandturner, jzaefferer, warrenseine, coolshaurya)</h2><p>Fixed issues with different types of symlinks on Windows, Nu will now used the support app_dirs crate, lots of internal match logic cleanup, internal representation of data summaries got a cleanup, getting ready to add a winget package, the first wave of parser cleanups ahead of future completion work, cleaned up unnecessary extra build steps, new command examples, improvements to the new <code>path</code> command errors, fixed histogram example, and consistency improvements.</p><h1 id="looking-forward" tabindex="-1"><a class="header-anchor" href="#looking-forward" aria-hidden="true">#</a> Looking forward</h1>',5),pe={href:"https://github.com/nushell/rfcs/pull/3",target:"_blank",rel:"noopener noreferrer"};function fe(me,ge){const t=h("ExternalLinkIcon");return s(),a("div",null,[u,d,c,_,e("p",null,[n("Nu 0.18 is available as "),e("a",p,[n("pre-built binaries"),o(t)]),n(" or from "),e("a",f,[n("crates.io"),o(t)]),n(". If you have Rust installed you can install it using "),m,n(".")]),g,e("ul",null,[e("li",null,[b,n(),e("a",w,[k,n(" command"),o(t)]),n(" to reduce a list of values into a value (bailey-layzer)")]),e("li",null,[y,n(),e("a",v,[x,n(", "),N,n(", "),j,o(t)]),n(" for working with path values (mattyhall)")]),e("li",null,[T,n(),e("a",z,[L,n(" and "),I,o(t)]),n(" for more path-related functionality (mattyhall)")]),e("li",null,[B,n(),e("a",W,[V,n(" and "),A,o(t)]),n(" to trim off left-hand and right-hand characters (k-brk)")]),e("li",null,[C,n(),e("a",E,[R,n(" and "),J,o(t)]),n(" to check if a string begins or ends with a given substring (k-brk)")]),e("li",null,[U,n(" the "),e("a",D,[F,n(" subcommands"),o(t)]),n(" for dealing with URLs (mattyhall)")]),e("li",null,[n("The history file path is "),e("a",M,[n("now configurable"),o(t)]),n(" (Amanita-muscaria)")]),e("li",null,[n("The startup banner can now be "),e("a",P,[n("turned off"),o(t)]),n(" (avranju)")]),e("li",null,[Q,n(" now contains the "),e("a",S,[n("features"),o(t)]),n(" that Nu was built with (andrasio)")]),e("li",null,[X,n(" and "),q,n(" can now "),e("a",G,[n("sample the input"),o(t)]),n(" (andrasio)")]),e("li",null,[H,n(" will also "),e("a",K,[n("ignore stderr output"),o(t)]),n(" from external commands (jonathandturner)")]),e("li",null,[O,n(" now has "),e("a",Y,[n("many themes to choose from"),o(t)]),n(" (fdncred)")]),e("li",null,[Z,n(" also now has "),e("a",$,[n("list output"),o(t)]),n(" (coolshaurya)")]),e("li",null,[n("More of the line editor settings are "),e("a",ee,[n("now configurable"),o(t)]),n(" (fdncred)")]),e("li",null,[ne,n(" can now "),e("a",te,[n("parse many more date formats"),o(t)]),n(" (nmandery)")]),e("li",null,[oe,n(" now optionally takes "),e("a",le,[n("a separator value"),o(t)]),n(" (coolshaurya)")]),e("li",null,[re,n(" can now "),e("a",se,[n("work with simple values"),o(t)]),n(" (andrasio)")]),ae,e("li",null,[he,n(" now "),e("a",ie,[n("takes a block"),o(t)]),n(" to do the work of inserting values (coolshaurya)")])]),ue,de,e("p",null,[n("Line editor config settings have "),e("a",ce,[n("moved to their own section"),o(t)]),n(".")]),_e,e("p",null,[n("We're nearly to the first birthday for Nu! In the near future, we'll continue to improve completions, work on a possible new "),e("a",pe,[n("data frames"),o(t)]),n(" implementation, continuing to push the wasm implementation futher, and more.")])])}const we=r(i,[["render",fe],["__file","2020-08-11-nushell_0_18.html.vue"]]);export{we as default};
