import{_ as o,p as n,q as r,Q as e,t as s,v as t,a1 as l}from"./framework-344bb0e4.js";const c={},p={id:"frontmatter-title-for-filesystem",tabindex:"-1"},i=e("a",{class:"header-anchor",href:"#frontmatter-title-for-filesystem","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=l(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; glob (glob) --depth --no-dir --no-file --no-symlink</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>glob</code>: the glob expression</li><li><code>--depth {int}</code>: directory depth to search</li><li><code>--no-dir</code> <code>(-D)</code>: Whether to filter out directories from the returned paths</li><li><code>--no-file</code> <code>(-F)</code>: Whether to filter out files from the returned paths</li><li><code>--no-symlink</code> <code>(-S)</code>: Whether to filter out symlinks from the returned paths</li></ul><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><p>For more glob pattern help, please refer to https://github.com/olson-sean-k/wax</p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Search for *.rs files</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> glob *.rs
</code></pre></div><p>Search for *.rs and *.toml files recursively up to 2 folders deep</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> glob **/*.<span class="token punctuation">{</span>rs,toml<span class="token punctuation">}</span> <span class="token parameter variable">--depth</span> <span class="token number">2</span>
</code></pre></div><p>Search for files and folders that begin with uppercase C and lowercase c</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> glob <span class="token string">&quot;[Cc]*&quot;</span>
</code></pre></div><p>Search for files and folders like abc or xyz substituting a character for ?</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> glob <span class="token string">&quot;{a?c,x?z}&quot;</span>
</code></pre></div><p>A case-insensitive search for files and folders that begin with c</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> glob <span class="token string">&quot;(?i)c*&quot;</span>
</code></pre></div><p>Search for files for folders that do not begin with c, C, b, M, or s</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> glob <span class="token string">&quot;[!cCbMs]*&quot;</span>
</code></pre></div><p>Search for files or folders with 3 a&#39;s in a row in the name</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> glob <span class="token operator">&lt;</span>a*:<span class="token operator"><span class="token file-descriptor important">3</span>&gt;</span>
</code></pre></div><p>Search for files or folders with only a, b, c, or d in the file name between 1 and 10 times</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> glob <span class="token operator">&lt;</span><span class="token punctuation">[</span>a-d<span class="token punctuation">]</span>:1,1<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span>
</code></pre></div><p>Search for folders that begin with an uppercase ASCII letter, ignoring files and symlinks</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> glob <span class="token string">&quot;[A-Z]*&quot;</span> --no-file --no-symlink
</code></pre></div>`,25);function g(a,u){return n(),r("div",null,[e("h1",p,[i,s(),e("code",null,t(a.$frontmatter.title),1),s(" for filesystem")]),e("div",d,t(a.$frontmatter.filesystem),1),h])}const b=o(c,[["render",g],["__file","glob.html.vue"]]);export{b as default};
