import{_ as l,M as s,p as a,q as h,R as i,Q as t,t as e,N as o,a1 as r}from"./framework-344bb0e4.js";const u="/assets/0_75_save_progress-f9c93bfd.png",c={},d=t("h1",{id:"nushell-0-75",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell-0-75","aria-hidden":"true"},"#"),e(" Nushell 0.75")],-1),p=t("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your command line. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful command line pipelines.",-1),_=t("p",null,"Today, we're releasing version 0.75 of Nu. This release extends our unicode support, renames some important HTTP-related commands, and improves our module system. It also contains a good amount of polish and refactoring behind the scenes.",-1),g=t("h1",{id:"where-to-get-it",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),m={href:"https://github.com/nushell/nushell/releases/tag/0.75.0",target:"_blank",rel:"noopener noreferrer"},f={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},b=t("code",null,"cargo install nu",-1),k=t("p",null,[e("NOTE: The optional dataframe functionality is available by "),t("code",null,"cargo install nu --features=dataframe"),e(".")],-1),w=t("p",null,[e("As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use "),t("code",null,"cargo install nu_plugin_<plugin name>"),e(".")],-1),x=t("h1",{id:"themes-of-this-release-new-features",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#themes-of-this-release-new-features","aria-hidden":"true"},"#"),e(" Themes of this release / New features")],-1),y={id:"changed-unicode-escapes-in-strings-bobhy",tabindex:"-1"},v=t("a",{class:"header-anchor",href:"#changed-unicode-escapes-in-strings-bobhy","aria-hidden":"true"},"#",-1),T={href:"https://github.com/nushell/nushell/pull/7883",target:"_blank",rel:"noopener noreferrer"},A=r(`<div class="custom-container warning"><p class="custom-container-title">WARNING</p><p><strong>Breaking Change</strong>: You need to update escapes like <code>&quot;\\u0043&quot;</code> to <code>&quot;\\u{0043}&quot;</code></p></div><p>New format:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>〉echo <span class="token string">&quot;AB\\u{43}\\u{044}&quot;</span>
ABCD
〉echo <span class="token string">&quot;Gabriel, blow your \\u{1f3BA}&quot;</span>
Gabriel, blow your 🎺
</code></pre></div><p>Instead of:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>〉echo <span class="token string">&quot;AB<span class="token entity" title="\\u0043">\\u0043</span>&quot;</span>
ABC
</code></pre></div><p>This format allows you to insert any Unicode code point into a string by specifying its value as 1 through 6 hex digits (with or without leading zeros, upper or lower case). The maximum value is <code>\\u{10ffff}</code>, which is the largest Unicode code point defined.</p><p>We&#39;ve simply dropped support for the old format since we&#39;re pre-1.0 and didn&#39;t want to carry forward redundant syntax. You will have to change any unicode escapes in your scripts to the new format.</p>`,7),B=t("em",null,"Why change?",-1),N={href:"https://unicodebook.readthedocs.io/unicode_encodings.html#surrogates",target:"_blank",rel:"noopener noreferrer"},I=t("p",null,"Why this change? The new format allows you to specify any Unicode code point with a single, predictable syntax. Rust and ECMAScript 6 support the same syntax. (Full disclosure: C++, Python and Java don't.)",-1),C={id:"g-grapheme-cluster-flags-for-str-length-str-substring-str-index-of-split-words-and-split-chars-webbedspace",tabindex:"-1"},q=t("a",{class:"header-anchor",href:"#g-grapheme-cluster-flags-for-str-length-str-substring-str-index-of-split-words-and-split-chars-webbedspace","aria-hidden":"true"},"#",-1),F=t("code",null,"-g",-1),z=t("code",null,"str length",-1),S=t("code",null,"str substring",-1),R=t("code",null,"str index-of",-1),U=t("code",null,"split words",-1),E=t("code",null,"split chars",-1),D={href:"https://github.com/nushell/nushell/pull/7752",target:"_blank",rel:"noopener noreferrer"},j=r(`<p>As you know, <code>str length</code>, <code>str substring</code>, <code>str index-of</code> and <code>split words</code> measure the length of strings and substrings in UTF-8 bytes, which is often very unintuitive - all non-ASCII characters are of length 2 or more, and splitting a non-ASCII character can create garbage characters as a result. A much better alternative is to measure the length in <em>extended grapheme clusters</em>. In Unicode, a &quot;grapheme cluster&quot; tries to map as closely as possible to a single visible character. This means, among many other things:</p><ul><li>Non-ASCII characters, such as <code>ん</code>, are considered single units of length 1, no matter how many UTF-8 bytes they use.</li><li>Combined characters, such as <code>e</code> and <code>◌́ </code> being combined to produce <code>é</code>, are considered single units of length 1.</li><li>Emojis, including combined emojis such as 🇯🇵, which is made of the 🇯 and 🇵 emojis plus a zero-width joiner, are considered single units of length 1. (This is a property of &quot;extended&quot; grapheme clusters.)</li><li><code>&quot;\\r\\n&quot;</code> is considered a single unit of length 1.</li></ul><p>The new <code>--graphemes</code>/<code>-g</code> flag can be used with <code>str length</code>, <code>str substring</code>, <code>str index-of</code> and <code>split words</code> to enable these length/indexing measurements:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>〉&#39;🇯🇵ほげ ふが ぴよ&#39;   | str substring 4..6 -g
ふが
〉&#39;🇯🇵ほげ ふが ぴよ&#39;   | str length -g
9
〉&#39;🇯🇵ほげ ふが ぴよ&#39;   | str index-of &#39;ふが&#39; -g
4
</code></pre></div><p>In addition, the flag has been added to <code>split chars</code>. Notably, this command splits on Unicode code points rather than UTF-8 bytes, so it doesn&#39;t have the issue of turning non-ASCII characters into garbage characters. However, combining emoji and combining characters do not correspond to single code points, and are split by <code>split chars</code>. The <code>-g</code> flag keeps those characters intact:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>〉&#39;🇯🇵ほげ&#39; | split chars -g | to nuon
[🇯🇵, ほ, げ]
</code></pre></div><p>These commands also have <code>--utf-8-bytes</code>/<code>-b</code> flags which enable the legacy behavior (and <code>split chars</code> has <code>--code-points</code>/<code>-c</code>). These currently <em>do not do anything</em> and need not strictly be used, since UTF-8 byte lengths are still the default behaviour. However, if this default someday changes, then these flags will guarantee that the legacy behaviour is used.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>It is currently being debated whether or not grapheme clusters should be used as the default string length measurement in Nushell (making the <code>-g</code> flag the default behaviour for these commands), due to their intuitiveness, consistency across non-Latin scripts, and better correspondence to the length of strings displayed in the terminal (after stripping ANSI codes). Currently, the Nushell developers are uncertain what the long-term impact of such a change would be, whether existing scripts would be non-trivially harmed by it, or whether it would hinder interoperability with external programs. If you have any personal insight or opinion about this change, or about which behaviour you&#39;d prefer not to require a flag, your input is desired!</p></div>`,8),P={id:"new-enumerate-command-jt",tabindex:"-1"},V=t("a",{class:"header-anchor",href:"#new-enumerate-command-jt","aria-hidden":"true"},"#",-1),W=t("code",null,"enumerate",-1),H={href:"https://github.com/nushell/nushell/pull/7871",target:"_blank",rel:"noopener noreferrer"},L=r(`<p>A new <code>enumerate</code> command will enumerate the input, and add an index and item record for each item. The index is the number of the item in the input stream, and item is the original value of the item.</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; ls | enumerate | get 14
╭───────┬────────────────────────────╮
│ index │ 14                         │
│       │ ╭──────────┬─────────────╮ │
│ item  │ │ name     │ crates      │ │
│       │ │ type     │ dir         │ │
│       │ │ size     │ 832 B       │ │
│       │ │ modified │ 2 weeks ago │ │
│       │ ╰──────────┴─────────────╯ │
╰───────┴────────────────────────────╯
</code></pre></div><p>Rather than relying on the <code>--numbered</code> flags of commands like <code>each</code>, with the <code>enumerate</code> command we take more modular and composable approach than hard-coding flags to our commands. (Note: The <code>--numbered</code> flags have not been removed yet.)</p>`,3),X={id:"breaking-changes-to-the-web-related-commands-kazuki-ya-vincenzocarlino",tabindex:"-1"},J=t("a",{class:"header-anchor",href:"#breaking-changes-to-the-web-related-commands-kazuki-ya-vincenzocarlino","aria-hidden":"true"},"#",-1),G={href:"https://github.com/nushell/nushell/pull/7796",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/nushell/nushell/pull/7702",target:"_blank",rel:"noopener noreferrer"},M=r("<p>We decided to move some of the important command for interacting with HTTP under their own <code>http</code> subcommands for better discoverability. The common <code>fetch</code> command is now <code>http get</code>.</p><table><thead><tr><th>Old name</th><th>New name beginning with <code>0.75</code></th></tr></thead><tbody><tr><td><code>fetch</code></td><td><code>http get</code></td></tr><tr><td><code>post</code></td><td><code>http post</code></td></tr><tr><td><code>to url</code></td><td><code>url build-query</code></td></tr></tbody></table>",2),Y={id:"main-command-exported-from-module-defines-top-level-module-command-kubouch",tabindex:"-1"},O=t("a",{class:"header-anchor",href:"#main-command-exported-from-module-defines-top-level-module-command-kubouch","aria-hidden":"true"},"#",-1),$=t("code",null,"main",-1),Q={href:"https://github.com/nushell/nushell/pull/7764",target:"_blank",rel:"noopener noreferrer"},Z=r(`<p>Defining and exporting a <code>main</code>command from a module allows creating a command with the same name as the module. Consider this example:</p><div class="language-text" data-ext="text"><pre class="language-text"><code># command.nu
export def main [] { &#39;This is a command&#39; }

export def subcommand [] { &#39;This is a subcommand&#39; }
</code></pre></div><p>Then:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; use command.nu

&gt; command
This is a command

&gt; command subcommand
This is a subcommand
</code></pre></div><p>The same thing works <code>overlay use</code> as well. Note that the <code>main</code> command continues to work the same way as before when running a script:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; nu command.nu
This is a command
</code></pre></div>`,6),ee={href:"https://github.com/nushell/nushell/pull/7830",target:"_blank",rel:"noopener noreferrer"},te=t("p",null,"Before:",-1),ne=t("div",{class:"language-text","data-ext":"text"},[t("pre",{class:"language-text"},[t("code",null,`# cargo.nu

export extern cargo [--version, --color: string@cargo-color-complete]

export extern \`cargo check\` [--quiet]

def cargo-color-complete [] {
    [ auto, always, never ]
}
`)])],-1),oe=t("p",null,"After:",-1),re=t("div",{class:"language-text","data-ext":"text"},[t("pre",{class:"language-text"},[t("code",null,`# cargo.nu

export extern main [--version, --color: string@cargo-color-complete]

export extern check [--quiet]

def cargo-color-complete [] {
    [ auto, always, never ]
}
`)])],-1),le=t("p",null,"It is also a stepping stone towards being able to handle directories which in turn is a stepping stone towards having proper Nushell packages.",-1),se={id:"progress-bar-for-save-command-xoffio",tabindex:"-1"},ae=t("a",{class:"header-anchor",href:"#progress-bar-for-save-command-xoffio","aria-hidden":"true"},"#",-1),he=t("code",null,"save",-1),ie={href:"https://github.com/nushell/nushell/pull/7661",target:"_blank",rel:"noopener noreferrer"},ue=t("p",null,[e("To watch the progress when saving large files you can now pass the "),t("code",null,"--progress"),e(" flag to "),t("code",null,"save"),e(". It gives information about the throughput and an interactive progress bar if available.")],-1),ce=t("p",null,[t("img",{src:u,alt:"Progress for saving a file"})],-1),de=t("h1",{id:"breaking-changes",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#breaking-changes","aria-hidden":"true"},"#"),e(" Breaking changes")],-1),pe=t("code",null,"\\u{X...}",-1),_e=t("code",null,"\\uXXXX",-1),ge={href:"https://github.com/nushell/nushell/pull/7883",target:"_blank",rel:"noopener noreferrer"},me=t("code",null,"to url",-1),fe=t("code",null,"url build-query",-1),be=t("code",null,"url",-1),ke={href:"https://github.com/nushell/nushell/pull/7702",target:"_blank",rel:"noopener noreferrer"},we=t("code",null,"fetch",-1),xe=t("code",null,"http get",-1),ye={href:"https://github.com/nushell/nushell/pull/7796",target:"_blank",rel:"noopener noreferrer"},ve=t("code",null,"post",-1),Te=t("code",null,"http post",-1),Ae={href:"https://github.com/nushell/nushell/pull/7796",target:"_blank",rel:"noopener noreferrer"},Be=t("code",null,"cmd.exe",-1),Ne={href:"https://github.com/nushell/nushell/pull/7740",target:"_blank",rel:"noopener noreferrer"},Ie=t("code",null,"parse -r",-1),Ce={href:"https://github.com/nushell/nushell/pull/7897",target:"_blank",rel:"noopener noreferrer"},qe=t("code",null,"last",-1),Fe=t("code",null,"skip",-1),ze=t("code",null,"drop",-1),Se=t("code",null,"take until",-1),Re=t("code",null,"take while",-1),Ue=t("code",null,"skip until",-1),Ee=t("code",null,"skip while",-1),De=t("code",null,"where",-1),je=t("code",null,"reverse",-1),Pe=t("code",null,"shuffle",-1),Ve=t("code",null,"append",-1),We=t("code",null,"prepend",-1),He=t("code",null,"sort-by",-1),Le={href:"https://github.com/nushell/nushell/pull/7623",target:"_blank",rel:"noopener noreferrer"},Xe=t("code",null,"to csv",-1),Je=t("code",null,"to tsv",-1),Ge={href:"https://github.com/nushell/nushell/pull/7850",target:"_blank",rel:"noopener noreferrer"},Ke=t("h1",{id:"full-changelog",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#full-changelog","aria-hidden":"true"},"#"),e(" Full changelog")],-1),Me=t("h2",{id:"nushell",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell","aria-hidden":"true"},"#"),e(" Nushell")],-1),Ye={href:"https://github.com/nushell/nushell/pull/7927",target:"_blank",rel:"noopener noreferrer"},Oe=t("code",null,"where -b",-1),$e={href:"https://github.com/nushell/nushell/pull/7894",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://github.com/nushell/nushell/pull/7893",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://github.com/nushell/nushell/pull/7830",target:"_blank",rel:"noopener noreferrer"},et={href:"https://github.com/nushell/nushell/pull/7764",target:"_blank",rel:"noopener noreferrer"},tt={href:"https://github.com/nushell/nushell/pull/7720",target:"_blank",rel:"noopener noreferrer"},nt={href:"https://github.com/nushell/nushell/pull/7926",target:"_blank",rel:"noopener noreferrer"},ot={href:"https://github.com/nushell/nushell/pull/7866",target:"_blank",rel:"noopener noreferrer"},rt={href:"https://github.com/nushell/nushell/pull/7852",target:"_blank",rel:"noopener noreferrer"},lt={href:"https://github.com/nushell/nushell/pull/7851",target:"_blank",rel:"noopener noreferrer"},st={href:"https://github.com/nushell/nushell/pull/7831",target:"_blank",rel:"noopener noreferrer"},at={href:"https://github.com/nushell/nushell/pull/7802",target:"_blank",rel:"noopener noreferrer"},ht={href:"https://github.com/nushell/nushell/pull/7772",target:"_blank",rel:"noopener noreferrer"},it={href:"https://github.com/nushell/nushell/pull/7771",target:"_blank",rel:"noopener noreferrer"},ut={href:"https://github.com/nushell/nushell/pull/7745",target:"_blank",rel:"noopener noreferrer"},ct={href:"https://github.com/nushell/nushell/pull/7739",target:"_blank",rel:"noopener noreferrer"},dt={href:"https://github.com/nushell/nushell/pull/7726",target:"_blank",rel:"noopener noreferrer"},pt={href:"https://github.com/nushell/nushell/pull/7918",target:"_blank",rel:"noopener noreferrer"},_t=t("code",null,"reedline",-1),gt=t("code",null,"0.15",-1),mt={href:"https://github.com/nushell/nushell/pull/7916",target:"_blank",rel:"noopener noreferrer"},ft={href:"https://github.com/nushell/nushell/pull/7914",target:"_blank",rel:"noopener noreferrer"},bt=t("code",null,"trash",-1),kt=t("code",null,"3.0.1",-1),wt={href:"https://github.com/nushell/nushell/pull/7906",target:"_blank",rel:"noopener noreferrer"},xt={href:"https://github.com/nushell/nushell/pull/7905",target:"_blank",rel:"noopener noreferrer"},yt=t("code",null,"nu-test-support",-1),vt=t("code",null,"nu-table",-1),Tt={href:"https://github.com/nushell/nushell/pull/7903",target:"_blank",rel:"noopener noreferrer"},At={href:"https://github.com/nushell/nushell/pull/7902",target:"_blank",rel:"noopener noreferrer"},Bt=t("code",null,"0.75",-1),Nt={href:"https://github.com/nushell/nushell/pull/7721",target:"_blank",rel:"noopener noreferrer"},It=t("code",null,"0.74.1",-1),Ct={href:"https://github.com/nushell/nushell/pull/7911",target:"_blank",rel:"noopener noreferrer"},qt={href:"https://github.com/nushell/nushell/pull/7910",target:"_blank",rel:"noopener noreferrer"},Ft={href:"https://github.com/nushell/nushell/pull/7909",target:"_blank",rel:"noopener noreferrer"},zt={href:"https://github.com/nushell/nushell/pull/7908",target:"_blank",rel:"noopener noreferrer"},St={href:"https://github.com/nushell/nushell/pull/7907",target:"_blank",rel:"noopener noreferrer"},Rt={href:"https://github.com/nushell/nushell/pull/7840",target:"_blank",rel:"noopener noreferrer"},Ut={href:"https://github.com/nushell/nushell/pull/7839",target:"_blank",rel:"noopener noreferrer"},Et={href:"https://github.com/nushell/nushell/pull/7838",target:"_blank",rel:"noopener noreferrer"},Dt={href:"https://github.com/nushell/nushell/pull/7837",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://github.com/nushell/nushell/pull/7836",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://github.com/nushell/nushell/pull/7835",target:"_blank",rel:"noopener noreferrer"},Vt={href:"https://github.com/nushell/nushell/pull/7833",target:"_blank",rel:"noopener noreferrer"},Wt={href:"https://github.com/nushell/nushell/pull/7807",target:"_blank",rel:"noopener noreferrer"},Ht={href:"https://github.com/nushell/nushell/pull/7806",target:"_blank",rel:"noopener noreferrer"},Lt={href:"https://github.com/nushell/nushell/pull/7805",target:"_blank",rel:"noopener noreferrer"},Xt={href:"https://github.com/nushell/nushell/pull/7770",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://github.com/nushell/nushell/pull/7769",target:"_blank",rel:"noopener noreferrer"},Gt={href:"https://github.com/nushell/nushell/pull/7768",target:"_blank",rel:"noopener noreferrer"},Kt={href:"https://github.com/nushell/nushell/pull/7765",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://github.com/nushell/nushell/pull/7734",target:"_blank",rel:"noopener noreferrer"},Yt={href:"https://github.com/nushell/nushell/pull/7732",target:"_blank",rel:"noopener noreferrer"},Ot={href:"https://github.com/nushell/nushell/pull/7731",target:"_blank",rel:"noopener noreferrer"},$t={href:"https://github.com/nushell/nushell/pull/7904",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://github.com/nushell/nushell/pull/7871",target:"_blank",rel:"noopener noreferrer"},Zt={href:"https://github.com/nushell/nushell/pull/7897",target:"_blank",rel:"noopener noreferrer"},en=t("code",null,"parse -r",-1),tn={href:"https://github.com/nushell/nushell/pull/7789",target:"_blank",rel:"noopener noreferrer"},nn=t("code",null,"find",-1),on=t("code",null,"Value::String",-1),rn={href:"https://github.com/nushell/nushell/pull/7781",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://github.com/nushell/nushell/pull/7896",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://github.com/nushell/nushell/pull/7888",target:"_blank",rel:"noopener noreferrer"},an=t("code",null,"input_handler::operate",-1),hn={href:"https://github.com/nushell/nushell/pull/7884",target:"_blank",rel:"noopener noreferrer"},un=t("code",null,"do",-1),cn=t("code",null,"complete",-1),dn={href:"https://github.com/nushell/nushell/pull/7856",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://github.com/nushell/nushell/pull/7848",target:"_blank",rel:"noopener noreferrer"},_n={href:"https://github.com/nushell/nushell/pull/7808",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://github.com/nushell/nushell/pull/7743",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://github.com/nushell/nushell/pull/7892",target:"_blank",rel:"noopener noreferrer"},fn={href:"https://github.com/nushell/nushell/pull/7868",target:"_blank",rel:"noopener noreferrer"},bn=t("code",null,"gather_commandline_args",-1),kn={href:"https://github.com/nushell/nushell/pull/7815",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://github.com/nushell/nushell/pull/7813",target:"_blank",rel:"noopener noreferrer"},xn=t("code",null,"match",-1),yn={href:"https://github.com/nushell/nushell/pull/7812",target:"_blank",rel:"noopener noreferrer"},vn=t("code",null,"PWD",-1),Tn=t("code",null,"current_work_dir",-1),An={href:"https://github.com/nushell/nushell/pull/7804",target:"_blank",rel:"noopener noreferrer"},Bn=t("code",null,"nu-cli/src/eval_file.rs",-1),Nn={href:"https://github.com/nushell/nushell/pull/7803",target:"_blank",rel:"noopener noreferrer"},In={href:"https://github.com/nushell/nushell/pull/7801",target:"_blank",rel:"noopener noreferrer"},Cn=t("code",null,"src/main.rs",-1),qn={href:"https://github.com/nushell/nushell/pull/7883",target:"_blank",rel:"noopener noreferrer"},Fn={href:"https://github.com/nushell/nushell/pull/7879",target:"_blank",rel:"noopener noreferrer"},zn={href:"https://github.com/nushell/nushell/pull/7877",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://github.com/nushell/nushell/pull/7876",target:"_blank",rel:"noopener noreferrer"},Rn=t("code",null,"cd.rs",-1),Un={href:"https://github.com/nushell/nushell/pull/7875",target:"_blank",rel:"noopener noreferrer"},En={href:"https://github.com/nushell/nushell/pull/7857",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://github.com/nushell/nushell/pull/7740",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://github.com/nushell/nushell/pull/7722",target:"_blank",rel:"noopener noreferrer"},Pn=t("code",null,"cargo bench",-1),Vn={href:"https://github.com/nushell/nushell/pull/7861",target:"_blank",rel:"noopener noreferrer"},Wn=t("code",null,"table -e",-1),Hn={href:"https://github.com/nushell/nushell/pull/7778",target:"_blank",rel:"noopener noreferrer"},Ln=t("code",null,"table -e",-1),Xn={href:"https://github.com/nushell/nushell/pull/7859",target:"_blank",rel:"noopener noreferrer"},Jn=t("code",null,"do",-1),Gn={href:"https://github.com/nushell/nushell/pull/7850",target:"_blank",rel:"noopener noreferrer"},Kn={href:"https://github.com/nushell/nushell/pull/7751",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://github.com/nushell/nushell/pull/7834",target:"_blank",rel:"noopener noreferrer"},Yn={href:"https://github.com/nushell/nushell/pull/7824",target:"_blank",rel:"noopener noreferrer"},On={href:"https://github.com/nushell/nushell/pull/7823",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://github.com/nushell/nushell/pull/7811",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://github.com/nushell/nushell/pull/7798",target:"_blank",rel:"noopener noreferrer"},Zn=t("code",null,"help <cmd>",-1),eo={href:"https://github.com/nushell/nushell/pull/7776",target:"_blank",rel:"noopener noreferrer"},to=t("code",null,"benchmark",-1),no={href:"https://github.com/nushell/nushell/pull/7752",target:"_blank",rel:"noopener noreferrer"},oo=t("code",null,"str length",-1),ro=t("code",null,"str substring",-1),lo=t("code",null,"str index-of",-1),so=t("code",null,"split words",-1),ao=t("code",null,"split chars",-1),ho={href:"https://github.com/nushell/nushell/pull/7738",target:"_blank",rel:"noopener noreferrer"},io=t("code",null,"encode",-1),uo=t("code",null,"-i",-1),co=t("code",null,"--ignore-errors",-1),po={href:"https://github.com/nushell/nushell/pull/7796",target:"_blank",rel:"noopener noreferrer"},_o=t("code",null,"fetch",-1),go=t("code",null,"http get",-1),mo=t("code",null,"post",-1),fo=t("code",null,"http post",-1),bo={href:"https://github.com/nushell/nushell/pull/7785",target:"_blank",rel:"noopener noreferrer"},ko={href:"https://github.com/nushell/nushell/pull/7784",target:"_blank",rel:"noopener noreferrer"},wo=t("code",null,"const in pipeline",-1),xo=t("code",null,"const builtin var",-1),yo={href:"https://github.com/nushell/nushell/pull/7759",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://github.com/nushell/nushell/pull/7779",target:"_blank",rel:"noopener noreferrer"},To={href:"https://github.com/nushell/nushell/pull/7756",target:"_blank",rel:"noopener noreferrer"},Ao={href:"https://github.com/nushell/nushell/pull/7775",target:"_blank",rel:"noopener noreferrer"},Bo={href:"https://github.com/nushell/nushell/pull/7773",target:"_blank",rel:"noopener noreferrer"},No={href:"https://github.com/nushell/nushell/pull/7723",target:"_blank",rel:"noopener noreferrer"},Io=t("code",null,"explore",-1),Co={href:"https://github.com/nushell/nushell/pull/7755",target:"_blank",rel:"noopener noreferrer"},qo={href:"https://github.com/nushell/nushell/pull/7737",target:"_blank",rel:"noopener noreferrer"},Fo={href:"https://github.com/nushell/nushell/pull/7736",target:"_blank",rel:"noopener noreferrer"},zo=t("h2",{id:"extension",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#extension","aria-hidden":"true"},"#"),e(" Extension")],-1),So={href:"https://github.com/nushell/vscode-nushell-lang/pull/75",target:"_blank",rel:"noopener noreferrer"},Ro={href:"https://github.com/nushell/vscode-nushell-lang/pull/74",target:"_blank",rel:"noopener noreferrer"},Uo={href:"https://github.com/nushell/vscode-nushell-lang/pull/73",target:"_blank",rel:"noopener noreferrer"},Eo=t("h2",{id:"documentation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),e(" Documentation")],-1),Do={href:"https://github.com/nushell/nushell.github.io/pull/757",target:"_blank",rel:"noopener noreferrer"},jo={href:"https://github.com/nushell/nushell.github.io/pull/754",target:"_blank",rel:"noopener noreferrer"},Po={href:"https://github.com/nushell/nushell.github.io/pull/753",target:"_blank",rel:"noopener noreferrer"},Vo={href:"https://github.com/nushell/nushell.github.io/pull/756",target:"_blank",rel:"noopener noreferrer"},Wo={href:"https://github.com/nushell/nushell.github.io/pull/755",target:"_blank",rel:"noopener noreferrer"},Ho={href:"https://github.com/nushell/nushell.github.io/pull/752",target:"_blank",rel:"noopener noreferrer"},Lo={href:"https://github.com/nushell/nushell.github.io/pull/751",target:"_blank",rel:"noopener noreferrer"},Xo={href:"https://github.com/nushell/nushell.github.io/pull/747",target:"_blank",rel:"noopener noreferrer"},Jo={href:"https://github.com/nushell/nushell.github.io/pull/745",target:"_blank",rel:"noopener noreferrer"},Go={href:"https://github.com/nushell/nushell.github.io/pull/744",target:"_blank",rel:"noopener noreferrer"},Ko={href:"https://github.com/nushell/nushell.github.io/pull/743",target:"_blank",rel:"noopener noreferrer"},Mo={href:"https://github.com/nushell/nushell.github.io/pull/740",target:"_blank",rel:"noopener noreferrer"},Yo={href:"https://github.com/nushell/nushell.github.io/pull/738",target:"_blank",rel:"noopener noreferrer"},Oo={href:"https://github.com/nushell/nushell.github.io/pull/736",target:"_blank",rel:"noopener noreferrer"},$o={href:"https://github.com/nushell/nushell.github.io/pull/667",target:"_blank",rel:"noopener noreferrer"},Qo=t("h2",{id:"nu-scripts",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nu-scripts","aria-hidden":"true"},"#"),e(" Nu_Scripts")],-1),Zo={href:"https://github.com/nushell/nu_scripts/pull/367",target:"_blank",rel:"noopener noreferrer"},er={href:"https://github.com/nushell/nu_scripts/pull/365",target:"_blank",rel:"noopener noreferrer"},tr={href:"https://github.com/nushell/nu_scripts/pull/364",target:"_blank",rel:"noopener noreferrer"},nr=t("code",null,"do",-1),or={href:"https://github.com/nushell/nu_scripts/pull/351",target:"_blank",rel:"noopener noreferrer"},rr={href:"https://github.com/nushell/nu_scripts/pull/349",target:"_blank",rel:"noopener noreferrer"},lr={href:"https://github.com/nushell/nu_scripts/pull/348",target:"_blank",rel:"noopener noreferrer"},sr={href:"https://github.com/nushell/nu_scripts/pull/342",target:"_blank",rel:"noopener noreferrer"},ar={href:"https://github.com/nushell/nu_scripts/pull/363",target:"_blank",rel:"noopener noreferrer"},hr={href:"https://github.com/nushell/nu_scripts/pull/362",target:"_blank",rel:"noopener noreferrer"},ir=t("code",null,"--force-with-lease",-1),ur={href:"https://github.com/nushell/nu_scripts/pull/361",target:"_blank",rel:"noopener noreferrer"},cr={href:"https://github.com/nushell/nu_scripts/pull/360",target:"_blank",rel:"noopener noreferrer"},dr={href:"https://github.com/nushell/nu_scripts/pull/359",target:"_blank",rel:"noopener noreferrer"},pr={href:"https://github.com/nushell/nu_scripts/pull/358",target:"_blank",rel:"noopener noreferrer"},_r={href:"https://github.com/nushell/nu_scripts/pull/355",target:"_blank",rel:"noopener noreferrer"},gr={href:"https://github.com/nushell/nu_scripts/pull/357",target:"_blank",rel:"noopener noreferrer"},mr={href:"https://github.com/nushell/nu_scripts/pull/356",target:"_blank",rel:"noopener noreferrer"},fr=t("code",null,"git cherry-pick",-1),br={href:"https://github.com/nushell/nu_scripts/pull/354",target:"_blank",rel:"noopener noreferrer"},kr={href:"https://github.com/nushell/nu_scripts/pull/353",target:"_blank",rel:"noopener noreferrer"},wr={href:"https://github.com/nushell/nu_scripts/pull/350",target:"_blank",rel:"noopener noreferrer"},xr={href:"https://github.com/nushell/nu_scripts/pull/347",target:"_blank",rel:"noopener noreferrer"},yr={href:"https://github.com/nushell/nu_scripts/pull/327",target:"_blank",rel:"noopener noreferrer"},vr={href:"https://github.com/nushell/nu_scripts/pull/346",target:"_blank",rel:"noopener noreferrer"},Tr={href:"https://github.com/nushell/nu_scripts/pull/345",target:"_blank",rel:"noopener noreferrer"},Ar={href:"https://github.com/nushell/nu_scripts/pull/344",target:"_blank",rel:"noopener noreferrer"},Br={href:"https://github.com/nushell/nu_scripts/pull/343",target:"_blank",rel:"noopener noreferrer"},Nr={href:"https://github.com/nushell/nu_scripts/pull/337",target:"_blank",rel:"noopener noreferrer"},Ir={href:"https://github.com/nushell/nu_scripts/pull/329",target:"_blank",rel:"noopener noreferrer"},Cr={href:"https://github.com/nushell/nu_scripts/pull/319",target:"_blank",rel:"noopener noreferrer"},qr=t("h2",{id:"reedline",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#reedline","aria-hidden":"true"},"#"),e(" reedline")],-1),Fr={href:"https://github.com/nushell/reedline/pull/533",target:"_blank",rel:"noopener noreferrer"},zr={href:"https://github.com/nushell/reedline/pull/532",target:"_blank",rel:"noopener noreferrer"},Sr=t("code",null,"0.15",-1),Rr={href:"https://github.com/nushell/reedline/pull/531",target:"_blank",rel:"noopener noreferrer"};function Ur(Er,Dr){const n=s("ExternalLinkIcon");return a(),h("div",null,[d,p,_,i(" more "),g,t("p",null,[e("Nu 0.75 is available as "),t("a",m,[e("pre-built binaries"),o(n)]),e(" or from "),t("a",f,[e("crates.io"),o(n)]),e(". If you have Rust installed you can install it using "),b,e(".")]),k,w,x,t("h2",y,[v,e(" Changed Unicode escapes in strings ("),t("a",T,[e("bobhy"),o(n)]),e(")")]),A,t("p",null,[B,e(" The old 4-digit syntax could not natively address recent extensions to Unicode standard, such as emoji, CJK extension and traditional scripts. There is a cumbersome workaround in the form of "),t("a",N,[e("surrogate pairs"),o(n)]),e(", but this is not intuitive.")]),I,t("h2",C,[q,e(),F,e(" grapheme cluster flags for "),z,e(", "),S,e(", "),R,e(", "),U,e(" and "),E,e(" ("),t("a",D,[e("webbedspace"),o(n)]),e(")")]),j,t("h2",P,[V,e(" New "),W,e(" command ("),t("a",H,[e("JT"),o(n)]),e(")")]),L,t("h2",X,[J,e(" Breaking changes to the web-related commands ("),t("a",G,[e("Kazuki-Ya"),o(n)]),e(", "),t("a",K,[e("VincenzoCarlino"),o(n)]),e(")")]),M,t("h2",Y,[O,e(),$,e(" command exported from module defines top-level module command ("),t("a",Q,[e("kubouch"),o(n)]),e(")")]),Z,t("p",null,[e("Combined with a "),t("a",ee,[e("recent bugfix"),o(n)]),e(", this feature allows for nicer way of defining known externals and custom completions.")]),te,ne,oe,re,le,t("h2",se,[ae,e(" Progress bar for "),he,e(" command ("),t("a",ie,[e("Xoffio"),o(n)]),e(")")]),ue,ce,de,t("ul",null,[t("li",null,[e("Unicode escapes in strings now use and extended format "),pe,e(", any scripts using the old syntax "),_e,e(" will have to be updated. See also "),t("a",ge,[e("#7883"),o(n)]),e(".")]),t("li",null,[e("The "),me,e(" command has been renamed and moved to "),fe,e(" as this better reflects is role as a nushell specific "),be,e(" command compared to a conversion. ("),t("a",ke,[e("#7702"),o(n)]),e(")")]),t("li",null,[we,e(" has been renamed to "),xe,e(" ("),t("a",ye,[e("#7796"),o(n)]),e(")")]),t("li",null,[ve,e(" has been renamed to "),Te,e(" ("),t("a",Ae,[e("#7796"),o(n)]),e(")")]),t("li",null,[e("Quotes are trimmed when escaping to "),Be,e(" ("),t("a",Ne,[e("#7740"),o(n)]),e(")")]),t("li",null,[Ie,e(" now uses zero-indexed rows and uncapitalized columns ("),t("a",Ce,[e("#7897"),o(n)]),e(")")]),t("li",null,[qe,e(", "),Fe,e(", "),ze,e(", "),Se,e(", "),Re,e(", "),Ue,e(", "),Ee,e(", "),De,e(", "),je,e(", "),Pe,e(", "),Ve,e(", "),We,e(" and "),He,e(" raise error when given non-lists ("),t("a",Le,[e("#7623"),o(n)]),e(")")]),t("li",null,[Xe,e(" and "),Je,e(" now throw error on unsupported inputs ("),t("a",Ge,[e("7850"),o(n)]),e(")")])]),Ke,Me,t("ul",null,[t("li",null,[e("kubouch created "),t("a",Ye,[e("Remove deprecated "),Oe,e(" parameter"),o(n)]),e(", and "),t("a",$e,[e("Fix panic when assigning value to $env"),o(n)]),e(", and "),t("a",Qe,[e("Fix wrong VarId of $in variable"),o(n)]),e(", and "),t("a",Ze,[e("Fix command name lookup for known externals"),o(n)]),e(", and "),t("a",et,[e("Allow main command to define top-level module command"),o(n)]),e(", and "),t("a",tt,[e("Add const support for all overlay commands"),o(n)])]),t("li",null,[e("fdncred created "),t("a",nt,[e("update type check so that ++ with lists works better"),o(n)]),e(", and "),t("a",ot,[e("with the release of rust 1.67, let's bump to 1.66.1"),o(n)]),e(", and "),t("a",rt,[e("add decimal to SyntaxShape"),o(n)]),e(", and "),t("a",lt,[e("add some startup performance metrics"),o(n)]),e(", and "),t("a",st,[e("print nushell startup time"),o(n)]),e(", and "),t("a",at,[e("fix signature display in help commands"),o(n)]),e(", and "),t("a",ht,[e("update sqlparser dependency"),o(n)]),e(", and "),t("a",it,[e("update semver dep"),o(n)]),e(", and "),t("a",ut,[e("Add cursor shape configuration for each edit mode"),o(n)]),e(", and "),t("a",ct,[e("update base64 implementation to newer crate"),o(n)]),e(", and "),t("a",dt,[e("update release-pkg comments for manual runs"),o(n)])]),t("li",null,[e("sholderbach created "),t("a",pt,[e("Pin "),_t,e(" to new "),gt,e(" for release"),o(n)]),e(", and "),t("a",mt,[e("Apply more recent/nightly clippy lints"),o(n)]),e(", and "),t("a",ft,[e("Bump "),bt,e(" to "),kt,o(n)]),e(", and "),t("a",wt,[e("Use variable names directly in the format strings"),o(n)]),e(", and "),t("a",xt,[e("Remove unused "),yt,e(" in "),vt,o(n)]),e(", and "),t("a",Tt,[e("Update reedline for pre-release testing"),o(n)]),e(", and "),t("a",At,[e("Version bump for "),Bt,e(" release"),o(n)]),e(", and "),t("a",Nt,[e("Bump to "),It,e(" development version"),o(n)])]),t("li",null,[e("dependabot[bot] created "),t("a",Ct,[e("Bump windows from 0.43.0 to 0.44.0"),o(n)]),e(", and "),t("a",qt,[e("Bump serial_test from 0.10.0 to 1.0.0"),o(n)]),e(", and "),t("a",Ft,[e("Bump roxmltree from 0.16.0 to 0.17.0"),o(n)]),e(", and "),t("a",zt,[e("Bump typetag from 0.1.8 to 0.2.5"),o(n)]),e(", and "),t("a",St,[e("Bump chrono-tz from 0.6.3 to 0.8.1"),o(n)]),e(", and "),t("a",Rt,[e("Bump actions-rust-lang/setup-rust-toolchain from 1.3.4 to 1.3.5"),o(n)]),e(", and "),t("a",Ut,[e("Bump sysinfo from 0.26.4 to 0.27.7"),o(n)]),e(", and "),t("a",Et,[e("Bump miette from 5.3.0 to 5.5.0"),o(n)]),e(", and "),t("a",Dt,[e("Bump shadow-rs from 0.16.3 to 0.20.0"),o(n)]),e(", and "),t("a",jt,[e("Bump rayon from 1.5.3 to 1.6.1"),o(n)]),e(", and "),t("a",Pt,[e("Bump scraper from 0.13.0 to 0.14.0"),o(n)]),e(", and "),t("a",Vt,[e("Bump regex from 1.6.0 to 1.7.1"),o(n)]),e(", and "),t("a",Wt,[e("Bump git2 from 0.16.0 to 0.16.1"),o(n)]),e(", and "),t("a",Ht,[e("Bump libgit2-sys from 0.14.1+1.5.0 to 0.14.2+1.5.1"),o(n)]),e(", and "),t("a",Lt,[e("Bump bumpalo from 3.11.0 to 3.12.0"),o(n)]),e(", and "),t("a",Xt,[e("Bump actions/stale from 3 to 6"),o(n)]),e(", and "),t("a",Jt,[e("Bump serial_test from 0.8.0 to 0.10.0"),o(n)]),e(", and "),t("a",Gt,[e("Bump quick-xml from 0.25.0 to 0.27.1"),o(n)]),e(", and "),t("a",Kt,[e("Bump dialoguer from 0.9.0 to 0.10.3"),o(n)]),e(", and "),t("a",Mt,[e("Bump uuid from 1.1.2 to 1.2.2"),o(n)]),e(", and "),t("a",Yt,[e("Bump once_cell from 1.16.0 to 1.17.0"),o(n)]),e(", and "),t("a",Ot,[e("Bump git2 from 0.15.0 to 0.16.0"),o(n)])]),t("li",null,[e("jntrnr created "),t("a",$t,[e("Use clippy-recommended simplification"),o(n)]),e(", and "),t("a",Qt,[e("Add 'enumerate' command for enumeration"),o(n)])]),t("li",null,[e("merelymyself created "),t("a",Zt,[e("make "),en,e(" columns return 0-indexed uncapitalised"),o(n)]),e(", and "),t("a",tn,[e("let "),nn,e(" take linebreaks into account in "),on,o(n)]),e(", and "),t("a",rn,[e("convert SyntaxShape::Table into the corresponding Type"),o(n)])]),t("li",null,[e("WindSoilder created "),t("a",ln,[e("make help commands search term don't generate $nothing"),o(n)]),e(", and "),t("a",sn,[e("refactor: use "),an,e(" in ansi_strip command"),o(n)]),e(", and "),t("a",hn,[e("mention "),un,e(" in "),cn,e(" command's doc"),o(n)]),e(", and "),t("a",dn,[e("improve doc about flatten"),o(n)]),e(", and "),t("a",pn,[e("Let redirection keep exit code"),o(n)]),e(", and "),t("a",_n,[e("Fix multi-line redirection inside a block"),o(n)]),e(", and "),t("a",gn,[e("dependency update: update polar to 0.26.1"),o(n)])]),t("li",null,[e("Hofer-Julian created "),t("a",mn,[e("Add Github Actions workflow to check for typos"),o(n)]),e(", and "),t("a",fn,[e("Extract "),bn,o(n)]),e(", and "),t("a",kn,[e("Reduce again the number of match calls"),o(n)]),e(", and "),t("a",wn,[e("Reduce number of "),xn,e(" calls"),o(n)]),e(", and "),t("a",yn,[e("Extract manual "),vn,e(" extraction with method "),Tn,o(n)]),e(", and "),t("a",An,[e("Clean up "),Bn,o(n)]),e(", and "),t("a",Nn,[e("Move all functions of main.rs into modules"),o(n)]),e(", and "),t("a",In,[e("Cleanup of "),Cn,o(n)])]),t("li",null,[e("bobhy created "),t("a",qn,[e('Support extended unicode escapes in strings: "\\u{10fff}"'),o(n)])]),t("li",null,[e("rgwood created "),t("a",Fn,[e("Name threads"),o(n)]),e(", and "),t("a",zn,[e("Remove 🆖 comments"),o(n)]),e(", and "),t("a",Sn,[e("Clean up "),Rn,o(n)]),e(", and "),t("a",Un,[e("Re-enable some good tests, remove some bad tests"),o(n)]),e(", and "),t("a",En,[e("Fix the build after #7204"),o(n)]),e(", and "),t("a",Dn,[e("Trim quotes when shelling out to cmd.exe"),o(n)]),e(", and "),t("a",jn,[e("Combine benchmarks to speed up "),Pn,e(" build times"),o(n)])]),t("li",null,[e("zhiburt created "),t("a",Vn,[e("nu-commands/table ("),Wn,e(") Recognize limited space better"),o(n)]),e(", and "),t("a",Hn,[e("nu-table: Wrap last column in "),Ln,o(n)])]),t("li",null,[e("SUPERCILEX created "),t("a",Xn,[e("Fix "),Jn,e(" swallowing all output when ignoring errors"),o(n)])]),t("li",null,[e("NotLebedev created "),t("a",Gn,[e("To csv fix"),o(n)]),e(", and "),t("a",Kn,[e("Ansi link"),o(n)])]),t("li",null,[e("Dorumin created "),t("a",Mn,[e("Expose filtering by file type in glob"),o(n)])]),t("li",null,[e("michel-slm created "),t("a",Yn,[e("[nu-test-support] Gate system locale tests"),o(n)])]),t("li",null,[e("VincenzoCarlino created "),t("a",On,[e("Feat/7725 url join"),o(n)])]),t("li",null,[e("zoechi created "),t("a",$n,[e("Fix typos"),o(n)])]),t("li",null,[e("webbedspace created "),t("a",Qn,[e("Do not list deprecated subcommands in "),Zn,o(n)]),e(", and "),t("a",eo,[to,e(" now pipes input into the closure"),o(n)]),e(", and "),t("a",no,[oo,e(", "),ro,e(", "),lo,e(", "),so,e(" and "),ao,e(" now use graphemes instead of UTF-8 bytes"),o(n)]),e(", and "),t("a",ho,[e("Disallow "),io,e("'s silent conversion to HTML entities (and add "),uo,e("/"),co,e(" flag to re-allow it)"),o(n)])]),t("li",null,[e("Kazuki-Ya created "),t("a",po,[_o,e(" -> "),go,e(" and "),mo,e(" -> "),fo,o(n)])]),t("li",null,[e("zschaffer created "),t("a",bo,[e("add magenta to ansi command as synonym for purple"),o(n)])]),t("li",null,[e("1Kinoti created "),t("a",ko,[e("add dedicated "),wo,e(", "),xo,e(" errors"),o(n)]),e(", and "),t("a",yo,[e("Allow underscores in integers and floats"),o(n)])]),t("li",null,[e("Xoffio created "),t("a",vo,[e("Fixes Issue 7648 which crashes nushell and happens when an alias name is shorter than the alias command and the alias command is an external command."),o(n)]),e(", and "),t("a",To,[e("Add test for fix of issue #7754"),o(n)])]),t("li",null,[e("DaRacci created "),t("a",Ao,[e("Check all user groups."),o(n)])]),t("li",null,[e("hustcer created "),t("a",Bo,[e("fix some typos"),o(n)]),e(", and "),t("a",No,[e("Fix generated doc for "),Io,e(" commands"),o(n)])]),t("li",null,[e("afetisov created "),t("a",Co,[e("Fix typos and use more idiomatic assertions"),o(n)])]),t("li",null,[e("nanoqsh created "),t("a",qo,[e("Detailed message during core dumped"),o(n)])]),t("li",null,[e("murex971 created "),t("a",Fo,[e("Add search terms in random and expression categories"),o(n)])])]),zo,t("ul",null,[t("li",null,[e("Hofer-Julian created "),t("a",So,[e("Add another directory where nu might be installed"),o(n)])]),t("li",null,[e("fdncred created "),t("a",Ro,[e("get ready for new 1.0 release"),o(n)])]),t("li",null,[e("glcraft created "),t("a",Uo,[e("New syntax highlight"),o(n)])])]),Eo,t("ul",null,[t("li",null,[e("Hofer-Julian created "),t("a",Do,[e("Reflect the separation of block and closure"),o(n)]),e(", and "),t("a",jo,[e("Add separate page for setting Nu as default shell"),o(n)]),e(", and "),t("a",Po,[e("Add Github Actions workflow to check typos"),o(n)])]),t("li",null,[e("bobhy created "),t("a",Vo,[e("Document \\u{x...} unicode escapes"),o(n)]),e(", and "),t("a",Wo,[e("document 7883 for release notes"),o(n)])]),t("li",null,[e("max-nextcloud created "),t("a",Ho,[e("Update rust version requirement in installation"),o(n)])]),t("li",null,[e("WindSoilder created "),t("a",Lo,[e("update doc about stdout and stderr"),o(n)])]),t("li",null,[e("webbedspace created "),t("a",Xo,[e("Add my changes"),o(n)])]),t("li",null,[e("amtoine created "),t("a",Jo,[e('link to default config file in the "explore" page'),o(n)]),e(", and "),t("a",Go,[e('remove a broken link in "Introducing nushell" # "Plugins"'),o(n)]),e(", and "),t("a",Ko,[e('fix a typo on "language", was spelled "langauge"'),o(n)])]),t("li",null,[e("rgwood created "),t("a",Mo,[e("Disable prefetch setting"),o(n)])]),t("li",null,[e("waldyrious created "),t("a",Yo,[e("Add two style tweaks to improve tables in code blocks"),o(n)])]),t("li",null,[e("hustcer created "),t("a",Oo,[e("Refresh commands docs for nu v0.74"),o(n)])]),t("li",null,[e("hbt created "),t("a",$o,[e("fix deprecated cmd"),o(n)])])]),Qo,t("ul",null,[t("li",null,[e("Neur1n created "),t("a",Zo,[e("nu_conda: Another Conda module with Better Performance"),o(n)])]),t("li",null,[e("fdncred created "),t("a",er,[e("small tweaks to get panache working again"),o(n)]),e(", and "),t("a",tr,[e("fix oh-my.nu script after "),nr,e(" changes in nushell"),o(n)]),e(", and "),t("a",or,[e("fix ohmy.nu path handling on windows"),o(n)]),e(", and "),t("a",rr,[e("add timed_weather that checks the weather at timed intervals"),o(n)]),e(", and "),t("a",lr,[e("fixed a type-o in the weather script"),o(n)]),e(", and "),t("a",sr,[e("fix some bugs when on slash"),o(n)])]),t("li",null,[e("Hofer-Julian created "),t("a",ar,[e("Fix scoop completions"),o(n)]),e(", and "),t("a",hr,[e("git-completions: Stop checking "),ir,o(n)]),e(", and "),t("a",ur,[e("conda: Check if environment exists before activating"),o(n)]),e(", and "),t("a",cr,[e("Explain how to create an alias for conda activate without a prompt"),o(n)])]),t("li",null,[e("schrieveslaach created "),t("a",dr,[e("Fix git checkout/switch completions"),o(n)]),e(", and "),t("a",pr,[e("Improve git checkout/switch completions"),o(n)]),e(", and "),t("a",_r,[e("Add git cherry-pick completion"),o(n)])]),t("li",null,[e("1Kinoti created "),t("a",gr,[e("add todo script"),o(n)])]),t("li",null,[e("amtoine created "),t("a",mr,[e("FIX: export the "),fr,e(" completion"),o(n)])]),t("li",null,[e("zoechi created "),t("a",br,[e('Change "list of values" to "list of records" with value and description'),o(n)]),e(", and "),t("a",kr,[e("Export command to make it use-able"),o(n)]),e(", and "),t("a",wr,[e("Add completions for Bitwarden CLI client"),o(n)])]),t("li",null,[e("fj0r created "),t("a",xr,[e("K8s"),o(n)]),e(", and "),t("a",yr,[e("ssh kubernetes docker git just nvim"),o(n)])]),t("li",null,[e("fitzypop created "),t("a",vr,[e("add git_branch_cleanup.nu script and readme"),o(n)])]),t("li",null,[e("bobhy created "),t("a",Tr,[e("prompt/full-line.nu -- full width prompt"),o(n)])]),t("li",null,[e("stormasm created "),t("a",Ar,[e("add a Readme to the make_release directory"),o(n)])]),t("li",null,[e("kubouch created "),t("a",Br,[e("Add initial dependency resolver for nu release"),o(n)])]),t("li",null,[e("TornaxO7 created "),t("a",Nr,[e("adding git aliases"),o(n)])]),t("li",null,[e("DrakeTDL created "),t("a",Ir,[e("feat(custom-completions): add reflector completions"),o(n)])]),t("li",null,[e("ldsands created "),t("a",Cr,[e("Add files needed for Poetry custom-completions"),o(n)])])]),qr,t("ul",null,[t("li",null,[e("sholderbach created "),t("a",Fr,[e("Remove unstable rustdoc lint"),o(n)]),e(", and "),t("a",zr,[e("Bump version for "),Sr,e(" release"),o(n)])]),t("li",null,[e("dgkf created "),t("a",Rr,[e("Allow configuration of multiline prompt color"),o(n)])])])])}const Pr=l(c,[["render",Ur],["__file","2023-01-31-nushell_0_75.html.vue"]]);export{Pr as default};
