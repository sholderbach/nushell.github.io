import{_ as o,z as s,A as a,W as h,X as t,C as e,T as l,a6 as r,Q as i}from"./framework.3d018c9f.js";const u={},d=t("h1",{id:"nushell-0-62",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell-0-62","aria-hidden":"true"},"#"),e(" Nushell 0.62")],-1),c=t("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),p=t("p",null,"Today, we're releasing version 0.62 of Nu. This release deeper integration with SQLite, new completion logic, and much more.",-1),_=t("h1",{id:"where-to-get-it",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),f={href:"https://github.com/nushell/nushell/releases/tag/0.62.0",target:"_blank",rel:"noopener noreferrer"},g={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},b=t("code",null,"cargo install nu",-1),m=r(`<p><strong>A note on this release:</strong> The binaries published by the Nu team now include a statically linked copy of the OpenSSL library (previously Nu used a shared library, AKA &#39;dynamic linking&#39;). The goal of this change is to make Nu simpler to deploy with fewer dependencies.</p><p>This feature is enabled by the &quot;static-link-openssl&quot; Cargo feature, so it&#39;s easy to disable if needed when building Nu.</p><p>If you want all the built-in goodies, you can install <code>cargo install nu --features=extra</code>.</p><p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="database-connectivity-rgwood-elferherrera-fdncred" tabindex="-1"><a class="header-anchor" href="#database-connectivity-rgwood-elferherrera-fdncred" aria-hidden="true">#</a> Database connectivity (rgwood, elferherrera, fdncred)</h1><p>A gap in the &quot;Nushell story&quot; up to this point has been that although Nushell is a language and shell focused on data, there wasn&#39;t yet any ability to query databases and work with their data. With 0.62, we take our first step in that direction.</p><p>New in this release is the <code>db</code> command, which allows you to connect to a SQLite database and create a SQL query to run on it:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>  &gt; db open db.sqlite
    | db from table_a
    | db select a
    | db limit 10
    | db describe
</code></pre></div><p>With the <code>db open</code> command we open a connection to the database, then subsequent <code>db</code> commands build up a query step by step. One new twist with <code>db</code> for Nushell is that the query is built lazily, and will only be run once the data is needed.</p><p>Queries can also be written as raw SQL:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>  &gt; db open db.sqlite | db query &quot;SELECT a FROM table_a LIMIT 10&quot;
</code></pre></div><p>And finally, the <code>open</code> command has been updated to be SQLite-aware:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>  &gt; open db.sqlite
</code></pre></div><p>In all of the queries above, <code>db open db.sqlite</code> could be replaced by <code>open db.sqlite</code>; <code>open</code> is able to detect databases by looking at file contents.</p><h1 id="full-translation-of-the-book-to-chinese-hustcer" tabindex="-1"><a class="header-anchor" href="#full-translation-of-the-book-to-chinese-hustcer" aria-hidden="true">#</a> Full translation of the book to Chinese (hustcer)</h1>`,15),k={href:"https://www.nushell.sh/zh-CN/book/",target:"_blank",rel:"noopener noreferrer"},w=t("h1",{id:"more-completions-herlon214-jt",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#more-completions-herlon214-jt","aria-hidden":"true"},"#"),e(" More completions (herlon214, jt)")],-1),y=t("p",null,"Nushell can now complete record fields, cell paths in variables created in previous REPL runs, and more.",-1),v=t("p",null,"Starting with 0.62, Nushell will prefer to wrap filenames with spaces in backticks when completing. This allows for filenames to have single quotes, while also being compatible with upcoming improvements in filename handling.",-1),x=t("h1",{id:"new-commands",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#new-commands","aria-hidden":"true"},"#"),e(" New commands")],-1),N={href:"https://github.com/nushell/nushell/pull/5331",target:"_blank",rel:"noopener noreferrer"},C=t("code",null,"watch",-1),A=t("h1",{id:"quality-of-life-improvements",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#quality-of-life-improvements","aria-hidden":"true"},"#"),e(" Quality-of-life Improvements")],-1),q=r("<li><p><code>ctrl+o</code> - opens your editor of choice to edit line input (elferherrera)</p><ul><li>Make sure to set <code>buffer_editor</code> in your configuration so Nushell can find your editor</li></ul></li><li><p>You can use <code>()</code> in create filenames. eg) <code>ls ./($dirname)</code> (jt)</p><ul><li>Note: this currently only works if the <code>()</code> isn&#39;t the start of the filepath</li></ul></li><li><p><code>ctrl+c</code> now breaks in more cases (gipsyh)</p></li><li><p><code>$nu.os-info</code> can give you information about the platform Nushell is running on. (fdncred)</p></li><li><p><code>~user</code> is now a known path shorthand (merelymyself)&#39;</p></li><li><p>Errors now have helpful descriptions that will show up in the error docs. (zkat)</p></li>",6),T={href:"https://github.com/nushell/nushell/pull/5162",target:"_blank",rel:"noopener noreferrer"},S=t("li",null,[t("p",null,[t("strong",null,"Note:"),e(' this is a shortened list. For the full list, see the "Changelog" section below')])],-1),z=r('<h1 id="breaking-changes" tabindex="-1"><a class="header-anchor" href="#breaking-changes" aria-hidden="true">#</a> Breaking changes</h1><ul><li><code>^=</code> is now <code>starts-with</code></li><li>config is now an environment variable <ul><li>To update, move <code>let config = ...</code> to <code>let-env config = ...</code></li><li>This change was done for performance reasons and gives considerable performance improvements in some use cases.</li></ul></li></ul><h1 id="looking-ahead" tabindex="-1"><a class="header-anchor" href="#looking-ahead" aria-hidden="true">#</a> Looking ahead</h1><p>The <code>db</code> command joins the <code>dfr</code> command in a set of experiments we&#39;re working on to better understand how to integrate Nushell with a wider set of data sources. Coming up soon are &quot;lazy dataframes&quot;. These, like the new <code>db</code> command, will allow you to build up a query against a dataframe before you execute it. This allows for much more efficient processing of the request against the data source.</p><p>The Nushell design team is deep in discussions about how to make this more universal, allowing the Nushell language to build up queries lazily against a data source, and allowing the data source to perform the optimal native query. There&#39;s more research to do here, but we&#39;re looking forward to being able to take what we&#39;ve learned and grow the Nushell language. In the end, we hope, you won&#39;t need separate command sets for each data source type. Instead, you&#39;ll be able to connect and build your query all in the base Nushell language.</p><h1 id="changelog" tabindex="-1"><a class="header-anchor" href="#changelog" aria-hidden="true">#</a> Changelog</h1><h2 id="nushell" tabindex="-1"><a class="header-anchor" href="#nushell" aria-hidden="true">#</a> Nushell</h2>',7),F={href:"https://github.com/nushell/nushell/pull/5427",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/nushell/nushell/pull/5410",target:"_blank",rel:"noopener noreferrer"},L={href:"https://github.com/nushell/nushell/pull/5404",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/nushell/nushell/pull/5249",target:"_blank",rel:"noopener noreferrer"},M={href:"https://github.com/nushell/nushell/pull/5426",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/nushell/nushell/pull/5417",target:"_blank",rel:"noopener noreferrer"},U={href:"https://github.com/nushell/nushell/pull/5390",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/nushell/nushell/pull/5381",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/nushell/nushell/pull/5343",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/nushell/nushell/pull/5307",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/nushell/nushell/pull/5425",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/nushell/nushell/pull/5419",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/nushell/nushell/pull/5407",target:"_blank",rel:"noopener noreferrer"},O={href:"https://github.com/nushell/nushell/pull/5403",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/nushell/nushell/pull/5400",target:"_blank",rel:"noopener noreferrer"},P={href:"https://github.com/nushell/nushell/pull/5399",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/nushell/nushell/pull/5398",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://github.com/nushell/nushell/pull/5386",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://github.com/nushell/nushell/pull/5334",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/nushell/nushell/pull/5327",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/nushell/nushell/pull/5318",target:"_blank",rel:"noopener noreferrer"},X={href:"https://github.com/nushell/nushell/pull/5301",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/nushell/nushell/pull/5297",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://github.com/nushell/nushell/pull/5271",target:"_blank",rel:"noopener noreferrer"},te={href:"https://github.com/nushell/nushell/pull/5266",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://github.com/nushell/nushell/pull/5237",target:"_blank",rel:"noopener noreferrer"},le={href:"https://github.com/nushell/nushell/pull/5230",target:"_blank",rel:"noopener noreferrer"},re={href:"https://github.com/nushell/nushell/pull/5416",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://github.com/nushell/nushell/pull/5401",target:"_blank",rel:"noopener noreferrer"},se={href:"https://github.com/nushell/nushell/pull/5387",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://github.com/nushell/nushell/pull/5320",target:"_blank",rel:"noopener noreferrer"},he={href:"https://github.com/nushell/nushell/pull/5244",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://github.com/nushell/nushell/pull/5228",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://github.com/nushell/nushell/pull/5415",target:"_blank",rel:"noopener noreferrer"},de={href:"https://github.com/nushell/nushell/pull/5405",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://github.com/nushell/nushell/pull/5356",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://github.com/nushell/nushell/pull/5350",target:"_blank",rel:"noopener noreferrer"},_e={href:"https://github.com/nushell/nushell/pull/5256",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://github.com/nushell/nushell/pull/5409",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://github.com/nushell/nushell/pull/5408",target:"_blank",rel:"noopener noreferrer"},be={href:"https://github.com/nushell/nushell/pull/5369",target:"_blank",rel:"noopener noreferrer"},me={href:"https://github.com/nushell/nushell/pull/5332",target:"_blank",rel:"noopener noreferrer"},ke=t("code",null,"export/alias --help",-1),we={href:"https://github.com/nushell/nushell/pull/5406",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://github.com/nushell/nushell/pull/5402",target:"_blank",rel:"noopener noreferrer"},ve={href:"https://github.com/nushell/nushell/pull/5396",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://github.com/nushell/nushell/pull/5389",target:"_blank",rel:"noopener noreferrer"},Ne=t("code",null,"watch",-1),Ce={href:"https://github.com/nushell/nushell/pull/5374",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://github.com/nushell/nushell/pull/5359",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://github.com/nushell/nushell/pull/5358",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://github.com/nushell/nushell/pull/5357",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://github.com/nushell/nushell/pull/5354",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://github.com/nushell/nushell/pull/5352",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://github.com/nushell/nushell/pull/5349",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://github.com/nushell/nushell/pull/5338",target:"_blank",rel:"noopener noreferrer"},Le=t("code",null,"db info",-1),je={href:"https://github.com/nushell/nushell/pull/5331",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://github.com/nushell/nushell/pull/5328",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://github.com/nushell/nushell/pull/5273",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://github.com/nushell/nushell/pull/5272",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://github.com/nushell/nushell/pull/5248",target:"_blank",rel:"noopener noreferrer"},Re=t("code",null,"describe",-1),De={href:"https://github.com/nushell/nushell/pull/5247",target:"_blank",rel:"noopener noreferrer"},$e=t("code",null,"query db",-1),We={href:"https://github.com/nushell/nushell/pull/5395",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://github.com/nushell/nushell/pull/5394",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://github.com/nushell/nushell/pull/5380",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://github.com/nushell/nushell/pull/5372",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://github.com/nushell/nushell/pull/5345",target:"_blank",rel:"noopener noreferrer"},He={href:"https://github.com/nushell/nushell/pull/5335",target:"_blank",rel:"noopener noreferrer"},Ye=t("code",null,"db info",-1),Ze={href:"https://github.com/nushell/nushell/pull/5322",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://github.com/nushell/nushell/pull/5321",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://github.com/nushell/nushell/pull/5317",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://github.com/nushell/nushell/pull/5308",target:"_blank",rel:"noopener noreferrer"},Je={href:"https://github.com/nushell/nushell/pull/5302",target:"_blank",rel:"noopener noreferrer"},et={href:"https://github.com/nushell/nushell/pull/5280",target:"_blank",rel:"noopener noreferrer"},tt={href:"https://github.com/nushell/nushell/pull/5265",target:"_blank",rel:"noopener noreferrer"},nt={href:"https://github.com/nushell/nushell/pull/5243",target:"_blank",rel:"noopener noreferrer"},lt={href:"https://github.com/nushell/nushell/pull/5393",target:"_blank",rel:"noopener noreferrer"},rt={href:"https://github.com/nushell/nushell/pull/5385",target:"_blank",rel:"noopener noreferrer"},ot={href:"https://github.com/nushell/nushell/pull/5382",target:"_blank",rel:"noopener noreferrer"},st={href:"https://github.com/nushell/nushell/pull/5310",target:"_blank",rel:"noopener noreferrer"},at={href:"https://github.com/nushell/nushell/pull/5303",target:"_blank",rel:"noopener noreferrer"},ht={href:"https://github.com/nushell/nushell/pull/5299",target:"_blank",rel:"noopener noreferrer"},it={href:"https://github.com/nushell/nushell/pull/5298",target:"_blank",rel:"noopener noreferrer"},ut={href:"https://github.com/nushell/nushell/pull/5254",target:"_blank",rel:"noopener noreferrer"},dt={href:"https://github.com/nushell/nushell/pull/5242",target:"_blank",rel:"noopener noreferrer"},ct={href:"https://github.com/nushell/nushell/pull/5232",target:"_blank",rel:"noopener noreferrer"},pt={href:"https://github.com/nushell/nushell/pull/5384",target:"_blank",rel:"noopener noreferrer"},_t={href:"https://github.com/nushell/nushell/pull/5365",target:"_blank",rel:"noopener noreferrer"},ft={href:"https://github.com/nushell/nushell/pull/5355",target:"_blank",rel:"noopener noreferrer"},gt=t("code",null,"sort",-1),bt={href:"https://github.com/nushell/nushell/pull/5346",target:"_blank",rel:"noopener noreferrer"},mt={href:"https://github.com/nushell/nushell/pull/5326",target:"_blank",rel:"noopener noreferrer"},kt={href:"https://github.com/nushell/nushell/pull/5323",target:"_blank",rel:"noopener noreferrer"},wt={href:"https://github.com/nushell/nushell/pull/5251",target:"_blank",rel:"noopener noreferrer"},yt={href:"https://github.com/nushell/nushell/pull/5224",target:"_blank",rel:"noopener noreferrer"},vt={href:"https://github.com/nushell/nushell/pull/5311",target:"_blank",rel:"noopener noreferrer"},xt=t("code",null,"println!()",-1),Nt=t("code",null,"exec",-1),Ct={href:"https://github.com/nushell/nushell/pull/5306",target:"_blank",rel:"noopener noreferrer"},At={href:"https://github.com/nushell/nushell/pull/5264",target:"_blank",rel:"noopener noreferrer"},qt={href:"https://github.com/nushell/nushell/pull/5253",target:"_blank",rel:"noopener noreferrer"},Tt={href:"https://github.com/nushell/nushell/pull/5259",target:"_blank",rel:"noopener noreferrer"},St=t("code",null,"conversions",-1),zt={href:"https://github.com/nushell/nushell/pull/5246",target:"_blank",rel:"noopener noreferrer"},Ft={href:"https://github.com/nushell/nushell/pull/5229",target:"_blank",rel:"noopener noreferrer"},It={href:"https://github.com/nushell/nushell/pull/5227",target:"_blank",rel:"noopener noreferrer"},Lt=t("code",null,"$nu.scope.commands",-1),jt={href:"https://github.com/nushell/nushell/pull/5222",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://github.com/nushell/nushell/pull/5172",target:"_blank",rel:"noopener noreferrer"},Et={href:"https://github.com/nushell/nushell/pull/5219",target:"_blank",rel:"noopener noreferrer"},Ut={href:"https://github.com/nushell/nushell/pull/5216",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://github.com/nushell/nushell/pull/5213",target:"_blank",rel:"noopener noreferrer"},Rt={href:"https://github.com/nushell/nushell/pull/5217",target:"_blank",rel:"noopener noreferrer"},Dt=t("code",null,"nth",-1),$t=t("code",null,"select",-1),Wt={href:"https://github.com/nushell/nushell/pull/5214",target:"_blank",rel:"noopener noreferrer"},Bt={href:"https://github.com/nushell/nushell/pull/5212",target:"_blank",rel:"noopener noreferrer"},Ot=t("code",null,"ls ~ | path relative-to ~",-1),Vt={href:"https://github.com/nushell/nushell/pull/5180",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://github.com/nushell/nushell/pull/5210",target:"_blank",rel:"noopener noreferrer"},Ht={href:"https://github.com/nushell/nushell/pull/5207",target:"_blank",rel:"noopener noreferrer"},Yt={href:"https://github.com/nushell/nushell/pull/5204",target:"_blank",rel:"noopener noreferrer"},Zt={href:"https://github.com/nushell/nushell/pull/5199",target:"_blank",rel:"noopener noreferrer"},Gt={href:"https://github.com/nushell/nushell/pull/5209",target:"_blank",rel:"noopener noreferrer"},Kt={href:"https://github.com/nushell/nushell/pull/5201",target:"_blank",rel:"noopener noreferrer"},Xt={href:"https://github.com/nushell/nushell/pull/5187",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://github.com/nushell/nushell/pull/5177",target:"_blank",rel:"noopener noreferrer"},en={href:"https://github.com/nushell/nushell/pull/5208",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://github.com/nushell/nushell/pull/5184",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://github.com/nushell/nushell/pull/5206",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://github.com/nushell/nushell/pull/5205",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://github.com/nushell/nushell/pull/5200",target:"_blank",rel:"noopener noreferrer"},on={href:"https://github.com/nushell/nushell/pull/5193",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://github.com/nushell/nushell/pull/5192",target:"_blank",rel:"noopener noreferrer"},an={href:"https://github.com/nushell/nushell/pull/5188",target:"_blank",rel:"noopener noreferrer"},hn=t("code",null,"git push",-1),un=t("code",null,"git checkout",-1),dn={href:"https://github.com/nushell/nushell/pull/5176",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://github.com/nushell/nushell/pull/5183",target:"_blank",rel:"noopener noreferrer"},pn=t("code",null,"char -i",-1),_n={href:"https://github.com/nushell/nushell/pull/5174",target:"_blank",rel:"noopener noreferrer"},fn=t("code",null,"char -u",-1),gn={href:"https://github.com/nushell/nushell/pull/5182",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://github.com/nushell/nushell/pull/5162",target:"_blank",rel:"noopener noreferrer"},mn=t("h2",{id:"documentation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),e(" Documentation")],-1),kn={href:"https://github.com/nushell/nushell.github.io/pull/427",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://github.com/nushell/nushell.github.io/pull/425",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://github.com/nushell/nushell.github.io/pull/422",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://github.com/nushell/nushell.github.io/pull/421",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://github.com/nushell/nushell.github.io/pull/420",target:"_blank",rel:"noopener noreferrer"},Nn={href:"https://github.com/nushell/nushell.github.io/pull/419",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://github.com/nushell/nushell.github.io/pull/417",target:"_blank",rel:"noopener noreferrer"},An={href:"https://github.com/nushell/nushell.github.io/pull/415",target:"_blank",rel:"noopener noreferrer"},qn={href:"https://github.com/nushell/nushell.github.io/pull/414",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://github.com/nushell/nushell.github.io/pull/413",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://github.com/nushell/nushell.github.io/pull/412",target:"_blank",rel:"noopener noreferrer"},zn={href:"https://github.com/nushell/nushell.github.io/pull/408",target:"_blank",rel:"noopener noreferrer"},Fn=t("code",null,"outdated",-1),In={href:"https://github.com/nushell/nushell.github.io/pull/407",target:"_blank",rel:"noopener noreferrer"},Ln={href:"https://github.com/nushell/nushell.github.io/pull/403",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://github.com/nushell/nushell.github.io/pull/400",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://github.com/nushell/nushell.github.io/pull/396",target:"_blank",rel:"noopener noreferrer"},En={href:"https://github.com/nushell/nushell.github.io/pull/426",target:"_blank",rel:"noopener noreferrer"},Un={href:"https://github.com/nushell/nushell.github.io/pull/424",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://github.com/nushell/nushell.github.io/pull/418",target:"_blank",rel:"noopener noreferrer"},Rn={href:"https://github.com/nushell/nushell.github.io/pull/416",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://github.com/nushell/nushell.github.io/pull/411",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://github.com/nushell/nushell.github.io/pull/410",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://github.com/nushell/nushell.github.io/pull/406",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://github.com/nushell/nushell.github.io/pull/402",target:"_blank",rel:"noopener noreferrer"},On={href:"https://github.com/nushell/nushell.github.io/pull/399",target:"_blank",rel:"noopener noreferrer"},Vn=t("code",null,"cd",-1),Pn={href:"https://github.com/nushell/nushell.github.io/pull/398",target:"_blank",rel:"noopener noreferrer"},Hn={href:"https://github.com/nushell/nushell.github.io/pull/397",target:"_blank",rel:"noopener noreferrer"},Yn=t("h2",{id:"nu-scripts",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nu-scripts","aria-hidden":"true"},"#"),e(" Nu scripts")],-1),Zn={href:"https://github.com/nushell/nu_scripts/pull/214",target:"_blank",rel:"noopener noreferrer"},Gn={href:"https://github.com/nushell/nu_scripts/pull/213",target:"_blank",rel:"noopener noreferrer"},Kn={href:"https://github.com/nushell/nu_scripts/pull/212",target:"_blank",rel:"noopener noreferrer"},Xn={href:"https://github.com/nushell/nu_scripts/pull/210",target:"_blank",rel:"noopener noreferrer"},Jn={href:"https://github.com/nushell/nu_scripts/pull/208",target:"_blank",rel:"noopener noreferrer"},el={href:"https://github.com/nushell/nu_scripts/pull/206",target:"_blank",rel:"noopener noreferrer"},tl={href:"https://github.com/nushell/nu_scripts/pull/205",target:"_blank",rel:"noopener noreferrer"},nl={href:"https://github.com/nushell/nu_scripts/pull/204",target:"_blank",rel:"noopener noreferrer"},ll=t("code",null,"git push",-1),rl=t("code",null,"git checkout",-1),ol={href:"https://github.com/nushell/nu_scripts/pull/203",target:"_blank",rel:"noopener noreferrer"},sl=t("h2",{id:"reedline",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#reedline","aria-hidden":"true"},"#"),e(" reedline")],-1),al={href:"https://github.com/nushell/reedline/pull/422",target:"_blank",rel:"noopener noreferrer"},hl={href:"https://github.com/nushell/reedline/pull/421",target:"_blank",rel:"noopener noreferrer"},il={href:"https://github.com/nushell/reedline/pull/419",target:"_blank",rel:"noopener noreferrer"},ul={href:"https://github.com/nushell/reedline/pull/418",target:"_blank",rel:"noopener noreferrer"},dl={href:"https://github.com/nushell/reedline/pull/417",target:"_blank",rel:"noopener noreferrer"},cl={href:"https://github.com/nushell/reedline/pull/416",target:"_blank",rel:"noopener noreferrer"},pl=t("code",null,"ClearScrollback",-1),_l={href:"https://github.com/nushell/reedline/pull/415",target:"_blank",rel:"noopener noreferrer"},fl={href:"https://github.com/nushell/reedline/pull/414",target:"_blank",rel:"noopener noreferrer"},gl={href:"https://github.com/nushell/reedline/pull/400",target:"_blank",rel:"noopener noreferrer"},bl={href:"https://github.com/nushell/reedline/pull/399",target:"_blank",rel:"noopener noreferrer"},ml=t("code",null,"EditCommand::InsertNewline",-1),kl={href:"https://github.com/nushell/reedline/pull/413",target:"_blank",rel:"noopener noreferrer"},wl={href:"https://github.com/nushell/reedline/pull/411",target:"_blank",rel:"noopener noreferrer"},yl={href:"https://github.com/nushell/reedline/pull/412",target:"_blank",rel:"noopener noreferrer"},vl={href:"https://github.com/nushell/reedline/pull/410",target:"_blank",rel:"noopener noreferrer"},xl={href:"https://github.com/nushell/reedline/pull/405",target:"_blank",rel:"noopener noreferrer"},Nl=t("code",null,"C",-1),Cl={href:"https://github.com/nushell/reedline/pull/403",target:"_blank",rel:"noopener noreferrer"};function Al(ql,Tl){const n=i("ExternalLinkIcon");return s(),a("div",null,[d,c,p,h(" more "),_,t("p",null,[e("Nu 0.62 is available as "),t("a",f,[e("pre-built binaries"),l(n)]),e(" or from "),t("a",g,[e("crates.io"),l(n)]),e(". If you have Rust installed you can install it using "),b,e(".")]),m,t("p",null,[e("The book is now fully translated to "),t("a",k,[e("Chinese (zh-CN)"),l(n)]),e(". Huge shout-out to hustcer for doing all the work on the translation!")]),w,y,v,x,t("ul",null,[t("li",null,[t("a",N,[C,l(n)]),e(" can now watch a filepath and run a block if a change occurs (rgwood)")])]),A,t("ul",null,[q,t("li",null,[t("p",null,[e("Nushell now has "),t("a",T,[e("better shell integration"),l(n)]),e(" for terminals like kitty. (schrieveslaach)")])]),S]),z,t("ul",null,[t("li",null,[e("sholderbach created "),t("a",F,[e("Pin reedline to v0.5.0 for the next release"),l(n)]),e(", and "),t("a",I,[e("Fix CI to run doctests again"),l(n)]),e(", and "),t("a",L,[e("Bump reedline"),l(n)]),e(", and "),t("a",j,[e("Set to reedline main branch for development cycle"),l(n)])]),t("li",null,[e("elferherrera created "),t("a",M,[e("added open editor event in config parsing"),l(n)]),e(", and "),t("a",E,[e("Database commands"),l(n)]),e(", and "),t("a",U,[e("Line buffer keybinding"),l(n)]),e(", and "),t("a",Q,[e("Line buffer editor"),l(n)]),e(", and "),t("a",R,[e("Database commands"),l(n)]),e(", and "),t("a",D,[e("Database commands"),l(n)])]),t("li",null,[e("zhiburt created "),t("a",$,[e("Fix coloring when string has spaces"),l(n)])]),t("li",null,[e("jt created "),t("a",W,[e("Update path completions to handle spaces"),l(n)]),e(", and "),t("a",B,[e("Rename =^ to 'starts-with'"),l(n)]),e(", and "),t("a",O,[e("More escaping/unescaping fixes"),l(n)]),e(", and "),t("a",V,[e("Adds error printing back in a couple places"),l(n)]),e(", and "),t("a",P,[e("Add unescaping to external command parsing"),l(n)]),e(", and "),t("a",H,[e("Move uses of trim_quotes to unescape for filenames"),l(n)]),e(", and "),t("a",Y,[e("Make if else more lazy"),l(n)]),e(", and "),t("a",Z,[e("Fix 'range' range exclusive"),l(n)]),e(", and "),t("a",G,[e("Allow bare words to interpolate"),l(n)]),e(", and "),t("a",K,[e("Warn if we see let config = .."),l(n)]),e(", and "),t("a",X,[e("Fix cd -"),l(n)]),e(", and "),t("a",J,[e("Add 'and' and 'or' operators"),l(n)]),e(", and "),t("a",ee,[e("Use better quoting for commandline args"),l(n)]),e(", and "),t("a",te,[e("Some cleanups for clippy"),l(n)]),e(", and "),t("a",ne,[e("move config back to config.nu"),l(n)]),e(", and "),t("a",le,[e("Move config to be an env var"),l(n)])]),t("li",null,[e("Tropid created "),t("a",re,[e('Fix erroneous removal of "./" folder prefix'),l(n)]),e(", and "),t("a",oe,[e("Update reedline to use partial completion changes"),l(n)]),e(", and "),t("a",se,[e('Remove "./" prefix for file path completions'),l(n)]),e(", and "),t("a",ae,[e("Fuzzy completion matching"),l(n)]),e(", and "),t("a",he,[e("Add MatchAlgorithm for completion suggestions"),l(n)]),e(", and "),t("a",ie,[e("Feature/refactor completion options"),l(n)])]),t("li",null,[e("stormasm created "),t("a",ue,[e("remove ctrl-l from config.nu as a way to clear scrollback"),l(n)]),e(", and "),t("a",de,[e("event ClearScrollback is working in reedline / update config.nu"),l(n)]),e(", and "),t("a",ce,[e("cleanup version command and add in database feature"),l(n)]),e(", and "),t("a",pe,[e("mute false import warning for nu-command test where_"),l(n)]),e(", and "),t("a",_e,[e("add newlines to the end of the default config files"),l(n)])]),t("li",null,[e("gipsyh created "),t("a",fe,[e("Fixed ctrl-c in recursion loop bug #5362"),l(n)]),e(", and "),t("a",ge,[e("Fixed interrupting a for-loop over a list bug #5378"),l(n)]),e(", and "),t("a",be,[e("Don't resuggest accepted completions"),l(n)]),e(", and "),t("a",me,[e("Fix use of "),ke,e(" bug"),l(n)])]),t("li",null,[e("rgwood created "),t("a",we,[e("CI: Add job to build plugins"),l(n)]),e(", and "),t("a",ye,[e('Add Miette "fancy" feature to fix plugin builds'),l(n)]),e(", and "),t("a",ve,[e("CI: build virtualenv tests in dev profile for speed"),l(n)]),e(", and "),t("a",xe,[e("Error printing changes for "),Ne,l(n)]),e(", and "),t("a",Ce,[e("Faster CI"),l(n)]),e(", and "),t("a",Ae,[e("rust-cache fix"),l(n)]),e(", and "),t("a",qe,[e("CI: remove rust-cache from virtualenv tests"),l(n)]),e(", and "),t("a",Te,[e("CI: make Clippy reuse build artifacts, other cleanup"),l(n)]),e(", and "),t("a",Se,[e("CI: enable rust-cache, remove minimal"),l(n)]),e(", and "),t("a",ze,[e("Openssl feature"),l(n)]),e(", and "),t("a",Fe,[e("Statically link OpenSSL"),l(n)]),e(", and "),t("a",Ie,[Le,e(" tweaks"),l(n)]),e(", and "),t("a",je,[e("Add watch command"),l(n)]),e(", and "),t("a",Me,[e("Move print_pipeline_data() to nu-protocol"),l(n)]),e(", and "),t("a",Ee,[e("Clean up tests and unused documentation code"),l(n)]),e(", and "),t("a",Ue,[e("Clean up unused files in repo root"),l(n)]),e(", and "),t("a",Qe,[e("Handle custom values in "),Re,l(n)]),e(", and "),t("a",De,[e("SQLite overhaul: custom value, "),$e,e(" command"),l(n)])]),t("li",null,[e("panicbit created "),t("a",We,[e("Add ends-with operator and fix dataframe operator behavior"),l(n)])]),t("li",null,[e("fdncred created "),t("a",Be,[e("a little database cleanup"),l(n)]),e(", and "),t("a",Oe,[e("allows for nushell to have tables without the index column"),l(n)]),e(", and "),t("a",Ve,[e('Revert "nu-cli/completions: better fix for files with special characters"'),l(n)]),e(", and "),t("a",Pe,[e("fixes an issue with an empty selector panic"),l(n)]),e(", and "),t("a",He,[Ye,e(" command"),l(n)]),e(", and "),t("a",Ze,[e("add database feature to extra"),l(n)]),e(", and "),t("a",Ge,[e("update build status badge"),l(n)]),e(", and "),t("a",Ke,[e("update contrib to max=500"),l(n)]),e(", and "),t("a",Xe,[e("update sys with new items, add kernel version to os-info"),l(n)]),e(", and "),t("a",Je,[e("consolidate shell integration behind config setting"),l(n)]),e(", and "),t("a",et,[e("add virtualenv to integrations"),l(n)]),e(", and "),t("a",tt,[e("update os-info os to name"),l(n)]),e(", and "),t("a",nt,[e("add os to $nu based on rust's understanding"),l(n)])]),t("li",null,[e("kubouch created "),t("a",lt,[e("Fix PATH update example"),l(n)])]),t("li",null,[e("herlon214 created "),t("a",rt,[e("nu-cli/completions: complete external args as filepath"),l(n)]),e(", and "),t("a",ot,[e("nu-cli/completions: apply correctly nesting for env vars"),l(n)]),e(", and "),t("a",st,[e("nu-command/filesystem: remove newline from cd path"),l(n)]),e(", and "),t("a",at,[e("nu-cli/completions: add completion for $nu"),l(n)]),e(", and "),t("a",ht,[e("nu-cli: directory syntax shape + completions"),l(n)]),e(", and "),t("a",it,[e("nu-cli/completions: support record for custom completion"),l(n)]),e(", and "),t("a",ut,[e("nu-cli/completions: better fix for files with special characters"),l(n)]),e(", and "),t("a",dt,[e("nu-cli/completions: fix file completions with quotes"),l(n)]),e(", and "),t("a",ct,[e("nu-cli: added tests for file completions"),l(n)])]),t("li",null,[e("uasi created "),t("a",pt,[e("Fix quoting for command line args"),l(n)]),e(", and "),t("a",_t,[e("Avoid using time conversion methods that may panic"),l(n)])]),t("li",null,[e("jmoore34 created "),t("a",ft,[e("Change description of "),gt,l(n)])]),t("li",null,[e("efx created "),t("a",bt,[e("improve inc plugin docs"),l(n)])]),t("li",null,[e("xgillard created "),t("a",mt,[e("activates optional trim in 'from csv' and 'from tsv'"),l(n)])]),t("li",null,[e("merelymyself created "),t("a",kt,[e("Allows cd (and other commands that depend on current working directory) to use path of type '~user'"),l(n)]),e(", and "),t("a",wt,[e("Adding ~user tilde recognition in file paths"),l(n)]),e(", and "),t("a",yt,[e("Added search terms to math commands"),l(n)])]),t("li",null,[e("jokeyrhyme created "),t("a",vt,[e("fix: remove "),xt,e(" from "),Nt,e(" builtin"),l(n)])]),t("li",null,[e("babalolajnr created "),t("a",Ct,[e("feat: add search terms to date"),l(n)])]),t("li",null,[e("raboof created "),t("a",At,[e("typo: seach -> search"),l(n)]),e(", and "),t("a",qt,[e("git completion: 'git fetch' for remotes"),l(n)])]),t("li",null,[e("jaeheonji created "),t("a",Tt,[e("feat: add search terms to "),St,l(n)])]),t("li",null,[e("pinjeff created "),t("a",zt,[e("refactor html module"),l(n)])]),t("li",null,[e("Yethal created "),t("a",Ft,[e("allow par-each to receive $in"),l(n)])]),t("li",null,[e("Sygmei created "),t("a",It,[e("add custom_completion field to "),Lt,e(" command"),l(n)])]),t("li",null,[e("zkat created "),t("a",jt,[e("update miette and switch to GenericErrors"),l(n)]),e(", and "),t("a",Mt,[e("documented ShellError errors."),l(n)])]),t("li",null,[e("filaretov created "),t("a",Et,[e("Simplify known external tests"),l(n)]),e(", and "),t("a",Ut,[e("Add known external tests"),l(n)]),e(", and "),t("a",Qt,[e("Simplify known external name recovery"),l(n)])]),t("li",null,[e("homburg created "),t("a",Rt,[Dt,e(" -> "),$t,e(" command"),l(n)])]),t("li",null,[e("andrasio created "),t("a",Wt,[e("Remove 'empty' block support reminders, for now."),l(n)])]),t("li",null,[e("strega-nil created "),t("a",Bt,[e("[ls, path relative-to] Fix use of "),Ot,l(n)]),e(", and "),t("a",Vt,[e("don't join paths to cwd ever in calls to external functions"),l(n)])]),t("li",null,[e("herlon214 created "),t("a",Pt,[e("nu-cli/completions: completion for use and source"),l(n)]),e(", and "),t("a",Ht,[e("nu-cli/completions: removed unnecessary bool"),l(n)]),e(", and "),t("a",Yt,[e("Completion for variables of type Record"),l(n)]),e(", and "),t("a",Zt,[e("nu-cli/completions: add completion for $env."),l(n)])]),t("li",null,[e("fdncred created "),t("a",Gt,[e("add hex color parsing to ansi"),l(n)]),e(", and "),t("a",Kt,[e("updated cargo.lock with cargo update"),l(n)]),e(", and "),t("a",Xt,[e("tweak ci building badge"),l(n)]),e(", and "),t("a",Jt,[e("allow default color shortcut names"),l(n)])]),t("li",null,[e("stormasm created "),t("a",en,[e("cleanup nu-command, remove redundant code"),l(n)]),e(", and "),t("a",tn,[e("update crate chrono-tz to its latest version"),l(n)])]),t("li",null,[e("jt created "),t("a",nn,[e("Move to dev version 0.61.1"),l(n)])]),t("li",null,[e("uasi created "),t("a",ln,[e("Fix env capture"),l(n)])]),t("li",null,[e("dantswain created "),t("a",rn,[e("Avoid duplicating post headers"),l(n)])]),t("li",null,[e("ZetaNumbers created "),t("a",on,[e("fix: reduce command have not redirected block's evaluation output"),l(n)])]),t("li",null,[e("nibon7 created "),t("a",sn,[e("fix timestamp parsing on 32-bit platforms"),l(n)])]),t("li",null,[e("hustcer created "),t("a",an,[e("Fix completions for "),hn,e(" and "),un,e(" close: #5021 and #4599"),l(n)]),e(", and "),t("a",dn,[e("Add a dockerfile example based on debian bullseye-slim"),l(n)])]),t("li",null,[e("tiffany352 created "),t("a",cn,[e("Add "),pn,e(" for chars from integers"),l(n)]),e(", and "),t("a",_n,[e("Allow passing an integer to "),fn,l(n)])]),t("li",null,[e("rgwood created "),t("a",gn,[e("Initial SQLite functionality"),l(n)])]),t("li",null,[e("schrieveslaach created "),t("a",bn,[e("Shell Integration"),l(n)])])]),mn,t("ul",null,[t("li",null,[e("hustcer created "),t("a",kn,[e("Update zh-CN docs"),l(n)]),e(", and "),t("a",wn,[e("feat: Add github action related stuff"),l(n)]),e(", and "),t("a",yn,[e("More proofreading work for the zh-CN translations"),l(n)]),e(", and "),t("a",vn,[e("Fix some broken links"),l(n)]),e(", and "),t("a",xn,[e("Some proofreading work for zh-CN translations"),l(n)]),e(", and "),t("a",Nn,[e("Update zh-CN translations to the latest english version of commit: b6c91cabfa"),l(n)]),e(", and "),t("a",Cn,[e("Update some node modules"),l(n)]),e(", and "),t("a",An,[e("Translate dataframes.md to zh-CN from commit: 92fb0ac2c"),l(n)]),e(", and "),t("a",qn,[e("Add basic config and pages for Turkish"),l(n)]),e(", and "),t("a",Tn,[e("Add translation guide"),l(n)]),e(", and "),t("a",Sn,[e("Translate line_editor.md to zh-CN from commit: e0688a346"),l(n)]),e(", and "),t("a",zn,[e("Update i18n.nu add "),Fn,e(" command to check outdated translations"),l(n)]),e(", and "),t("a",In,[e("Translate coloring_and_theming.md to zh-CN from commit: f3dc86d3d"),l(n)]),e(", and "),t("a",Ln,[e("Translate some small docs to zh-CN from commit: f5987a82d"),l(n)]),e(", and "),t("a",jn,[e("Fix some typo and Translate configuration & environment to zh-CN from commit: f5987a82d"),l(n)]),e(", and "),t("a",Mn,[e("Translate lots of small docs to zh-CN from commit: ae23eeba3"),l(n)])]),t("li",null,[e("reillysiemens created "),t("a",En,[e("Fix broken nu_scripts repo link"),l(n)])]),t("li",null,[e("merelymyself created "),t("a",Un,[e('Changed the confusing title of "Working With Strings"'),l(n)])]),t("li",null,[e("Yethal created "),t("a",Qn,[e("Update working_with_tables.md"),l(n)])]),t("li",null,[e("morzel85 created "),t("a",Rn,[e("Update loading_data.md"),l(n)])]),t("li",null,[e("stormasm created "),t("a",Dn,[e("update section on aliases for adding pipes and persisting"),l(n)])]),t("li",null,[e("raboof created "),t("a",$n,[e("fix typo required->require"),l(n)])]),t("li",null,[e("rgwood created "),t("a",Wn,[e("Document PATH configuration"),l(n)])]),t("li",null,[e("Sygmei created "),t("a",Bn,[e('Fix "Concatenate tables" section from "Table docs"'),l(n)])]),t("li",null,[e("Cyborus04 created "),t("a",On,[e("Fix command-less "),Vn,e(" example"),l(n)])]),t("li",null,[e("Szune created "),t("a",Pn,[e("Typo fix in 2022-04-12-nushell_0_61.md"),l(n)])]),t("li",null,[e("fennewald created "),t("a",Hn,[e("Update coming_from_bash.md"),l(n)])])]),Yn,t("ul",null,[t("li",null,[e("fdncred created "),t("a",Zn,[e("update get_os_icon for wsl"),l(n)]),e(", and "),t("a",Gn,[e("update type-o for windows"),l(n)]),e(", and "),t("a",Kn,[e("use $nu.os-info vs (sys).host for speed"),l(n)])]),t("li",null,[e("raboof created "),t("a",Xn,[e("custom completions: git: 'git fetch'"),l(n)])]),t("li",null,[e("Yethal created "),t("a",Jn,[e("Update nuschiit.nu"),l(n)]),e(", and "),t("a",el,[e("Add webscraping and gitlab scanning scripts"),l(n)])]),t("li",null,[e("kubouch created "),t("a",tl,[e("Change conda activation scripts to be a module"),l(n)])]),t("li",null,[e("hustcer created "),t("a",nl,[e("Fix completions for "),ll,e(" and "),rl,l(n)])]),t("li",null,[e("ZetaNumbers created "),t("a",ol,[e('fix: make complitions referred to undefinded "nu-complete files"'),l(n)])])]),sl,t("ul",null,[t("li",null,[e("sholderbach created "),t("a",al,[e("Change keybinding for external editor"),l(n)]),e(", and "),t("a",hl,[e("Prepare the 0.5.0 release"),l(n)]),e(", and "),t("a",il,[e("Fix README and lib.rs code examples"),l(n)]),e(", and "),t("a",ul,[e("Add doctests back to the CI"),l(n)]),e(", and "),t("a",dl,[e("Vi additions and fixes by @zim0369"),l(n)]),e(", and "),t("a",cl,[e("Attempt fix of "),pl,l(n)]),e(", and "),t("a",_l,[e("Fix the CI badge"),l(n)]),e(", and "),t("a",fl,[e("Change the CI to use caching"),l(n)]),e(", and "),t("a",gl,[e("Add better options for screen clearing"),l(n)]),e(", and "),t("a",bl,[e("Add explicit "),ml,l(n)])]),t("li",null,[e("elferherrera created "),t("a",kl,[e("Buffer editor keybinding"),l(n)]),e(", and "),t("a",wl,[e("line buffer editor"),l(n)])]),t("li",null,[e("Tropid created "),t("a",yl,[e("Only partial complete suggestions when input is a prefix"),l(n)])]),t("li",null,[e("gipsyh created "),t("a",vl,[e("Append whitespace after selecting menu"),l(n)])]),t("li",null,[e("zim0369 created "),t("a",xl,[e("Add vim's "),Nl,e(" binding"),l(n)]),e(", and "),t("a",Cl,[e("Implements vim's prepend to start binding"),l(n)])])])])}const zl=o(u,[["render",Al],["__file","2022-05-03-nushell_0_62.html.vue"]]);export{zl as default};
