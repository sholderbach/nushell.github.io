import{_ as s,z as o,A as c,X as a,C as t,D as e,a6 as r}from"./framework.3d018c9f.js";const p={},i={id:"frontmatter-title-for-dataframe",tabindex:"-1"},l=a("a",{class:"header-anchor",href:"#frontmatter-title-for-dataframe","aria-hidden":"true"},"#",-1),d={class:"command-title"},u=r(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; concatenate </code></p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Concatenate string</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">let</span> other <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>za xs cd<span class="token punctuation">]</span> <span class="token operator">|</span> into <span class="token function">df</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span>abc abc abc<span class="token punctuation">]</span> <span class="token operator">|</span> into <span class="token function">df</span> <span class="token operator">|</span> concatenate <span class="token variable">$other</span>
</code></pre></div>`,5);function h(n,f){return o(),c("div",null,[a("h1",i,[l,t(),a("code",null,e(n.$frontmatter.title),1),t(" for dataframe")]),a("div",d,e(n.$frontmatter.dataframe),1),u])}const k=s(p,[["render",h],["__file","concatenate.html.vue"]]);export{k as default};
