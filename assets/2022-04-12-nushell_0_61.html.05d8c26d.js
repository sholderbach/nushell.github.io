import{_ as o,z as r,A as s,W as h,X as e,C as l,T as t,a6 as a,Q as i}from"./framework.3d018c9f.js";const u="/assets/0_61_help_menu.b2e9579f.png",c="/assets/0_61_completion_descriptions.932281e0.png",d={},p=e("h1",{id:"nushell-0-61",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nushell-0-61","aria-hidden":"true"},"#"),l(" Nushell 0.61")],-1),_=e("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),f=e("p",null,"Today, we're releasing version 0.61 of Nu. This release includes UI improvements, many bugfixes, improved glob support, and more.",-1),g=e("h1",{id:"where-to-get-it",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),l(" Where to get it")],-1),m={href:"https://github.com/nushell/nushell/releases/tag/0.61.0",target:"_blank",rel:"noopener noreferrer"},b={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},k=e("code",null,"cargo install nu",-1),w=a('<p>If you want all the built-in goodies, you can install <code>cargo install nu --all-features</code>.</p><p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="help-menu-elferherrera" tabindex="-1"><a class="header-anchor" href="#help-menu-elferherrera" aria-hidden="true">#</a> Help Menu (elferherrera)</h1><p><img src="'+u+'" alt="Help menu"></p><p>In 0.61, you can now use <code>&lt;ctrl+q&gt;</code> to ask a question/query in Nushell. Currently, this will search through the commands and show you commands that mention the word you type.</p><p>Tab lets you move between the available commands.</p><p>You can use up/down to pick the example you&#39;d like to use. Pressing enter will select the example and insert it into the input for you.</p><h1 id="completion-descriptions-elferherrera-fdncred-jt" tabindex="-1"><a class="header-anchor" href="#completion-descriptions-elferherrera-fdncred-jt" aria-hidden="true">#</a> Completion descriptions (elferherrera, fdncred, jt)</h1><p><img src="'+c+'" alt="Completion descriptions"></p><p>Completions now show you a description of the command you&#39;re completing, if it&#39;s available.</p><h1 id="introducing-env-nu-kubouch" tabindex="-1"><a class="header-anchor" href="#introducing-env-nu-kubouch" aria-hidden="true">#</a> Introducing &#39;env.nu&#39; (kubouch)</h1><p>Just as we added &#39;config.nu&#39; with 0.60, we&#39;re now adding a new additional startup file called &#39;env.nu&#39;. The job of this file is to set up the environment that you&#39;ll run Nushell in. As a result, you&#39;re able to set up important environment variables like <code>$env.NU_LIB_DIRS</code> before &#39;config.nu&#39; begins to run, let you take full advantage of the new library directories you&#39;ve configured.</p><h1 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h1>',13),v=e("code",null,"input",-1),y={href:"https://github.com/nushell/nushell/pull/5017",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/nushell/nushell/pull/4956",target:"_blank",rel:"noopener noreferrer"},j=e("code",null,"open",-1),N={href:"https://github.com/nushell/nushell/pull/5049",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,"from ...",-1),A={href:"https://github.com/nushell/nushell/pull/5054",target:"_blank",rel:"noopener noreferrer"},T=e("code",null,"sort",-1),C=e("code",null,"date to-record",-1),F={href:"https://github.com/nushell/nushell/pull/5058",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/nushell/nushell/pull/5061",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/nushell/nushell/pull/5085",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/nushell/nushell/pull/5087",target:"_blank",rel:"noopener noreferrer"},L=e("code",null,"glob",-1),z={href:"https://github.com/nushell/nushell/pull/5111",target:"_blank",rel:"noopener noreferrer"},P=e("code",null,"not",-1),R={href:"https://github.com/nushell/nushell/pull/5115",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/nushell/nushell/pull/5149",target:"_blank",rel:"noopener noreferrer"},D=e("code",null,"0b[...]",-1),U=e("h1",{id:"improvements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#improvements","aria-hidden":"true"},"#"),l(" Improvements")],-1),q=e("li",null,"Parser improvements by uasi, jt, rgwood",-1),H=e("li",null,"Error improvements by jmoore34, jt, rgwood",-1),W=e("li",null,"Documentation updates by hustcer, vishalsodani, fdncred, futile, kubouch, stormasm, Hofer-Julian, herlon214, rgwood, michel-slm",-1),$=e("li",null,"General code cleanliness fixes by stormasm, bowlofeggs, rgwood, sholderbach, fdncred, herlon214, elferherrera, boyvanduuren, jt",-1),J=e("li",null,"Multiple improvements to known external commands (filaretov, jt)",-1),M={href:"https://github.com/nushell/nushell/pull/5167",target:"_blank",rel:"noopener noreferrer"},O={href:"https://github.com/nushell/nushell/pull/5153",target:"_blank",rel:"noopener noreferrer"},X={href:"https://github.com/nushell/nushell/pull/5141",target:"_blank",rel:"noopener noreferrer"},G=e("code",null,"ls",-1),Q={href:"https://github.com/nushell/nushell/pull/5137",target:"_blank",rel:"noopener noreferrer"},Y=e("code",null,"$in",-1),K={href:"https://github.com/nushell/nushell/pull/5136",target:"_blank",rel:"noopener noreferrer"},Z=e("code",null,"each",-1),ee={href:"https://github.com/nushell/nushell/pull/5133",target:"_blank",rel:"noopener noreferrer"},le=e("code",null,"str replace",-1),ne=e("code",null,"touch",-1),te={href:"https://github.com/nushell/nushell/pull/5119",target:"_blank",rel:"noopener noreferrer"},oe=e("code",null,"=~",-1),re=e("code",null,"!~",-1),se={href:"https://github.com/nushell/nushell/pull/5117",target:"_blank",rel:"noopener noreferrer"},he=e("code",null,"describe",-1),ae={href:"https://github.com/nushell/nushell/pull/5116",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://github.com/nushell/nushell/pull/5108",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://github.com/nushell/nushell/pull/5105",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://github.com/nushell/nushell/pull/5097",target:"_blank",rel:"noopener noreferrer"},de=e("code",null,"input",-1),pe={href:"https://github.com/nushell/nushell/pull/5100",target:"_blank",rel:"noopener noreferrer"},_e=e("code",null,"find",-1),fe={href:"https://github.com/nushell/nushell/pull/5095",target:"_blank",rel:"noopener noreferrer"},ge=e("code",null,"format",-1),me={href:"https://github.com/nushell/nushell/pull/5090",target:"_blank",rel:"noopener noreferrer"},be={href:"https://github.com/nushell/nushell/pull/5001",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://github.com/nushell/nushell/pull/5041",target:"_blank",rel:"noopener noreferrer"},we={href:"https://github.com/nushell/nushell/pull/5026",target:"_blank",rel:"noopener noreferrer"},ve={href:"https://github.com/nushell/nushell/pull/5040",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://github.com/nushell/nushell/pull/5016",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://github.com/nushell/nushell/pull/5052",target:"_blank",rel:"noopener noreferrer"},je={href:"https://github.com/nushell/nushell/pull/5084",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://github.com/nushell/nushell/pull/5009",target:"_blank",rel:"noopener noreferrer"},Ie=e("code",null,"last",-1),Ae={href:"https://github.com/nushell/nushell/pull/5060",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://github.com/nushell/nushell/pull/5003",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://github.com/nushell/nushell/pull/4986",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://github.com/nushell/nushell/pull/4985",target:"_blank",rel:"noopener noreferrer"},Se=e("code",null,"save",-1),Ee={href:"https://github.com/nushell/nushell/pull/4984",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://github.com/nushell/nushell/pull/4968",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://github.com/nushell/nushell/pull/4983",target:"_blank",rel:"noopener noreferrer"},ze=e("code",null,"ls",-1),Pe={href:"https://github.com/nushell/nushell/pull/4974",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://github.com/nushell/nushell/pull/4978",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://github.com/nushell/nushell/pull/4979",target:"_blank",rel:"noopener noreferrer"},De=e("code",null,"$nu.scope.commands",-1),Ue={href:"https://github.com/nushell/nushell/pull/4959",target:"_blank",rel:"noopener noreferrer"},qe=e("code",null,"path join",-1),He={href:"https://github.com/nushell/nushell/pull/4960",target:"_blank",rel:"noopener noreferrer"},We={href:"https://github.com/nushell/nushell/pull/4964",target:"_blank",rel:"noopener noreferrer"},$e=e("code",null,"to nuon",-1),Je={href:"https://github.com/nushell/nushell/pull/4951",target:"_blank",rel:"noopener noreferrer"},Me=e("code",null,"reject",-1),Oe={href:"https://github.com/nushell/nushell/pull/4947",target:"_blank",rel:"noopener noreferrer"},Xe=e("code",null,"cmd.exe",-1),Ge={href:"https://github.com/nushell/nushell/pull/4903",target:"_blank",rel:"noopener noreferrer"},Qe=e("h1",{id:"breaking-changes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#breaking-changes","aria-hidden":"true"},"#"),l(" Breaking changes")],-1),Ye={href:"https://github.com/nushell/nushell/pull/5120",target:"_blank",rel:"noopener noreferrer"},Ke=e("code",null,"str find-replace",-1),Ze=e("code",null,"str replace",-1),el={href:"https://github.com/nushell/nushell/pull/5123",target:"_blank",rel:"noopener noreferrer"},ll=e("code",null,"keep",-1),nl=e("code",null,"take",-1),tl=e("h1",{id:"looking-ahead",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#looking-ahead","aria-hidden":"true"},"#"),l(" Looking ahead")],-1),ol=e("p",null,"The 0.61 release, despite slowing down a little to recoup from the 0.60 release, is one of our largest releases. We averaged over 7 PRs/day over the last three weeks, as many new people joined on and more took an interest in Nushell.",-1),rl=e("p",null,"Areas of upcoming focus will be on improving dataframe support, adding IDE support, and exploring new ways of working with Nushell.",-1);function sl(hl,al){const n=i("ExternalLinkIcon");return r(),s("div",null,[p,_,f,h(" more "),g,e("p",null,[l("Nu 0.61 is available as "),e("a",m,[l("pre-built binaries"),t(n)]),l(" or from "),e("a",b,[l("crates.io"),t(n)]),l(". If you have Rust installed you can install it using "),k,l(".")]),w,e("ul",null,[e("li",null,[v,l(" can now "),e("a",y,[l("suppress output"),t(n)]),l(" (dev-msp)")]),e("li",null,[e("a",x,[l("Termux/Android target support for new engine"),t(n)]),l(" (dscottboggs)")]),e("li",null,[j,l(" can now use "),e("a",N,[I,l(" named custom commands"),t(n)]),l(" (neosam)")]),e("li",null,[l("New "),e("a",A,[T,l(" command for easier sorting"),t(n)]),l(" (jt)")]),e("li",null,[C,l(" for "),e("a",F,[l("working with structured dates"),t(n)]),l(" (jt)")]),e("li",null,[l("New "),e("a",S,[l("starts-with operator"),t(n)]),l(" (fdncred)")]),e("li",null,[l("Can now create "),e("a",E,[l("generic menus for repl interactions"),t(n)]),l(" (elferherrera)")]),e("li",null,[l("New "),e("a",B,[L,l(" command for fancier globbing"),t(n)]),l(" (fdncred)")]),e("li",null,[e("a",z,[l("Unary "),P,l(" support"),t(n)]),l(" (jt)")]),e("li",null,[l("Startup and pre-prompt setup should now be "),e("a",R,[l("significantly faster"),t(n)]),l(" (jt)")]),e("li",null,[e("a",V,[D,l(" support for binary literals"),t(n)]),l(" (merkrafter)")])]),U,e("ul",null,[q,H,W,$,J,e("li",null,[e("a",M,[l("Use recent miette"),t(n)]),l(" (zkat)")]),e("li",null,[e("a",O,[l("Improved logic to path expansion"),t(n)]),l(" (strega-nil-ms)")]),e("li",null,[e("a",X,[G,l(" now outputs date in local time"),t(n)]),l(" (fdncred)")]),e("li",null,[e("a",Q,[Y,l(" should now work in more places"),t(n)]),l(" (jt)")]),e("li",null,[e("a",K,[Z,l(" now also pipes each item as input to the block"),t(n)]),l(" (jt)")]),e("li",null,[l("Add ability to "),e("a",ee,[l("opt-in to normal strings in "),le,t(n)]),l(" (fdncred)")]),e("li",null,[ne,l(" now "),e("a",te,[l("includes all common flags"),t(n)]),l(" (rybertm)")]),e("li",null,[oe,l(" and "),re,l(" now "),e("a",se,[l("use regex"),t(n)]),l(" (rgwood)")]),e("li",null,[he,l(" should now be "),e("a",ae,[l("more precise"),t(n)])]),e("li",null,[l("completions now "),e("a",ie,[l("give priority to non-hidden folders"),t(n)]),l(" (herlon214)")]),e("li",null,[e("a",ue,[l("plugins are now loaded for scripts and commands"),t(n)]),l(" (jt)")]),e("li",null,[e("a",ce,[de,l(" now trims the newline"),t(n)]),l(" (rgwood)")]),e("li",null,[e("a",pe,[l("regex "),_e,l(" now works with records"),t(n)]),l(" (fdncred)")]),e("li",null,[l("Fixes to "),e("a",fe,[ge,l(" for non-basic datatypes"),t(n)]),l(" (rgwood)")]),e("li",null,[l("Added "),e("a",me,[l("raw string support via backticks"),t(n)]),l(" (jt)")]),e("li",null,[l("Switched to "),e("a",be,[l("levenshtein distance sorting for completions"),t(n)]),l(" (jt)")]),e("li",null,[l("Improvements to "),e("a",ke,[l("line editor state handling"),t(n)]),l(" (sholderbach)")]),e("li",null,[l("Treat "),e("a",we,[l("prompt indicators as commands"),t(n)]),l(" (elferherrera)")]),e("li",null,[l("Added "),e("a",ve,[l("record, list, and table to signature types"),t(n)]),l(" (kubouch)")]),e("li",null,[l("Improvements to "),e("a",ye,[l("default git completions"),t(n)]),l(" (naufraghi)")]),e("li",null,[l("Prompts "),e("a",xe,[l("can now be simple strings"),t(n)]),l(" (jt)")]),e("li",null,[l("Sets "),e("a",je,[l("LAST_EXIT_CODE on parse errors"),t(n)]),l(" (rgwood)")]),e("li",null,[l("Passed "),e("a",Ne,[l("more metadata through filter commands"),t(n)]),l(" (rrcwang)")]),e("li",null,[Ie,l(" now returns a "),e("a",Ae,[l("simple value for single items"),t(n)]),l(" (jt)")]),e("li",null,[l("Fixed "),e("a",Te,[l("loops not terminating with ctrl-c"),t(n)]),l(" (jt)")]),e("li",null,[l("Added "),e("a",Ce,[l("bounded channels for backpressure"),t(n)]),l(" (b333z)")]),e("li",null,[l("Added "),e("a",Fe,[l("streaming support to "),Se,t(n)]),l(" (b333z)")]),e("li",null,[e("a",Ee,[l("Support for passing binary data into run-external"),t(n)]),l(" (b333z)")]),e("li",null,[e("a",Be,[l("Fix for alias imports"),t(n)]),l(" (filaretov, jt)")]),e("li",null,[e("a",Le,[l("Fix for "),ze,l(" when file is a socket on macOS"),t(n)]),l(" (fdncred)")]),e("li",null,[e("a",Pe,[l("Better tilde expansion"),t(n)]),l(" (filaretov)")]),e("li",null,[l("Added "),e("a",Re,[l("keywords to help messages"),t(n)]),l(" (kubouch)")]),e("li",null,[l("Removed "),e("a",Ve,[l("is_private from "),De,t(n)]),l(" (kubouch)")]),e("li",null,[e("a",Ue,[l("Fix for "),qe,l(" on streams"),t(n)]),l(" (jt)")]),e("li",null,[e("a",He,[l("Fixes to environment defaults"),t(n)]),l(" (jt)")]),e("li",null,[e("a",We,[l("Adding escapes to "),$e,t(n)]),l(" (jt)")]),e("li",null,[l("Improvements to the "),e("a",Je,[Me,l(" command"),t(n)]),l(" (jt)")]),e("li",null,[l("Fix to the "),e("a",Oe,[l("precedence parser"),t(n)]),l(" (jt)")]),e("li",null,[l("Calling out through "),Xe,l(),e("a",Ge,[l("no longer uses AutoRun"),t(n)]),l(" (LebsterFace)")])]),Qe,e("ul",null,[e("li",null,[e("a",Ye,[Ke,l(" is now "),Ze,t(n)])]),e("li",null,[e("a",el,[ll,l(" is now "),nl,t(n)])])]),tl,ol,rl])}const ul=o(d,[["render",sl],["__file","2022-04-12-nushell_0_61.html.vue"]]);export{ul as default};
