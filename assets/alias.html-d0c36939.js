import{_ as t,p as o,q as l,Q as a,t as s,v as n,a1 as r}from"./framework-344bb0e4.js";const i={},c={id:"frontmatter-title-for-core",tabindex:"-1"},p=a("a",{class:"header-anchor",href:"#frontmatter-title-for-core","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=r(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; alias (name) (initial_value)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>name</code>: name of the alias</li><li><code>initial_value</code>: equals sign followed by value</li></ul><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><p>This command is a parser keyword. For details, check: https://www.nushell.sh/book/thinking_in_nu.html</p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Alias ll to ls -l</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">alias</span> ll <span class="token operator">=</span> <span class="token function">ls</span> <span class="token parameter variable">-l</span>
</code></pre></div><p>Make an alias that makes a list of all custom commands</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">alias</span> customs <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$nu</span>.scope.commands <span class="token operator">|</span> where is_custom <span class="token operator">|</span> get <span class="token builtin class-name">command</span><span class="token punctuation">)</span>
</code></pre></div>`,11);function m(e,u){return o(),l("div",null,[a("h1",c,[p,s(),a("code",null,n(e.$frontmatter.title),1),s(" for core")]),a("div",d,n(e.$frontmatter.core),1),h])}const _=t(i,[["render",m],["__file","alias.html.vue"]]);export{_ as default};
