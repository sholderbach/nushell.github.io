import{_ as n,p as o,q as i,Q as a,t as s,v as t,a1 as r}from"./framework-344bb0e4.js";const c={},d={id:"frontmatter-title-for-core",tabindex:"-1"},l=a("a",{class:"header-anchor",href:"#frontmatter-title-for-core","aria-hidden":"true"},"#",-1),p={class:"command-title"},h=r(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; hide (module) (members)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>module</code>: Module or module file</li><li><code>members</code>: Which members of the module to import</li></ul><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><p>Definitions are hidden by priority: First aliases, then custom commands.</p><p>This command is a parser keyword. For details, check: https://www.nushell.sh/book/thinking_in_nu.html</p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Hide the alias just defined</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">alias</span> lll <span class="token operator">=</span> <span class="token function">ls</span> -l<span class="token punctuation">;</span> hide lll
</code></pre></div><p>Hide a custom command</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> def say-hi <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;Hi!&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> hide say-hi
</code></pre></div>`,12);function u(e,m){return o(),i("div",null,[a("h1",d,[l,s(),a("code",null,t(e.$frontmatter.title),1),s(" for core")]),a("div",p,t(e.$frontmatter.core),1),h])}const _=n(c,[["render",u],["__file","hide.html.vue"]]);export{_ as default};
