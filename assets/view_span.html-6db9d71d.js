import{_ as n,p as r,q as o,Q as e,t as s,v as t,a1 as d}from"./framework-344bb0e4.js";const i={},p={id:"frontmatter-title-for-debug",tabindex:"-1"},c=e("a",{class:"header-anchor",href:"#frontmatter-title-for-debug","aria-hidden":"true"},"#",-1),l={class:"command-title"},h=d(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; view span (start) (end)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>start</code>: start of the span</li><li><code>end</code>: end of the span</li></ul><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><p>This command is meant for debugging purposes. It allows you to view the contents of nushell spans. One way to get spans is to pipe something into &#39;debug --raw&#39;. Then you can use the Span { start, end } values as the start and end values for this command.</p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>View the source of a span. 1 and 2 are just example values. Use the return of debug -r to get the actual values</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> some <span class="token operator">|</span> pipeline <span class="token operator">|</span> or <span class="token operator">|</span> variable <span class="token operator">|</span> debug -r<span class="token punctuation">;</span> view span <span class="token number">1</span> <span class="token number">2</span>
</code></pre></div>`,9);function u(a,m){return r(),o("div",null,[e("h1",p,[c,s(),e("code",null,t(a.$frontmatter.title),1),s(" for debug")]),e("div",l,t(a.$frontmatter.debug),1),h])}const g=n(i,[["render",u],["__file","view_span.html.vue"]]);export{g as default};
