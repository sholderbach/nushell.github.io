import{_ as n,z as o,A as r,X as e,C as s,D as t,a6 as l}from"./framework.3d018c9f.js";const i={},c={id:"frontmatter-title-for-filesystem",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#frontmatter-title-for-filesystem","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=l(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; rm (filename) ...rest --trash --permanent --recursive --force --verbose --interactive --interactive-once</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>filename</code>: the path of the file you want to remove</li><li><code>...rest</code>: additional file path(s) to remove</li><li><code>--trash</code>: move to the platform&#39;s trash instead of permanently deleting</li><li><code>--permanent</code>: delete permanently, ignoring the &#39;always_trash&#39; config option</li><li><code>--recursive</code>: delete subdirectories recursively</li><li><code>--force</code>: suppress error when no file</li><li><code>--verbose</code>: print names of deleted files</li><li><code>--interactive</code>: ask user to confirm action</li><li><code>--interactive-once</code>: ask user to confirm action only once</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Delete, or move a file to the trash (based on the &#39;always_trash&#39; config option)</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">rm</span> file.txt
</code></pre></div><p>Move a file to the trash</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">rm</span> <span class="token parameter variable">--trash</span> file.txt
</code></pre></div><p>Delete a file permanently, even if the &#39;always_trash&#39; config option is true</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">rm</span> <span class="token parameter variable">--permanent</span> file.txt
</code></pre></div><p>Delete a file, ignoring &#39;file not found&#39; errors</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">rm</span> <span class="token parameter variable">--force</span> file.txt
</code></pre></div><p>Delete all 0KB files in the current directory</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span> <span class="token operator">|</span> where size <span class="token operator">==</span> 0KB <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">type</span> <span class="token operator">==</span> <span class="token function">file</span> <span class="token operator">|</span> each <span class="token punctuation">{</span> <span class="token function">rm</span> <span class="token variable">$in</span>.name <span class="token punctuation">}</span> <span class="token operator">|</span> null
</code></pre></div>`,15);function f(a,m){return o(),r("div",null,[e("h1",c,[p,s(),e("code",null,t(a.$frontmatter.title),1),s(" for filesystem")]),e("div",d,t(a.$frontmatter.filesystem),1),h])}const g=n(i,[["render",f],["__file","rm.html.vue"]]);export{g as default};
