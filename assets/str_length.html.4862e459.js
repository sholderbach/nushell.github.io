import{_ as n,z as r,A as o,X as e,C as t,D as s,a6 as l}from"./framework.3d018c9f.js";const i={},c={id:"frontmatter-title-for-strings",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#frontmatter-title-for-strings","aria-hidden":"true"},"#",-1),d={class:"command-title"},p=l(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; str length ...rest</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: For a data structure input, replace strings at the given cell paths with their length</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Return the lengths of multiple strings</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;hello&#39;</span> <span class="token operator">|</span> str length
</code></pre></div><p>Return the lengths of multiple strings</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;hi&#39;</span> <span class="token string">&#39;there&#39;</span><span class="token punctuation">]</span> <span class="token operator">|</span> str length
</code></pre></div>`,9);function g(a,u){return r(),o("div",null,[e("h1",c,[h,t(),e("code",null,s(a.$frontmatter.title),1),t(" for strings")]),e("div",d,s(a.$frontmatter.strings),1),p])}const m=n(i,[["render",g],["__file","str_length.html.vue"]]);export{m as default};
