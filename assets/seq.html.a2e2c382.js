import{_ as t,z as r,A as o,X as e,C as s,D as n,a6 as c}from"./framework.3d018c9f.js";const p={},l={id:"frontmatter-title-for-generators",tabindex:"-1"},d=e("a",{class:"header-anchor",href:"#frontmatter-title-for-generators","aria-hidden":"true"},"#",-1),i={class:"command-title"},h=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; seq ...rest</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: sequence values</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>sequence 1 to 10</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">seq</span> <span class="token number">1</span> <span class="token number">10</span>
</code></pre></div><p>sequence 1.0 to 2.0 by 0.1s</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">seq</span> <span class="token number">1.0</span> <span class="token number">0.1</span> <span class="token number">2.0</span>
</code></pre></div><p>sequence 1 to 5, then convert to a string with a pipe separator</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">seq</span> <span class="token number">1</span> <span class="token number">5</span> <span class="token operator">|</span> str <span class="token function">join</span> <span class="token string">&#39;|&#39;</span>
</code></pre></div>`,11);function u(a,g){return r(),o("div",null,[e("h1",l,[d,s(),e("code",null,n(a.$frontmatter.title),1),s(" for generators")]),e("div",i,n(a.$frontmatter.generators),1),h])}const f=t(p,[["render",u],["__file","seq.html.vue"]]);export{f as default};
