import{_ as e,z as a,A as t,a6 as o}from"./framework.3d018c9f.js";const d={},c=o(`<h1 id="math" tabindex="-1"><a class="header-anchor" href="#math" aria-hidden="true">#</a> Math</h1><p>何かの作業をしているとき、いくつかの数字を足し算したくなるときがあります。Nu には基本的な数学演算が用意されています。</p><p>&quot;math mode&quot;にするには、コマンドの先頭に<code>=</code>をつけます。これにより演算子を使用するコマンドを書くことができます。<code>where</code>コマンドのように自動でおこなってくれるコマンドもあります。</p><h2 id="四則演算" tabindex="-1"><a class="header-anchor" href="#四則演算" aria-hidden="true">#</a> 四則演算</h2><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; = 1 + 3
4
</code></pre></div><p>Nu では足し算、引き算、掛け算、割り算をそれぞれ<code>+</code>,<code>-</code>,<code>*</code>そして<code>/</code>演算子でおこなうことができます。演算子の優先順位が考慮されるので<code>1 + 2 * 3</code>は<code>1 + (2 * 3)</code>として扱われます。</p><h2 id="括弧" tabindex="-1"><a class="header-anchor" href="#括弧" aria-hidden="true">#</a> 括弧</h2><p>math mode では括弧を利用して数式をグループ化できます。これにより足し算を優先したいときは<code>(1 + 2) * 3</code>と書くことができます。</p><h2 id="inとnot-in" tabindex="-1"><a class="header-anchor" href="#inとnot-in" aria-hidden="true">#</a> <code>in</code>と<code>not-in</code></h2><p><code>in</code>と<code>not-in</code>演算子を使って、値が集合に含まれるかどうかを調べることができます。</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; = 1 in [1 2 3]
true
</code></pre></div><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; = 1 not-in [1 2 3]
false
</code></pre></div><h2 id="と" tabindex="-1"><a class="header-anchor" href="#と" aria-hidden="true">#</a> <code>=~</code>と<code>!~</code></h2><p><code>=~</code>と<code>!~</code>演算子を使って文字列が他の文字列の中にあるかどうかを調べることができます。</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; = &quot;foobar&quot; =~ &quot;foo&quot;
true
</code></pre></div><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; = &quot;foobar&quot; !~ &quot;baz&quot;
true
</code></pre></div><h2 id="比較演算子" tabindex="-1"><a class="header-anchor" href="#比較演算子" aria-hidden="true">#</a> 比較演算子</h2><p>以下の比較演算子が利用可能です。</p><ul><li><code>&lt;</code> - less than</li><li><code>&lt;=</code> - less than or equal to</li><li><code>&gt;</code> - greater than</li><li><code>&gt;=</code> - greater than or equal to</li><li><code>==</code> - equal to</li><li><code>!=</code> - not equal to</li></ul><h2 id="複合演算子" tabindex="-1"><a class="header-anchor" href="#複合演算子" aria-hidden="true">#</a> 複合演算子</h2><p><code>&amp;&amp;</code>と<code>||</code>を使ってブーリアンを返す２つの操作を結合できます。例えば: <code>ls | where name in [&quot;one&quot; &quot;two&quot; &quot;three&quot;] &amp;&amp; size &gt; 10kb</code></p>`,21),n=[c];function r(i,h){return a(),t("div",null,n)}const s=e(d,[["render",r],["__file","math.html.vue"]]);export{s as default};
